% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pruneModules.R
\name{pruneModules}
\alias{pruneModules}
\title{Prune modules}
\usage{
pruneModules(
  initial_modules,
  network = NULL,
  method = c("UIK_adj", "UIK_adj_kIM", "topN"),
  N = 50L,
  min_module_size = 20L,
  min_median_module_size = 20L,
  max_frac_modules_lost = 0.02,
  exponent = 1L
)
}
\arguments{
\item{initial_modules}{Data frame of the initial modules with columns 'regulator', 'target' and 'weight' containing the transcriptional regulators, their target genes and the edge weights between each regulator-target pair.}

\item{network}{Consensus network in an igraph format.}

\item{method}{Pruning method, one of "UIK_adj", "UIK_adj_kIM" or "topN".}

\item{N}{An integer or a named integer vector specifying the desired pruned module size(s) in case of the method 'topN'.}

\item{min_module_size}{Integer, the lower threshold of module size in case of the methods 'UIK_adj' and UIK_adj_kIM'.}

\item{min_median_module_size}{Integer, the lower threshold of median module size in case of the methods 'UIK_adj' and UIK_adj_kIM'.}

\item{max_frac_modules_lost}{Numeric, the upper threshold of the fraction of removed modules in case of the methods 'UIK_adj' and UIK_adj_kIM'.}

\item{exponent}{Integer, the exponent the regulator-target adjacency and intramodular connectivity is raised to the power of during the cumulative sum curve calculation in case of the methods 'UIK_adj' and UIK_adj_kIM'.}
}
\value{
Data frame of the pruned modules.
}
\description{
Prunes the initial modules by keeping only the best targets of each transcriptional regulator. 3 methods are implemented to choose the best targets: 1) topN: takes a fixed number of targets per regulator with the highest regulator-target adjacencies. 2) UIK_adj: applies a dynamic stepwise pruning based on the regulator-target adjacencies, and 3) applies a dynamic stepwise pruning based on the regulator-target adjacencies and intramodular connectivities.
}
\examples{
pruned_modules <- pruneModules(initial_modules, consensus_network, "UIK_adj_kIM")
}
