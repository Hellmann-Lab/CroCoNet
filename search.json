[{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"experimental-design","dir":"Articles","previous_headings":"Input data","what":"Experimental design","title":"CroCoNet","text":"CroCoNet designed used scRNA-seq data multiple species multiple replicates (clones) per species. reliably infer networks, dataset sufficient expression variance across cells (several different conditions, time-series experiment dynamic process mixture cell types). meaningful analysis, conditions, pseudotemporal trajectory cell type composition comparable across species possible. example dataset contains 3 species: human, gorilla cynomolgus macaque 3 human clones 3 individuals (H1c1, H2c1, H3c1), 2 gorilla clones 1 individual (G1c1, G1c2) 4 cynomolgus macaque clones 2 individuals (C1c1, C1c2, C2c1 C2c2). several steps pipeline, clones need matched species. make possible, data frame clone2species created specifies species clone belongs . looks like example data shown : generate example data, 9 iPS cell lines differentiated neural progenitor cells (NPCs) course 9 days, samples 6 different time points sequenced using scRNA-seq. protocol timeline species make results comparable.","code":"clone2species <- readRDS(\"RDS/clone2species.rds\")"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"initial-processing","dir":"Articles","previous_headings":"Input data","what":"Initial processing","title":"CroCoNet","text":"pipeline assumes user already done standard processing steps transcriptomic data, including mapping, QC normalization. addition, required shared feature space across species. genes can matched using orthology information case closely related species transferring annotation one species genomes others using tool Liftoff [1]. also recommended perform cell type annotation pseudotime inference applicable. steps, SingleCellExperiment (SCE) object created contains raw counts, normalized counts metadata (including information species, clone, cell type assignment inferred pseudotime). case primate single-cell dataset, created shared feature space transferring human genome annotation gorGor6 macFas6 genomes via Liftoff. performed nornalization using scran [2], pseudotime inference using SCORPIUS [3] cell type annotation using singleR [4] embryoid body dataset Rhodes et al. [5] reference. found pseudotime trajectories reasonably well-aligned across 3 species, confirming comparability. Pseudotime trajectory early primate neural differentiation dataset coloured sampling day, pseudotime, species cell type.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"network-inference","dir":"Articles","previous_headings":"Input data","what":"Network inference","title":"CroCoNet","text":"applying pipeline, user also infer co-expression networks per clone using method choice, example GRNBoost2 [6] (metric: decision tree-based importance scores) correlatePairs [2] (metric: Spearman’s correlation). networks restricted connections transcriptional regulators target genes, CroCoNet relies also connections target genes . clones different cell type compositions, recommended downsample way proprtions cell types always , order disentangle species cell type differences. can make sense create several downsamplings clone run network inference , way valuable data discarded. network inference algorithm involving stochastic steps (case e.g. GRNBoost2), can make results robust run algorithm several times data different random seeds. network reconstructions available TSV files row corresponds edge. least 3 columns containing 1) 1st gene forms edge, 2) 2nd gene forms edge, 3) edge weight. TSV files named using following convention: nameOfClone.tsv 1 network output per clone nameOfClone_index.tsv several network outputs per clone. case example dataset, inferred networks using GRNBoost2 genes potential regulators. run algorithm 10 times count matrix clones, produced 9×10 TSV files stored directory GRNBoost2_output/.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"loading-and-processing-the-networks","dir":"Articles","previous_headings":"","what":"Loading and processing the networks","title":"CroCoNet","text":"first part workflow, output files network inference loaded igraph objects, edges filtered edge weights normalized (desired), finally, phylogeny-aware consensus network calculated across clones species. network inference algorithm distinguish correlated anti-correlated gene pairs, piece information can also added calculating Spearman’s correlation gene pair.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"loading-the-networks-as-igraphs","dir":"Articles","previous_headings":"Loading and processing the networks","what":"Loading the networks as igraphs","title":"CroCoNet","text":"first step, TSV files containing network reconstructions loaded summarized list igraph [7] objects per clone help loadNetworks function. several versions network reconstruction per clone due different subsamplings/runs (needs specified parameter rep), edge weights averaged across , single combined igraph object returned clone. network inference method produces output directed edges, .e. geneA-geneB geneB-geneA can present (needs specified parameter directed), edge weights inferred gene pair opposite directions also averaged. edge missing one network versions/directions, regarded 0 calculation mean. number times edge occurs across different versions directions can also used filter rare edges can removed altogether (needs specified parameter min_occurrence). can helpful 1) denoise networks 2) decrease computational power needed next steps. case example dataset, 9×10 TSV files located “GRNBoost2_output/” directory loaded list 9 igraph objects (1 network reconstruction 9 clones). parameter rep set 10 GRNBoost2 run 10 times clone, parameter directed left TRUE (default), GRNBoost2 produces directed output. result, edge weights averaged across 10 runs 2 directions edge. Since parameter min_occurrece left 2 (default), edges occur across runs directions removed. resulting igraph objects store edge weight number occurrences edge: example edges raw network clone C2c2","code":"network_list_raw <- loadNetworks(\"GRNBoost2_output/\",                                   clone_names = clone2species$clone,                                  rep = 10,                                  directed = TRUE,                                  min_occurrence = 2)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"removing-gene-pairs-with-overlapping-annotations","dir":"Articles","previous_headings":"Loading and processing the networks","what":"Removing gene pairs with overlapping annotations","title":"CroCoNet","text":"Mapping counting problematic overlapping genomic features: parts reads one gene can assigned gene, leading correlated expression profiles simply due genomic position. marginal effect results DE analysis, can cause false positive edges high edge weights case network analysis. potential artefacts can circumvented removing edges genes overlapping annotations genome(s) least 1 species. , genome annotations needed list format: function removeOverlappingGenePairs determines genomic positions network genes based GTFs, identifies gene pairs overlapping annotations genome removed gene pairs networks: step, genomic distance also added gene pair network (distance regarded Inf two genes located different chromosomes): example edges network clone C2c2 removing gene pairs overlapping annotation adding genomic distances","code":"gtf_list <- list(human = plyranges::read_gff(\"genome_annotations/hg38.gtf\"),                  gorilla = plyranges::read_gff(\"genome_annotations/gorGor6_liftoff.gtf\"),                  cynomolgus = plyranges::read_gff(\"genome_annotations/macFas6_liftoff.gtf\")) network_list_raw_filt <- removeOverlappingGenePairs(network_list_raw,                                                      gtf_list = gtf_list,                                                      clone2species = clone2species,                                                      gene_col = \"gene_name\")"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"normalizing-edge-weights","dir":"Articles","previous_headings":"Loading and processing the networks","what":"Normalizing edge weights","title":"CroCoNet","text":"Normalizing edge weights 0 1 recommended, makes interpretable adjacencies ensures network concepts connectivity applicable. 2 approaches normalization implemented part nornmalizeEdgeWeights function: Unsigned network (default): Gene pairs high negative edge weights considered connected gene pairs high positive edge weights. Therefore negative edge weights first replaced absolute values, edge weights scaled maximum weight across networks: =|w|max(|w|)=  \\frac{|w|}{max(|w|)} aa edge weight (adjacency) normalization ww edge weight normalization. transformation, adjacencies around 0 correspond former low positive low negative values, adjacencies around 1 correspond former high positive high negative values. Signed network: Gene pairs high negative edge weights considered unconnected. Therefore edge weights transformed 0 1 using min-max normalization: =w−min(w)max(w)−min(w)= \\frac{w - min(w)}{max(w) - min(w)} transformation, adjacencies around 0 correspond former high negative values adjacencies around 1 correspond former high positive values. case example dataset, opted unsigned network: example edges network clone C2c2 normalizing edge weights Using resulting adjacencies, also calculated connectivity (kik_i) gene, sum adjacencies given gene others: ki=∑j≠iaijk_i = \\sum_{j \\neq } a_{ij} adjacencies connectivites highly left-skewed distribution (adjacencies range 0 1, median 0.000213, connectivities range 0 ~17, median 0.256). expected since connectivities many biological networks, including gene regulatory networks, reported follow scale-free distribution [8–10] (although extent varies across systems metrics [11]). distribution od adjacencies connectivities networks 9 clones.","code":"network_list <- normalizeEdgeWeights(network_list_raw_filt,                                      signed = FALSE)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"creating-the-consensus-network","dir":"Articles","previous_headings":"Loading and processing the networks","what":"Creating the consensus network","title":"CroCoNet","text":"next step workflow, networks across different clones different species integrated single consensus network phylogeny-aware manner. consensus network contains edges detected least 1 clones. edge, consensus adjacency calculated weighted mean clonewise adjacencies. weighted mean corrects 1) phylogenetic distances species, 2) different numbers clones per species. result, approach downweighs edge weights clones 1) belong closely related species, 2) belong species many clones, imbalanced sampling across phylogenetic tree bias consensus network. edge present one clones, edge weight clone regarded 0 calculation weighted mean. phylogeny-aware consensus desired, phylogenetic tree provided. case example dataset, mammalian tree Bininda-Emonds et al. [12] subsetted Homo sapiens (human), Gorilla gorilla (gorilla) Macaca Fascicularis (cynomolgus): Phylogenetic tree species. Using tree information species clone belongs , consensus network can calculated help function createConsensus: example edges consensus network","code":"tree <- readRDS(\"RDS/tree.rds\") consensus_network <- createConsensus(network_list,                                       clone2species = clone2species,                                       tree = tree)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"adding-the-direction-of-correlation","dir":"Articles","previous_headings":"Loading and processing the networks","what":"Adding the direction of correlation","title":"CroCoNet","text":"case networks inferred using method distinguish positively negatively correlated gene pairs, useful add information lines analysis makes sense separate two (e.g. makes biological sense calculate eigengenes activated repressed target genes transcriptional regulator separately). network inference method output edges positive negative edge weights first place (e.g. correlation-based methods), information already added step “Normalizing edge weights” calculated . step need performed, directionality determined edge calculating modified Spearman’s correlation expression profiles 2 genes form edge taking sign modified Spearman’s rho direction. calculation relies approximate version Spearman’s rho, significance testing blocking implemented correlatePairs [2]. case example dataset, networks inferred using GRNBoost2 provide information direction regulation, therefore necessary step. get expression profiles network genes, SCE object needs loaded: calculation directionality done function addDirectionality: example edges consensus network adding direction correlation","code":"sce <- readRDS(\"RDS/sce.rds\") consensus_network <- addDirectionality(consensus_network, sce)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"module-assignment","dir":"Articles","previous_headings":"","what":"Module assignment","title":"CroCoNet","text":"consensus network calculated, can used assign co-expression modules jointly species. resulting modules combine co-expression information species bias due uneven sampling across phylogenetic tree minimized. center module transcriptional regulator modules assigned 2 main steps: 1) large initial modules created selecting fixed number target genes per regulator, 2) initial modules pruned keep best targets regulator.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"selecting-key-transcriptional-regulators","dir":"Articles","previous_headings":"Module assignment","what":"Selecting key transcriptional regulators","title":"CroCoNet","text":"First, transcriptional regulators form cores co-expression modules selected. identify regulators relevant biological process hand, useful approach combine prior biological knowledge information dataset (implemented function getRegulators). prior biological knowledge, recommend select transcriptional regulators known binding motifs based motif databases. get information, user can choose following databases: JASPAR 2024 vertebrate core [13], JASPAR 2024 unvalidated [13], IMAGE database [14], combination . Alternatively, user can provide custom list regulators selected preferred method. information dataset, recommend select transcriptional regulators among highly variable genes data. defining highly variable genes, getRegulators relies scran::getTopHVGs [2]. Briefly, species trend fitted variance mean log-expression values across genes, fitted value gene regarded technical component variation, residual trend regarded biological component variation. genes positive biological component selected highly variable genes species (alternatively, stringent variance cutoff, adjusted p-value cutoff, fixed number genes, fixed percentage genes can also defined). final set highly variable genes, union highly variable genes taken across species. case example dataset, used transcriptional regulators 1) annotated motif 3 motif databases (JASPAR 2024 vertebrate core, JASPAR 2024 unvalidated IMAGE) 2) positive biological component variance species: gave us 836 transcriptional regulators included well-known pluripotency factors early neural regulators:","code":"regulators <- getRegulators(sce,                              source = c(\"jaspar_core\", \"jaspar_unvalidated\", \"image\")) length(regulators) #> [1] 836 c(\"NANOG\", \"POU5F1\", \"PAX6\", \"NEUROD4\") %in% regulators #> [1] TRUE TRUE TRUE TRUE"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"assigning-initial-modules","dir":"Articles","previous_headings":"Module assignment","what":"Assigning initial modules","title":"CroCoNet","text":"regulators provide starting point module assignment selected, initial module can defined around using function assignInitialModules. modules contain regulator N best target genes (N recommended 1000 5000). choosing best targets, genes ranked based strongly connected regulator (regulator-target adjacency). case example dataset, defined 4000 number genes initial modules: Part POU5F1 initial module resulting modules obviously large point biologically meaningful. purpose step rather select uniformly sized pool genes modules perform pruning step .","code":"initial_modules <- assignInitialModules(consensus_network,                                          regulators = regulators,                                          N = 4000)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"module-pruning","dir":"Articles","previous_headings":"Module assignment","what":"Module pruning","title":"CroCoNet","text":"goal pruning keep best targets transcriptional regulator thereby create biologically meaningful modules consist co-regulated genes shared cellular functions. targets best can defined based 2 metrics: Network concepts used module pruning: regulator-target adjacency intramodular connectivity. Regulator-target adjacency (aregulatora_{\\mathrm{regulator}}): adjacency transcriptional regulator member gene module. ranges 0 1 higher value representing stronger (activating repressing) regulatory relationship. Pro: Pruning based regulator-target adjacencies selects genes whose expression profiles co-vary regulator’s expression profile. Con: Modules created based regulator-target adjacencies alone might fulfill expectation densely connected blocks genes, apart link regulator, target genes often sparse/weak connections within module. Intramodular connectivity (kIM): sum adjacencies specific gene members module. module size n, ranges 0 n - 1 higher value representing gene strongly connected rest module. kIMi(q)=∑j∈qj≠iaijkIM_i^{(q)} = \\sum_{\\substack{j \\q\\\\j \\neq }} a_{ij} Pro: Pruning based intramodular connectivities addition regulator-target adjacencies ensures chosen targets co-vary just main regulator also rest module. intramodular connections targets can carry important information captured links regulator targets alone (e.g. combinatorial regulation). Con: Genes generally high connectivity particularly strong regulatory relationship transcriptional regulator might end final module. initial targets can filtered based one metrics using 2 approaches: topN: Keeps fixed number targets (default: 50) per regulator. Pro: Quick, simple widespread. Con: approach assigns number target genes regulator even though biologically speaking different regulators can effect different numbers genes. number targets cases arbitrary take account structure data hand. UIK: Applies dynamic stepwise pruning using knee-point detection. step, cumulative sum curve based metric choice calculated per module, knee point curve identified using Unit Invariant Knee (UIK) method, targets rank higher knee point kept. modules containing less target genes minimum module size (default: 20) removed pruning step. steps continue percentage removed modules becomes high (default: >2%). Pro: setting minimum module size prevents modules becoming small, exact number target genes per regulator pre-defined, line notion different regulators can effect different numbers genes. also hard cutoffs applied regulator-target adjacencies intramodular connectivities, using knee point detection target genes filtered data-driven way. Con: approach still requires predefined minimum module size. Compared clustering-based module assignment approaches, pruning methods advantage modules allowed overlap, addition module, regulator can assigned another regulator’s module well. line notion genes can fulfill several different functions cell gene regulation can combinatorial. case pruning methods, setting fixed module size threshold minimum module size just biological also technical aspects taken consideration: modules smaller ~20 genes, correlation-based preservation statistics next steps might coupled high uncertainty, therefore avoided. Using metrics approaches described , implemented 3 methods module pruning: topN: Takes fixed number targets per regulator highest regulator-target adjacencies. UIK_adj: Applies dynamic stepwise pruning based regulator-target adjacencies. UIK_adj_kIM: Applies dynamic stepwise pruning based regulator-target adjacencies intramodular connectivities alternately. case example dataset, used method “UIK_adj_kIM”: following figure shows steps pruning process POU5F1 module: Stepwise dynamic pruning approach exemplified POU5F1 module. step, calculated cumulative sum curve regulator-target adjacency intramodular connectivitiy target genes alternately, kept targets fell knee point curve. continued process 3 iterations - module sizes became small possible without falling 20 genes. Part POU5F1 pruned module Since use “UIK_adj_kIM” approach, final module sizes predefined shaped data. particular dataset, number genes pruned modules range 25 63 median 45: Distribution module sizes pruning. Median size: 45.","code":"pruned_modules <- pruneModules(initial_modules,                                 method = \"UIK_adj_kIM\",                                 consensus_network = consensus_network) plotModuleSizeDistribution(pruned_modules)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"visualizing-modules","dir":"Articles","previous_headings":"Module assignment","what":"Visualizing modules","title":"CroCoNet","text":"important connections modules can plotted using function plotNetworks. module, resulting plots show strongest intramodular connections based consensus network genes involved connections. following plot depicts top 300 connections 6 example modules, colored direction correlation: 300 strongest connections 6 example modules. thickness edges represents consensus edge weights color edges represents direction interaction (positively/negatively correlated).","code":"example_modules <- c(\"NANOG\", \"POU5F1\", \"SALL4\",  \"NEUROD4\", \"PAX6\", \"FEZF2\") plotNetworks(example_modules,               pruned_modules,               consensus_network,               color_by = \"direction\")"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"creating-random-modules","dir":"Articles","previous_headings":"Module assignment","what":"Creating random modules","title":"CroCoNet","text":"Along pruned modules, option create random modules well using function createRandomModules. random modules regulators contain number target genes actual pruned modules, target genes randomly drawn network genes. next steps pipeline, actual modules compared random modules terms various statistics check whether two groups modules behave general differently remove individual actual modules show similar characteristics random modules.","code":"genes <- rownames(sce) random_modules <- createRandomModules(pruned_modules,                                        network_genes = genes)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"characterizing-modules","dir":"Articles","previous_headings":"","what":"Characterizing modules","title":"CroCoNet","text":"Since co-expression modules often closely associated cellular function particular gene alone, informative investigate cell types different modules active pathways associated . can achieved example calculating module eigengenes peforming gene set enrichment analysis.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"calculating-module-eigengenes","dir":"Articles","previous_headings":"Characterizing modules","what":"Calculating module eigengenes","title":"CroCoNet","text":"concept adapted WGCNA [15], module eigengene summarizes expression profile entire module, calculated first principal component module expression data. Effectively, weighted mean individual genes’ expression profiles. CroConet, calculation eigengene profiles implemented calculateEigengenes. function outputs metrics well representing expression patterns module, namely mean expression across module members expression regulator. module contains activated repressed targets transcriptional regulator, calculating eigengene (summary expression profiles) across directions regulation make biological sense leads dilution signal. makes sense calculate eigengene either activated targets (direction_of_regulation = “+_only”, default) activated repressed targets separately (direction_of_regulation = “+-_separately”). eigengene across targets desired irrespective direction regulation, direction_of_regulation set “all_together”. case example dataset, calculated module eigengenes activated targets module: Eigengene profile activated POU5F1 module across couple example cells eigengene profiles can plotted heatmap using plotEigengeneHeatmap. focus 6 example modules , contain 3 pluripotency regulators (NANOG, POU5F1 CREBL3) 3 neural regulators (PAX6, NEUROD4 FEZF2): eigengenes example modules. expected, activated targets pluripotency regulators show highest expression levels early pseudotime stages become downregulated later , activated targets neural regulators low expression levels first, become upregulated towards later stages differentiation process.","code":"eigengenes <- calculateEigengenes(regulators,                                   pruned_modules,                                    sce,                                   direction_of_regulation = \"+_only\") eigengenes_examples <- eigengenes %>%   dplyr::filter(module %in% paste0(example_modules, \"(+)\")) %>%   dplyr::mutate(module = factor(module, paste0(example_modules, \"(+)\"))) plotEigengeneHeatmap(eigengenes_examples)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"gene-set-enrichment-analysis","dir":"Articles","previous_headings":"Characterizing modules","what":"Gene set enrichment analysis","title":"CroCoNet","text":"Gene set enrichment analysis offers useful information functional annotation modules. Various databases tools can used analysis, including Gene Ontology (GO) [16, 17] related R package topGO [18], Reactome Pathway Database [19] R package ReactomePA [20], STRING [21] R package STRINGdb [21]. also worth mentioning clusterProfiler [22] provides universal interface enrichment analysis based various sources makes easy analyze compare several different gene sets single run. next steps, perform pathway enrichment analysis 6 example modules using Reactome Pathway Database. First, data frame containing activated targets example modules prepared gene names converted ENTREZ IDs using conversion table stored “sym2enrtez.rds” (created based GENCODE “Entrez gene ids” metadata file corresponding human genome version used mapping). Next, enrichment analysis done using wrapper function clusterProfiler::compareCluster testing implemented ReactomePA::enrichPathway. universe defined network genes. Finally, results plotted modules together: Reactome enrichment analysis 6 example modules. Encouragingly, modules pluripotency regulators show enrichment several pathways related pluripotency (e.g. POU5F1 (OCT4), SOX2, NANOG activate genes related proliferation Transcriptional regulation pluripotent stem cells), modules neural regulators show enrichment several pathways related nerual lineage (e.g. Axon guidance Nervous system development).","code":"sym2entrez <- readRDS(\"RDS/sym2entrez.rds\") example_modules_4_reactome <- pruned_modules %>%   dplyr::filter(regulator %in% example_modules & direction == \"+\") %>%   dplyr::bind_rows(data.frame(regulator = example_modules,                               target = example_modules)) %>%   dplyr::inner_join(sym2entrez, by = c(\"target\" = \"gene_name\")) %>%    dplyr::mutate(regulator = factor(regulator, example_modules)) enrich_res <- clusterProfiler::compareCluster(entrez_id ~ regulator,                                               \"enrichPathway\",                                               example_modules_4_reactome,                                               universe = unique(sym2entrez$entrez_id)) clusterProfiler::dotplot(enrich_res, showCategory = 3)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"module-preservation-within-and-across-species","dir":"Articles","previous_headings":"","what":"Module preservation within and across species","title":"CroCoNet","text":"next part CroCoNet workflow, quantify well-preseved topologies modules different pairs clones, within across species, summarize preservation scores neighbour-joining trees per module.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"calculating-module-preservation-statistics","dir":"Articles","previous_headings":"Module preservation within and across species","what":"Calculating module preservation statistics","title":"CroCoNet","text":"calculation preservation statistics, use joint module assignment derived consensus network compare topological properties directly clonewise networks. way, module always defined set genes, adjacencies connectivities genes can differ clone clone; poorly preserved modules expected many, well-preserved modules expected topological differences. Compared standard approach cross-species module comparison (defining modules species separately cross-tabulating module member genes across species), topology-based metrics can detect way subtle differences. addition, results cross-tabulation strongly affected statistical power: find low overlap across species, difficult disentangle extent due real biological differences extent just due low power module detection first place. contrast, comparison network topology joint module assignment much less dependent power. part function calculatePresStats, 3 preservation statistics (adapted WGCNA [23]) implemented quantify different aspects topological comparison: Correlation adjacencies (cor_adj): correlation edge weights within module network clone1 VS network clone2 cor.adj(q)=cor([net1](q),[net2](q))cor.adj^{(q)} = \\mathrm{cor}(^{[net1](q)}, ^{[net2](q)}) [net](q)^{[net](q)} vector intramodular adjacencies module qq network netnet. Correlation regulator-target adjacencies (cor_adj_regulator): correlation edge weights transcriptional regulator module members network clone1 VS network clone2 cor.adjregulator(q)=cor(aregulator[net1](q),aregulator[net2](q))cor.adj^{    (q)}_{\\mathrm{regulator}} = \\mathrm{cor}(^{     [net1](q)}_{\\mathrm{regulator}}, ^{     [net2](q)}_{\\mathrm{regulator}}) aregulator[net](q)^{     [net](q)}_{\\mathrm{regulator}} vector adjacencies regulator module qq target genes network netnet. Correlation intramodular connectivities (cor_kIM): correlation intramodular connectivities per module member gene network clone1 VS network clone2 cor.kIM(q)=cor(kIM[net1](q),kIM[net2](q))cor.kIM^{(q)} = \\mathrm{cor}(kIM^{[net1](q)}, kIM^{[net2](q)}) kIM[net](q)kIM^{[net](q)} vector intramodular connetivities per gene module qq network netnet. statistics can calculated module jackknifing (setting jackknife TRUE). means function creates possible jackknifed versions input module removing target gene assigned module (regulator never excluded), calculates preservation statistics jackknifed module versions addition original module. advantage using jackknfing confidence interval can calculated module statistic instead just getting single value. Later pipeline, jackknifing can also provide information target genes within conserved/diverged module particularly responsible conservation/divergence. jackknifing desired, user can just set jackknife FALSE also substantially reduce running times. case example dataset, calculated 3 preservation statistics opted using jackknifing: Preservation statistics POU5F1 module one jackknifed module versions couple example clone pairs preservation statistics calculated jackknifing, statistic interest can estimated module whole taking median across jackknifed versions along confidence interval median. summarization performed function summarizeJackknifePresStats: Preservation statistics POU5F1 module couple example clone pairs, summarizing values jackknifed module versions 3 easy--check expectations statistic fulfill good measure module preservation: scores expected higher actual modules random modules. scores expected higher within species across species. difference within-species cross-species scores expected increase increasing phylogenetic distance two species compared. visual check, function plotPresStatDistributions plots distributions preservation scores actual random modules within-species cross-species clone pairs, whereas function plotPresStats plots cross-species scores within-species scores per species pair: Distribution preservation statistics within across species, actual random modules. Cross-species VS within-species preservation scores per species pair actual random modules. plots show applied example dataset, cor.kIM cor.adj fulfill 3 expectations, since differences actual random modules well within-species cross-species comparisons tend higher cor.kIM, use statistic rest analysis.","code":"pres_stats_jk <- calculatePresStats(pruned_modules,                                      network_list,                                     c(\"cor_adj\", \"cor_adj_regulator\", \"cor_kIM\"),                                      clone2species,                                     jackknifing = TRUE) random_pres_stats_jk <- calculatePresStats(random_modules,                                             network_list,                                            c(\"cor_adj\", \"cor_adj_regulator\", \"cor_kIM\"),                                             clone2species,                                            jackknifing = TRUE) pres_stats <- summarizeJackknifeStats(pres_stats_jk) random_pres_stats <- summarizeJackknifeStats(random_pres_stats_jk) plotPresStatDistributions(pres_stats,                            random_pres_stats,                            stats = c(\"cor_adj\", \"cor_adj_regulator\", \"cor_kIM\")) plotPresStats(pres_stats,                random_pres_stats,                c(\"cor_adj\", \"cor_adj_regulator\", \"cor_kIM\"))"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"converting-preservation-scores-to-distance-measures","dir":"Articles","previous_headings":"Module preservation within and across species","what":"Converting preservation scores to distance measures","title":"CroCoNet","text":"preparation tree reconstruction, preservation statistics need converted distance measures. done function convertPresToDist using formula: d=1−p2,d = \\frac{1 - p}{2}, dd distance measure pp preservation statistic. resulting distances range 0 1: distance 0 corresponds preservation score 1, distance 1 corresponds preservation score -1. resulting object list, list element stores distance measures module (original jackknifed module version, jackknifing used) data frame format: Distance measures jackknifed POU5F1 module version “POU5F1_jk_APOE” couple example clone pairs distance measures (jackknifed original) module can organized plotted distance matrix. function plotDistMats can produce plot single module (required input: data frame) several modules together (required input: list data frames), example can used visualize distance matrices 6 example modules (original module versions) side side: distance matrices 6 example modules. apparent based 6 examples distance patterns vary quite bit module module. modules (e.g. FEZF2) general low distance values points high degree preservation, modules (e.g. NEUROD4) tend higher distance values points worse preservation. modules within-species distances overall lower cross-species distances (selection criteria preservation statistic ), magnitude difference constant: case SALL4 module within-species cross-species scores span large similar range, case POU5F1 module ape-cynomolgus cross-species scores drastically higher rest scores.","code":"dist_jk <- convertPresToDist(pres_stats_jk, \"cor_kIM\") random_dist_jk <- convertPresToDist(random_pres_stats_jk, \"cor_kIM\") dist_examples <- dist_jk[paste0(example_modules, \"_orig\")] names(dist_examples) <- example_modules plotDistMats(dist_examples)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"tree-reconstruction","dir":"Articles","previous_headings":"Module preservation within and across species","what":"Tree reconstruction","title":"CroCoNet","text":"able quantitatively compare different patterns preservation, distance measures summarized trees next step workflow. resulting trees stands single module (original jackknifed module version, jackknifing used): tips represent clones branch lengths represent dissimilarity module topology networks 2 clones. trees reconstructed using neighbor-joining algorithm implemented ape:nj. function reconstructTrees wrapper around , tailored specific purpose: output list phylo objects per (jackknifed original) module. function plotTrees can plot one module trees analogously plotDistMats. focus trees 6 example modules : tree reconstructions 6 example modules. line differences among distance matrices, trees also differ module module. FEZF2, module generally low distance measures (.e. high preservation scores), tends short branch lengths tree, NEUROD4, module generally high distance measures (.e. low preservation scores), large tree long branches. case SALL4 module similar within-species cross-species distance measures, clones different species intermixed within tree, case POU5F1 module much higher ape-cynomolgus distances ape-ape cynomolgus-cynomolgus distances, ape cynomolgus clones clearly separated within tree connected long internal branch.","code":"trees_jk <- reconstructTrees(dist_jk) random_trees_jk <- reconstructTrees(random_dist_jk) spec_colors <- c(human = \"#4DAF4A\", gorilla = \"#377EB8\", cynomolgus = \"#9a1ebd\") tree_examples <- trees_jk[paste0(example_modules, \"_orig\")] names(tree_examples) <- example_modules plotTrees(tree_examples, species_colors = spec_colors)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"calculating-tree-based-statistics","dir":"Articles","previous_headings":"Module preservation within and across species","what":"Calculating tree-based statistics","title":"CroCoNet","text":"quantify tell-tale characteristics module trees, various tree-based statistics can calculated: Total tree length: total length branches tree; measures module variability within across species. Diversity species: total length branches connecting clones given species ; measures module variability within particular species. Within-species diversity: sum diversity values across species; measures module variability within species general. Monophyleticity species: Indicates whether tree monophyletic clones given species. module tree monophyletic species interest can module tested divergence species others. Species--branch length: length internal branch connects subtree clones belonging given species subtree clones; measures module variability species interest others. Undefined tree monophyletic given species. Tree-based statistics characterize cross-species conservation network modules. statistics implemented function calculateTreeStats: Tree-based statistics POU5F1 module jackknifed module versions Similarly preservation statistics, tree-based statistics can also summarized jackknifed version module obtain overall estimate along confidence interval: confirm whether tree-based statistics well-suited analysis, contrast actual random modules can used sanity checking. tree-based statistics (especially ones measuring diversity) expected lower actual modules random modules. statistics interest, distributions can plotted using function plotTreeStatDistributions: Distribution tree-based statistics actual random modules. first 3 statistics (within-species diversity, total tree length human diversity), distributions actual random modules differ expected. 4th statistic (human--branch length) defined modules monophyletic human clones, calculated 57 actual modules 1 random module. Thus distributions compared, finding fewer monophyletic random modules goes direction: higher diversity (lower preservation) among human clones case random modules case actual modules.","code":"tree_stats_jk <- calculateTreeStats(trees_jk) random_tree_stats_jk <- calculateTreeStats(random_trees_jk) tree_stats <- summarizeJackknifeStats(tree_stats_jk,                                        c(\"total_tree_length\",                                          \"within_species_diversity\",                                          \"human_to_other_branch_length\",                                          \"human_diversity\")) random_tree_stats <- summarizeJackknifeStats(random_tree_stats_jk,                                               c(\"total_tree_length\",                                                 \"within_species_diversity\",                                                 \"human_to_other_branch_length\",                                                 \"human_diversity\")) plotTreeStatDistributions(tree_stats,                            random_tree_stats,                            c(\"within_species_diversity\",                              \"total_tree_length\",                              \"human_diversity\",                              \"human_to_other_branch_length\"))"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"quantifying-cross-species-conservation-of-network-modules","dir":"Articles","previous_headings":"","what":"Quantifying cross-species conservation of network modules","title":"CroCoNet","text":"calculated first pairwise preservation scores clones higher-level tree-based statistics characterize different topologies modules within across species, ready quantify evolutionary conservation modules. need within-species differences first place? extent cross-species differences directly answer evolutionary conservation? several sources module topology differences compare 2 species: course true evolutionary divergence species primarily interested , convoluted diversity across individuals species, technical noise low statistical power. end, find topology module different 2 species, difficult say extent actually due divergence. within-species differences also become valuable sources information: provide estimate variability originating , confounding sources thus can used discern signal real divergence.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"overall-conservation-and-divergence","dir":"Articles","previous_headings":"Quantifying cross-species conservation of network modules","what":"Overall conservation and divergence","title":"CroCoNet","text":"apply concept quantification overall conservation across species, used 2 tree-based statistics: within-species diversity total tree length. two metrics based trees calculated using part branches, clearly independent. general relationship can captures linear regression, biological terms describes part total module variability due sources cross-species divergence (e.g. due diversity, noise power). module located along regression line informs us detection robustness. Modules low within-species diversity low total tree length well-preserved within across species, meaning modules robustly detected clones, whereas modules, metrics high, poorly preserved just across also within species, indicating high detection uncertainty (“wobbliness”). importantly, residuals modules regression model informs us cross-species conservation: outlier modules follow general trend conserved diverged ones. modules located trend line higher total tree length expected based within-species diversity, meaning tend long internal branches connecting species, indicates divergence. contrast, modules fall trend line lower total tree length expected based within-species diversity, meaning species well-separated within tree rather mixed amog hints towards conservation. concept using tree-based statistics puzzle apart conserved, diverged, robust wobbly modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"filtering-the-module-trees","dir":"Articles","previous_headings":"Quantifying cross-species conservation of network modules > Overall conservation and divergence","what":"Filtering the module trees","title":"CroCoNet","text":"general trend within-species diversities total tree lengths can visualized using function plotTreeStats. plot , actual random modules included: relationship total tree lengths within-species diversities across actual random modules. seen , within-species diversities total tree lengths general higher random modules actual modules - thus random modules cluster separately plot “wobbly” end spectrum. However, still individual actual modules particularly high total tree lengths within-species diversities, comparable random modules. Since modules seem behave like random sets genes terms tree properties, recommended remove analysis. function filterModuleTrees calculates probable statistic actual comes distribution actual modules compared (pactualp_{actual}) probable statistic comes distribution random modules (prandomp_{random}) using one-sample one-sided z-tests (expected mean standard deviation: mean standard deviation actual/random module statistics outlier removal using interquartile range method). 1−pactual>10⋅prandom1 - p_{actual} > 10⋅p_{random} fulfilled tree statistics, module kept, otherwise removed. case example dataset, filtering removes 4 modules (marked red): relationship total tree lengths within-species diversities across actual random modules, removed actual modules marked.","code":"plotTreeStats(tree_stats,                random_tree_stats,                c(\"within_species_diversity\", \"total_tree_length\")) tree_stats_filt <- filterModuleTrees(tree_stats, random_tree_stats) plotTreeStats(tree_stats,                random_tree_stats,                c(\"within_species_diversity\", \"total_tree_length\")) +   geom_point(data = dplyr::anti_join(tree_stats, tree_stats_filt), color = \"red3\", size = 1.2)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"finding-conserved-and-diverged-modules","dir":"Articles","previous_headings":"Quantifying cross-species conservation of network modules > Overall conservation and divergence","what":"Finding conserved and diverged modules","title":"CroCoNet","text":"removing “wobbly” modules, cross-species conservation can quantified using linear regression total tree length within-species branch lengths. function fitTreeStatsLm fits regression model 2 statistics function findConservedDivergedModules identifies conserved diverged modules comparing module 95% prediction interval fit. module considered diverged higher total tree length upper boundary prediction interval, module considered conserved lower total tree length lower boundary prediction interval. degree conservation/divergence can quantitatively compared modules categorized conserved/diverged. implemented 2 measures: 1) residual, absolute difference observed expected total tree lengths, 2) t-score, residual normalized standard error total tree length prediction given within-species diversity value. linear regression can weighted error data points derived jackknifing. option chosen (weighted_lm set TRUE), weight module regression defined inversely proportional total tree length variance across jackknifed module versions. case example dataset, used weighted linear regression: Cross-species conservation measures 6 example modules Using approach, identified 21 conserved 23 diverged modules: function plotConservedDivergedModules helps visualize regression line, 95% prediction interval (grey area), conserved diverged modules (colored green red, respectively). also labels top N conserved diverged modules based either residuals t-scores. plot , top 5 conserved diverged modules based residuals highlighted: Weighted linear regression total tree length within-species diversity, top 5 conserved diverged modules marked. illustrate makes modules conserved diverged, distance matrices module trees can also plotted: distance matrices 5 conserved (top row) 5 diverged (bottom row) modules. tree reconstructions 5 conserved (top row) 5 diverged (bottom row) modules. contrast conserved diverged modules terms distance matrices module trees clearly visible. conserved modules tend balanced distance matrices similarly low distance measures within-species cross-species comparisons, correspondingly, tree reconstructions without species separation, clones species close clones different species. contrast, diverged modules tend much higher distance measures across species within species 1 species pairs (case example modules always human-cynomolgus gorilla-cynomolgus species pairs). also results trees species strikingly distinct, short branches within species clades long internal branch separating subtrees .","code":"lm_overall <- fitTreeStatsLm(tree_stats_filt,                               focus = \"overall\",                              weighted_lm = TRUE) module_conservation_overall <- findConservedDivergedModules(tree_stats_filt,                                                              lm_overall) table(module_conservation_overall$conservation) #>  #>       conserved        diverged not_significant  #>              21              23             788 plotConservedDivergedModules(module_conservation_overall,                              N = 5,                              rank_by = \"residual\") top5_cons_div_modules <- bind_rows(module_conservation_overall %>%                                     dplyr::filter(conservation == \"conserved\") %>%                                     dplyr::slice_min(order_by = residual, n = 5),                                    module_conservation_overall %>%                                     dplyr::filter(conservation == \"diverged\") %>%                                     dplyr::slice_max(order_by = residual, n = 5)) %>%    dplyr::pull(regulator) dist <- dist_jk[paste0(top5_cons_div_modules, \"_orig\")] names(dist) <- top5_cons_div_modules plotDistMats(dist, ncol = 5) trees <- trees_jk[paste0(top5_cons_div_modules, \"_orig\")] names(trees) <- top5_cons_div_modules plotTrees(trees, species_colors = spec_colors, ncol = 5)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"finding-conserved-and-diverged-edges","dir":"Articles","previous_headings":"Quantifying cross-species conservation of network modules > Overall conservation and divergence","what":"Finding conserved and diverged edges","title":"CroCoNet","text":"divergence score can calculated just module whole, also edge within module, can pinpoint individual edges regions neighboring edges particularly conserved diverged. score calculated based different edge weights given edge networks different clones. edge weights compared across species using ANOVA, log10 F-statistic (.e. -species variability / within-species variability) regarded measure edge divergence. scores can returned data frame using calculateEdgeDivergence directly plotted using plotNetworks color_by set “edge_divergence”. plot 300 strongest edges within 5 conserved diverged modules colored edge divergence: 300 strongest connections 5 conserved (top row) 5 diverged (bottom row) modules. thickness edges represents consensus edge weights color edges represents different mean edge weights across 3 species. Based network visualizations, diverged modules (especially HMGA1 POU5F1) tend diverged edges conserved modules, confirms previous findings different aspect. genes form diverged edges within module can also pinned , example case POU5F1 module, SCGB3A2 main hub diverged edges.","code":"plotNetworks(top5_cons_div_modules,               pruned_modules,               consensus_network,               network_list,               clone2species,               color_by = \"edge_divergence\",              ncol = 5)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"finding-conserved-and-diverged-target-genes","dir":"Articles","previous_headings":"Quantifying cross-species conservation of network modules > Overall conservation and divergence","what":"Finding conserved and diverged target genes","title":"CroCoNet","text":"Genes contribute conservation/divergence module can identified just using edge divergence scores, also using tree-based statistics combination jackknifing. jackknifing, member gene module removed statistics recalculated, including tree-based statistics (total tree length within-species branch length) inform us cross-species conservation. working hypothesis removing target gene diverged module makes module conserved, target responsible divergence original module, vice versa, removing target gene conserved module makes module diverged, target responsible conservation original module. quantify effects, function findConservedDivergedTargets takes use linear model fitted across modules total tree length within-species diversity used identify conserved diverged modules first place. However, case aggregate statistic module whole compared regression line, statistic jackknife module version separately. corresponding residuals quantify extent target gene conservation: jackknife version highest residual diverged, therefore corresponding target gene conserved, jackknife version lowest residual conserved, therefore corresponding target gene diverged. important note, cases divergence/conservation module contributed single target gene, rather combined signal targets together. “conserved” target gene diverged module still likely diverged, just lesser extent others. mainly makes sense investigate diverged targets diverged modules conserved targets conserved modules, way around. case example dataset, took closer look target genes POU5F1: Cross-species conservation measures example target genes POU5F1 original jackknifed versions module can plotted along regression line help function plotConservedDivergedTargets. prediction interval regression line shown grey area assumed constant width given module. jackknifing affects position compared regression line case POU5F1 module: top 5 diverged target genes POU5F1 identified using tree-based statistics combination jackknifing. jackknifed versions located way outside prediction interval, meaning whole module exhibits strong signal divergence explained target genes alone. diverged target lowest residual SCGB3A2, line findings based edge divergence. investigate whether network divergence/conservation also translates expression divergence/conservation, expression profiles regulator targets can plotted per species using plotExprAlongPseudotime (pseudotime trajectories) plotExprPerCellType (distinct cell types). , plot expression POU5F1 5 diverged target genes across pseudotime range neural differentiation process: expression profiles POU5F1 top 5 diverged target genes across pseudotime trajectory per species. Several target genes POU5F1 diverged terms network topology (SCGB3A2, SPP1 FTL) also show different expression patterns across species. differences observed POU5F1, regulator - hint towards cis-regulatory changes. Indeed, thorough investigation found SCGB3A2 SPP1 known located close LTR7 elements human genome [24, 25], evolutionary young family transposable elements often acquire regulatory functions. LTR7 elements near 2 genes appeared along ape lineage bound POU5F1 [26], potentially contributed rewiring POU5F1 module.","code":"POU5F1_target_conservation <- findConservedDivergedTargets(\"POU5F1\",                                                            tree_stats_jk,                                                            lm_overall) plotConservedDivergedTargets(POU5F1_target_conservation) top5_diverged_POU5F1_targets <- POU5F1_target_conservation %>%   slice_min(order_by = residual, n = 5) %>%   pull(gene_removed) ct_colors <- c(Pluripotent_Cells = \"#86C1E6\", Early_Ectoderm = \"#F4AB62\", Neurons = \"#CA6102\") plotExprAlongPseudotime(c(\"POU5F1\", top5_diverged_POU5F1_targets),                          sce,                          species_colors = spec_colors,                          cell_type_colors = ct_colors)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"lineage-specific-divergence","dir":"Articles","previous_headings":"Quantifying cross-species conservation of network modules","what":"Lineage-specific divergence","title":"CroCoNet","text":"approach described characterizes overall degree module conservation - species within tree treated . suitable approach finding conserved modules finding highest signal divergence irrespective phylogeny. case example dataset, diverged modules detected way diverged cynomolgus macaques great apes (rather within great apes) simply longer phylogenetic distances generally give rise bigger differences. However, focus interest divergence particular lineage, example human lineage, different approach needs applied. contrast overall test conservation constraints terms tree structure, makes sense restrict testing module trees monophyletic human clones. step pre-selects modules fulfill minimal citeria lineage-specific divergence makes possible compare specific tree characteristic, namely human--branch length. correct unwanted sources variation, branch length contrasted variation within lineage, .e. human diversity. analogous approach can applied find diverged modules species rest tree well.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"finding-conserved-and-diverged-modules-1","dir":"Articles","previous_headings":"Quantifying cross-species conservation of network modules > Lineage-specific divergence","what":"Finding conserved and diverged modules","title":"CroCoNet","text":"modules diverged human lineage can defined using (weighted) linear regression human--branch length human diversity, implemented fitTreeStatsLm focus set “human” findConservedDivergedModules. Similarly overall conservation divergence, 95% prediction interval regression line calculated modules higher human--branch length upper bound 95% prediction interval considered diverged. important note modules fall lower bound 95% prediction interval interpreted conserved case, 1) human-monophyletic module trees already pre-selected, 2) conservation per definition lineage-specific feature. , approach applied example dataset: Measures divergence human lineage 6 example modules total, 57 modules fulfill minimum criteria monophyletic human clones: Among , identified 2 modules diverged human lineage: results can also plotted using plotConservedDivergedModules, function already used case overall conservation divergence: Weighted linear regression human--branch length human diversity, diverged modules marked. distance matrices tree reconstructions ARID1B MXI1 modules can showcase detail makes diverged human lineage: distance matrices 2 modules found diverged human lineage. tree reconstructions 2 modules found diverged human lineage. signal - unsurprisingly - strong case modules diverged cynomolgus great apes, still apparent human-gorilla human-cynomolgus distance measures higher rest. also translates way longer human--branch length expected based phylogeny observed module trees.","code":"lm_human <- fitTreeStatsLm(tree_stats_filt,                             focus = \"human\",                            weighted_lm = TRUE) module_conservation_human <- findConservedDivergedModules(tree_stats_filt,                                                            lm_human) nrow(module_conservation_human) #> [1] 57 table(module_conservation_human$conservation) #>  #>        diverged not_significant  #>               2              55 plotConservedDivergedModules(module_conservation_human) human_div_modules <- module_conservation_human %>%    dplyr::filter(conservation == \"diverged\") %>%    dplyr::pull(regulator) %>%    as.character() dist <- dist_jk[paste0(human_div_modules, \"_orig\")] names(dist) <- human_div_modules plotDistMats(dist) trees <- trees_jk[paste0(human_div_modules, \"_orig\")] names(trees) <- human_div_modules plotTrees(trees, species_colors = spec_colors)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"finding-conserved-and-diverged-target-genes-1","dir":"Articles","previous_headings":"Quantifying cross-species conservation of network modules > Lineage-specific divergence","what":"Finding conserved and diverged target genes","title":"CroCoNet","text":"Similar approach case overall conservation divergence, jackknifing can inform us target genes contribute human-specific divergence. case, residuals jackknifed modules versions calculated regard regression model human--branch length human diversity. target genes result lowest residuals (lowest signal divergence) removed considered diverged original module. performed analysis ARID1B module: Cross-species conservation measures example target genes ARID1B top 5 diverged target genes ARID1B identified using tree-based statistics combination jackknifing. expression profiles ARID1B top 5 diverged target genes across pseudotime trajectory per species. Based effects jackknifing, DLK1 proves far diverged target gene ARID1B. also reflected expression profile: upregulated much humans intermediate stage neural differentiation gorilla cynomolgus. target genes ARID1B also show slight human-specific differences expression patterns, e.g. TMSB15A DTX4 upregulated humans towards late pseudotime stage.","code":"ARID1B_target_conservation <- findConservedDivergedTargets(\"ARID1B\",                                                             tree_stats_jk,                                                             lm_human) plotConservedDivergedTargets(ARID1B_target_conservation) top5_diverged_ARID1B_targets <- ARID1B_target_conservation %>%   slice_min(order_by = residual, n = 5) %>%   pull(gene_removed) plotExprAlongPseudotime(c(\"ARID1B\", top5_diverged_ARID1B_targets),                          sce,                          species_colors = spec_colors,                          cell_type_colors = ct_colors)"},{"path":"https://hellmann-lab.github.io/CroCoNet/articles/CroCoNet.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"CroCoNet","text":"CroCoNet approach defines joint co-expression modules across species based phylogeny-aware consensus network quantifies conservation modules contrasting cross-species within-species topological differences. addition, can pinpoint individual target genes contribute conservation/divergence help jackknifing. modules target genes detected conserved diverged good candidates explain cross-species differences similarities gene regulation can deeper investigated follow-analyses experiments.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anita Térmeg. Author, maintainer.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Térmeg (2025). CroCoNet: Cross-species Comparison Networks. R package version 0.0.0.9000, https://hellmann-lab.github.io/CroCoNet.","code":"@Manual{,   title = {CroCoNet: Cross-species Comparison of Networks},   author = {Anita Térmeg},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://hellmann-lab.github.io/CroCoNet}, }"},{"path":"https://hellmann-lab.github.io/CroCoNet/index.html","id":"croconet----cross-species---comparison-of---networks","dir":"","previous_headings":"","what":"Cross-species Comparison of Networks","title":"Cross-species Comparison of Networks","text":"CroCoNet tool quantitatively compare gene regulatory networks across species identify conserved diverged modules. hinges contrasting module variability within across species order distinguish -species divergence confounding factors diversity across individuals, environmental differences technical noise. main steps CroCoNet workflow","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/index.html","id":"arrow_down-installation","dir":"","previous_headings":"","what":"⬇️ Installation","title":"Cross-species Comparison of Networks","text":"installation, R package devtools needed. devtools available, can install development version CroCoNet dependencies GitHub :","code":"install.packages(\"devtools\") library(devtools) devtools::install_github(\"Hellmann-Lab/CroCoNet\")"},{"path":"https://hellmann-lab.github.io/CroCoNet/index.html","id":"book-user-guide","dir":"","previous_headings":"","what":"📖 User Guide","title":"Cross-species Comparison of Networks","text":"step--step guide detailed explanations, please check vignette analysis example scRNA-seq dataset: can access vignette documentations functions also CroCoNet website.","code":"browseVignettes(\"CroCoNet\")"},{"path":"https://hellmann-lab.github.io/CroCoNet/index.html","id":"scroll-citation","dir":"","previous_headings":"","what":"📜 Citation","title":"Cross-species Comparison of Networks","text":"Please use following entry cite CroCoNet:","code":"citation(\"CroCoNet\")"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/CroCoNet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CroCoNet: Cross-species Comparison of Networks — CroCoNet-package","title":"CroCoNet: Cross-species Comparison of Networks — CroCoNet-package","text":"tool quantitatively compare gene regulatory networks across species identify conserved diverged modules.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/CroCoNet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CroCoNet: Cross-species Comparison of Networks — CroCoNet-package","text":"Maintainer: Anita Térmeg anita.termeg@gmail.com (ORCID)","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/POU5F1_target_conservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-species conservation measures of the target genes in the POU5F1 module — POU5F1_target_conservation","title":"Cross-species conservation measures of the target genes in the POU5F1 module — POU5F1_target_conservation","text":"Cross-species conservation measures 21 target genes POU5F1 module subsetted early neuronal differentiation dataset.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/POU5F1_target_conservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-species conservation measures of the target genes in the POU5F1 module — POU5F1_target_conservation","text":"","code":"POU5F1_target_conservation"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/POU5F1_target_conservation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cross-species conservation measures of the target genes in the POU5F1 module — POU5F1_target_conservation","text":"data frame 23 rows 12 columns: focus Character, focus interest terms cross-species conservation (\"overall\"). regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. type Character, module type (orig = original, jk = jackknifed summary = summary across jackknife module versions). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk', nameOfRegulator_orig case module type 'orig' nameOfRegulator_summary case module type 'summary'). gene_removed Character, name gene removed jackknifing (NA case module types 'orig' 'summary'). total_tree_length Numeric, total tree length per jackknife module version. within_species_diversity Numeric, within-species diversity per jackknife module version. fit Numeric, fitted total tree length within-species diversity value jackknife module version. lwr_fit Numeric, lower bound prediction interval fit. upr_fit Numeric, upper bound prediction interval fit. residual Numeric, residual jackknife module version linear model. calculated difference observed expected (fitted) total tree lengths.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/POU5F1_target_conservation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cross-species conservation measures of the target genes in the POU5F1 module — POU5F1_target_conservation","text":"determine target genes responsible divergence POU5F1 module, statistics used identification conserved/diverged modules combination jackknifing. means target gene module removed statistics, including tree-based statistics carry information cross-species conservation, re-calculated (please see calculatePresStats, reconstructTrees calculateTreeStats). working hypothesis removing target gene diverged POU5F1 module makes module conserved, gene contributed divergence original module first place. can quantified using residuals compared regression line total tree lengths within-species diversities tree representations across modules (please see fitTreeStatsLm findConservedDivergedTargets. jackknifed versions POU5F1 module lowest residuals conserved, therefore corresponding target genes considered diverged.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/addDirectionality.html","id":null,"dir":"Reference","previous_headings":"","what":"Add directionality of interactions — addDirectionality","title":"Add directionality of interactions — addDirectionality","text":"Determines directionality network edge (positively correlated/coexpressed negatively correlated/anti-coexpressed) based modified Spearman's correlation expression profiles 2 genes form edge.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/addDirectionality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add directionality of interactions — addDirectionality","text":"","code":"addDirectionality(network, sce, assay = \"logcounts\", n_cores = 1L)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/addDirectionality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add directionality of interactions — addDirectionality","text":"network igraph object containing consensus network network clone. sce SingleCellExperiment object containing expression data either clones (case network consensus network) clone interest (case network clonewise network). sce contains expression data clones, also expected metadata column \"clone\" specifying clone cell belongs ; used define blocking levels. assay Character, name assay sce used calculation gene-gene correlations (default: \"logcounts\"). n_cores Integer, number cores (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/addDirectionality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add directionality of interactions — addDirectionality","text":"igraph object, input network extended information direction interactions. addition original edge attributes, contains 3 new attributes: rho Numeric, approximate Spearman's correlation coefficient expression profiles 2 genes form edge. p.adj Numeric, BH-corrected approximate p-value rho. direction Character, direction interaction 2 genes form edge (\"+\" = positively correlated/coexpressed \"-\" = negatively correlated/anti-coexpressed).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/addDirectionality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add directionality of interactions — addDirectionality","text":"networks inferred using method distinguish coexpressed anti-coexpressed gene pairs, might useful add information lines analysis makes sense separate activated repressed target genes regulator (e.g. calculation eigengenes, see calculateEigengenes). network inference method output edges positive negative edge weights first place (e.g. correlation-based methods), edge attribute \"direction\" already created step normalizeEdgeWeights calculated . directionality geneA-geneB edge refers characteristic whether geneA geneB coexpressed anti-coexpressed whether geneA regulates geneB geneB regulates geneA. network remains undirected graph theoretical sense. calculation directionality relies approximate version Spearman's rho, significance testing blocking implemented correlatePairs. results summarized 3 new edge attributes igraph object: rho (approximate Spearman's correlation coefficient), p.adj (BH-corrected approximate p-value) direction (\"+\" \"-\").","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/addDirectionality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add directionality of interactions — addDirectionality","text":"","code":"consensus_network <- network_list %>%  createConsensus(clone2species, tree) %>%  addDirectionality(sce) #> Loading required namespace: SingleCellExperiment"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/applyPower.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply soft-thresholding — applyPower","title":"Apply soft-thresholding — applyPower","text":"Apply soft-thresholding","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/applyPower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply soft-thresholding — applyPower","text":"","code":"applyPower(network_list, power, n_cores = 1L)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/applyPower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply soft-thresholding — applyPower","text":"network_list named list igraph objects containing networks clones. power Numeric, power raise edge weights . n_cores Integer, number cores (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/applyPower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply soft-thresholding — applyPower","text":"named list igraph objects containing networks clones scale-free transformation edge weights","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/assignInitialModules.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign initial modules — assignInitialModules","title":"Assign initial modules — assignInitialModules","text":"Assigns initial modules taking top N target genes provided transcriptional regulator.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/assignInitialModules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign initial modules — assignInitialModules","text":"","code":"assignInitialModules(consensus_network, regulators = NULL, N = 3000L)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/assignInitialModules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign initial modules — assignInitialModules","text":"consensus_network igraph object, consensus network across species clones. regulators Character vector transcriptional regulators (default: transcriptional regulators least 1 annotated motif JASPAR 2024 vertebrate core collection present network nodes consensus network). N Integer, initial module size, .e. number target genes keep regulator.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/assignInitialModules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign initial modules — assignInitialModules","text":"data frame initial modules 3 core columns: regulator Character, transcriptional regulator. target Character, member gene regulator's initial module. weight Numeric, consensus edge weight/adjacency, weighted average clonewise edge weights. input consensus_network edge attributes, appear additional columns data frame.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/assignInitialModules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assign initial modules — assignInitialModules","text":"CroCoNet approach, center network module transcriptional regulator. modules assigned 2 main steps: 1) large initial modules created selecting fixed number target genes per regulator (performed function), 2) initial modules pruned keep best targets regulator (performed pruneModules). module assignment recommended done based consensus network. regulators provide starting point module assignment can selected based prior biological knowledge, combination prior biological knowledge data (see also getRegulators). default, function takes transcriptional regulators least 1 annotated motif JASPAR 2024 vertebrate core collection (appear provided consensus_network). function creates many modules regulators, containing regulator N best target genes. choosing best targets, genes ranked based strongly connected regulator (regulator-target edge weight/adjacency). N greater equal minimum number targets per regulator across regulators.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/assignInitialModules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign initial modules — assignInitialModules","text":"","code":"initial_modules <- assignInitialModules(consensus_network, regulators, N = 250)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEdgeDivergence.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the divergence of intramodular edges — calculateEdgeDivergence","title":"Calculate the divergence of intramodular edges — calculateEdgeDivergence","text":"Selects top N strongest edges chosen module(s) based consensus network calculates divergence score edge.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEdgeDivergence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the divergence of intramodular edges — calculateEdgeDivergence","text":"","code":"calculateEdgeDivergence(   module_names,   pruned_modules,   consensus_network,   network_list,   clone2species,   N = Inf,   n_cores = 1L )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEdgeDivergence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the divergence of intramodular edges — calculateEdgeDivergence","text":"module_names Character character vector, name(s) module(s) interest. pruned_modules Data frame pruned modules, required columns: regulator Character, transcriptional regulator. target Character, target gene transcriptional regulator (member regulator's pruned module). consensus_network igraph object, consensus network across species clones. network_list list igraph objects containing networks per clone. clone2species data frame specifies species clone belongs , required columns: clone Character, name clone. species Character, name species. N Integer, number strongest edges subset. set Inf (default), edges module considered. n_cores Integer, number cores (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEdgeDivergence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the divergence of intramodular edges — calculateEdgeDivergence","text":"data frame selected edges 5 columns: regulator Character, transcriptional regulator. , Character, 2 member genes regulator's module form edge. consensus_weight Numeric, consensus edge weight/adjacency (weighted average clonewise adjacencies). f_statistic Numeric, measue edge divergence. calculated F-statistic ANOVA edge weights species groups. p-value Numeric, p-value F-statistic.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEdgeDivergence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the divergence of intramodular edges — calculateEdgeDivergence","text":"CroCoNet approach, networks reconstructed per clone combined single phylogeny-aware consensus network basis module assignment. function selects intramodular edges input module(s) consensus network. N set Inf, intramodular edges considered divergence calculation, N smaller module size, edges ordered consensus edge weight top N edges kept per module. edge kept, edge divergence score calculated based edge weights networks individual clones. edge weights compared across species using ANOVA. F-statistic (.e. variation across species means / variation within species) p-value F-statistic output measures edge divergence.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEdgeDivergence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the divergence of intramodular edges — calculateEdgeDivergence","text":"","code":"POU5F1_mod_edge_divergence <- calculateEdgeDivergence(\"POU5F1\",                                                                  pruned_modules,                                                                  consensus_network,                                                                  network_list,                                                                  clone2species)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEigengenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate module eigengenes — calculateEigengenes","title":"Calculate module eigengenes — calculateEigengenes","text":"Calculates module eigengene input module.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEigengenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate module eigengenes — calculateEigengenes","text":"","code":"calculateEigengenes(   pruned_modules,   sce,   direction_of_regulation = \"+_only\",   module_names = as.character(unique(pruned_modules$regulator)),   per_species = FALSE,   pseudotime_column = \"pseudotime\",   cell_type_column = \"cell_type\",   n_cores = 1L )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEigengenes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate module eigengenes — calculateEigengenes","text":"pruned_modules Data frame pruned modules, required columns: regulator Character, transcriptional regulator. target Character, target gene transcriptional regulator (member regulator's pruned module). direction Character specifying direction interaction regulator target, either \"+\" \"-\" (required direction_of_regulation set \"+_only\" \"+-_separately\"). sce SingleCellExperiment object containing expression data (logcounts metadata) network genes. Required metadata columns: species Character, name species. {{pseudotime_column}} Numeric, inferred pseudotime (optional). {{cell_type_column}} Character, cell type annotation (optional). direction_of_regulation Character specifying positively negatively regulated targets transcriptional regulator treated, one \"+_only\", \"+-_separately\", \"all_together\". \"+_only\", eigengene calculated positively regulated targets, negatively regulated targets removed. \"+-_separately\", eigengene calculated separately positively negatively regulated targets. \"all_together\", eigengene calculated targets, irrespective direction regulation. module_names Character vector, names modules eigengenes calculated (default: unique names column regulator pruned_modules). per_species Logical, FALSE (default), eigengenes calculated across cells, TRUE, eigengenes calculated per species. pseudotime_column Character, name pseudotime column metadata sce (default: \"pseudotime\", pseudotime column, set NULL). cell_type_column Character, name cell type annotation column metadata sce (default: \"cell_type\", cell type column, set NULL). n_cores Integer, number cores (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEigengenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate module eigengenes — calculateEigengenes","text":"data frame eigengenes following columns: cell Character, cell barcode. species Character, name species. {{pseudotime_column}} Numeric, inferred pseudotime (present pseudotime_column NULL). {{cell_type_column}} Character, cell type annotation (present cell_type_column NULL). module Character, transcriptional regulator case eigengene calculated positively negatively regulated targets , direction interaction (format: nameOfRegulator(+) nameOfRegulator(-)). eigengene Numeric, eigengene (.e. first principal component scaled centered logcounts) module. case per_species TRUE, calculated species separately. mean_expr Numeric, mean scaled centered logcounts across genes module. regulator_expr Numeric, scaled centered logcounts regulator.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEigengenes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate module eigengenes — calculateEigengenes","text":"concept adapted WGCNA, eigengene summarizes expression profile entire module, calculated first principal component module expression data. Effectively, weighted mean individual genes' expression profiles. first step, logcounts subsetted keep module member genes resulting count matrix scaled centered per gene. Next, singular value decomposition performed scaled centered count matrix using svd, nu = 1 nv = 1 (1 left 1 right singular vector computed). right singular vector taken eigengene. Finally, eigengene aligned along average expression module: correlation two vectors negative, eigengene negated, correlation positive, eigengene kept . module contains activated repressed targets transcriptional regulator, calculating eigengene (summary expression profiles) across directions regulation make biological sense leads dilution signal. makes sense calculate eigengene either activated targets (direction_of_regulation = \"+_only\") activated repressed targets separately (direction_of_regulation = \"+-_separately\"). cases, module column output specify name transcriptional regulator also direction regulation (format: nameOfRegulator(+) nameOfRegulator(-)). eigengene across targets desired irrespective direction regulation, direction_of_regulation set \"all_together\". aim compare eigengenes across species, recommended calculate eigengenes per species setting per_species TRUE. case, scaling, centering SVD performed species separately. user plans plot eigengene along pseudotime /cell types, corresponding columns sce object can specified arguments pseudotime_column cell_type_column, pseudotime cell type information cell added output.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEigengenes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate module eigengenes — calculateEigengenes","text":"Zhang, B., & Horvath, S. (2005). general framework weighted gene co-expression network analysis. Statistical Applications Genetics Molecular Biology, 4, 17-60. https://doi.org/10.2202/1544-6115.1128","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateEigengenes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate module eigengenes — calculateEigengenes","text":"","code":"eigengenes <- calculateEigengenes(pruned_modules, sce) eigengenes_per_dir <- calculateEigengenes(pruned_modules, sce, \"+-_separately\") eigengenes_per_species <- calculateEigengenes(pruned_modules, sce, per_species = TRUE)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculatePresStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate preservation statistics — calculatePresStats","title":"Calculate preservation statistics — calculatePresStats","text":"Calculates one preservation statistics - correlation adjacencies (cor_adj), correlation regulator-target adjacencies (cor_adj_regulator), correlation intramodular connectivities (cor_kIM) - modules clone pairs without jackknifing.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculatePresStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate preservation statistics — calculatePresStats","text":"","code":"calculatePresStats(   pruned_modules,   network_list,   stats = c(\"cor_adj\", \"cor_adj_regulator\", \"cor_kIM\"),   clone2species = NULL,   jackknife = TRUE,   signed = FALSE,   n_cores = 1L,   corr_method = \"spearman\" )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculatePresStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate preservation statistics — calculatePresStats","text":"pruned_modules Data frame pruned modules, required columns: regulator Character, transcriptional regulator. target Character, target gene transcriptional regulator (member regulator's pruned module). network_list named list igraph objects containing networks clones. stats Character character vector specifying preservation statistics calculate (one \"cor_adj\", \"cor_adj_regulator\", \"cor_kIM\", default: c(\"cor_adj\", \"cor_adj_regulator\", \"cor_kIM\")). clone2species data frame specifying species clone belongs , required columns: clone Character, name clone. species Character, name species. NULL (default), output contain species information. jackknife Logical specifying whether jackknifing performed (default: TRUE). signed Logical indicating whether networks network_list signed (default: FALSE, see also normalizeEdgeWeights). set FALSE network_list contains edge attribute \"direction\", edge weights network direction \"-\" negated calculation \"cor_adj\" \"cor_adj_regulator\". n_cores Integer, number cores (default: 1). corr_method Character, method calculation correlation, one \"spearman\", \"pearson\", \"kendall\" (default: \"spearman\").","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculatePresStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate preservation statistics — calculatePresStats","text":"Data frame preservation statistics following columns: regulator Character, transcriptional regulator. module_size Integer, number target genes assigned regulator (present column also present pruned_modules). type Character, module type (\"orig\" = original \"jk\" = jackknifed, present parameter jackknife set TRUE). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type \"jk\" nameOfRegulator_orig case module type \"orig\", present parameter jackknife set TRUE). gene_removed Character, name gene removed jackknifing (NA case module type \"orig\", present parameter jackknife set TRUE). clone1, clone2 Character, names clones compared. species1, species2 Character, names species clone1 clone2 belong , respectively (present clone2species NULL). {{nameOfStat}} Numeric, one columns containing preservation statistics specified parameter stats.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculatePresStats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate preservation statistics — calculatePresStats","text":"function calculates one preservation statistics adapted WGCNA (cor_adj, cor_adj_regulator cor_kIM) module clone pair. three statistics quantify well topology module preserved networks two clones. statistic cor_adj correlation edge weights within module network clone1 VS network clone2. statistic cor_adj_regulator correlation edge weights regulator module members network clone1 VS network clone2. Finally, statistic cor_kIM correlation intramodular connectivities per module member gene network clone1 VS network clone2. statistics assume joint module assignment (typically derived consensus network) compare topological properties directly clonewise networks. approach, module always defined set genes, adjacencies/edge weights among genes differ clone clone; poorly preserved modules expected many, well-preserved modules expected differences. jackknife set TRUE (default), function creates possible jackknifed versions input module removing target gene assigned module (regulator never excluded), calculates preservation statistics jackknifed module versions addition original module. way, confidence interval can calculated module statistic (see summarizeJackknifeStats). Later pipeline, jackknifing can also provide information target genes within conserved/diverged module particularly responsible conservation/divergence (see findConservedDivergedTargets). jackknifing desired, please set jackknife FALSE. also substantially reduce running times.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculatePresStats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate preservation statistics — calculatePresStats","text":"Langfelder, P., Luo, R., Oldham, M. C., & Horvath, S. (2011). network module preserved reproducible? PLoS Computational Biology, 7(1), 1001057.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculatePresStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate preservation statistics — calculatePresStats","text":"","code":"pres_stats_jk <- calculatePresStats(pruned_modules, network_list, \"cor_kIM\", clone2species)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateTreeStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate tree statistics across all modules — calculateTreeStats","title":"Calculate tree statistics across all modules — calculateTreeStats","text":"Calculates various tree statistics (total tree length, total within-species diversity, diversity within species, monophyleticity species branch length species others) modules/jackknifed module versions based list tree representations.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateTreeStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate tree statistics across all modules — calculateTreeStats","text":"","code":"calculateTreeStats(tree_list, n_cores = 1L)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateTreeStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate tree statistics across all modules — calculateTreeStats","text":"tree_list named list phylo objects containing tree representations modules/jackknifed module versions, tips trees corresponding clones. trees expected component species specifies species tip belongs . trees can also contain component info stores metadata module/jackknifed module version data frame format. n_cores Integer, number cores (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateTreeStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate tree statistics across all modules — calculateTreeStats","text":"data frame tree statistics following columns: regulator Character, transcriptional regulator. module_size Module size, number target genes assigned regulator (present column also present component info trees). type Character, module type (orig = original jk = jackknifed, present input trees reconstructed jackknifing). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk' nameOfRegulator_orig case module type 'orig', present input trees reconstructed jackknifing). gene_removed Character, name gene removed jackknifing (NA case module type 'orig', present input trees reconstructed jackknifing). within_species_diversity Numeric, sum species-wise diversities. total_tree_length Numeric, total length branches tree. {{species}}_diversity Numeric, many columns species, containing total length branches connecting clones given species. {{species}}_monophyl Logical, many columns species, indicating whether tree monophyletic clones given species. {{species}}_to_other_branch_length Numeric, many columns species, containing length internal branch connects subtree clones belonging given species subtree clones. NA tree monophyletic clones given species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateTreeStats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate tree statistics across all modules — calculateTreeStats","text":"part CroCoNet approach, pairwise module preservation scores calculated clones, within across species (see calculatePresStats) neighbor-joining trees reconstructed based preservation scores per module (see convertPresToDist reconstructTrees). tips resulting tree represent clones branch lengths represent dissimilarity module connectivity patterns networks 2 clones. Various useful statistics can defined based module trees: Total tree length: total length branches tree; measures module variability within across species. Diversity species: total length branches connecting clones given species ; measures module variability within particular species. Within-species diversity: sum diversity values across species; measures module variability within species general. Monophyleticity species: Indicates whether tree monophyletic clones given species. module tree monophyletic species interest can module tested divergence species others. Species--branch length: length internal branch connects subtree clones belonging given species subtree clones; measures module variability species others. Undefined tree monophyletic species interest. later steps pipeline, tree-based statistics can used 1) identify modules conserved, diverged overall diverged species others (see findConservedDivergedModules), 2) pinpoint individual target genes within modules contribute conservation/divergence (see findConservedDivergedTargets).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/calculateTreeStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate tree statistics across all modules — calculateTreeStats","text":"","code":"tree_stats_jk <- calculateTreeStats(trees_jk)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/clone2species.html","id":null,"dir":"Reference","previous_headings":"","what":"Clone-species conversion — clone2species","title":"Clone-species conversion — clone2species","text":"data frame specifies clone belongs species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/clone2species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clone-species conversion — clone2species","text":"","code":"clone2species"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/clone2species.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clone-species conversion — clone2species","text":"data frame 9 rows 2 columns: clone Name clone/cell line. species Name species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/consensus_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Consensus network — consensus_network","title":"Consensus network — consensus_network","text":"Consensus network 9 primate clones example dataset. edge, consensus adjacency calculated weighted average clonewise adjacencies using weights correct 1) phylogenetic distances species 2) different numbers clones per species. edge detected certain clone, adjacency clone regarded 0 calculation consensus. directionality edge determined based modified Spearman's correlation corresponding 2 genes' expression profiles (positive expression correlation - activating interaction, negative expression correlation - repressing interaction). correlations calculated per clone, mean correlation taken across clones.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/consensus_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consensus network — consensus_network","text":"","code":"consensus_network"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/consensus_network.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Consensus network — consensus_network","text":"[igraph] object 300 nodes, 1 node attribute 3 edge attributes: Node attributes: name Name node (gene). Edge attributes: weight Consensus edge weight/adjacency, weighted average clonewise adjacencies. n_supporting_clones number clones edge detected. supporting_clones list clones edge detected. rho Approximate Spearman's correlation coefficient 2 genes' expression profiles form edge. p.adj BH-corrected approximate p-value rho. direction Direction interaction 2 genes form edge (\"+\" \"-\").","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertPresToDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert preservation statistics to distances across all modules — convertPresToDist","title":"Convert preservation statistics to distances across all modules — convertPresToDist","text":"Converts preservation statistics clones distance measures ranging 0 1.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertPresToDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert preservation statistics to distances across all modules — convertPresToDist","text":"","code":"convertPresToDist(pres_stats, stat, min_stat = -1, max_stat = 1, n_cores = 1L)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertPresToDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert preservation statistics to distances across all modules — convertPresToDist","text":"pres_stats Data frame preservation statistics, required columns: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. type Character, module type (\"orig\" = original \"jk\" = jackknifed, needed preservation statistics calculated jackknifing). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type \"jk\" nameOfRegulator_orig case module type \"orig\", needed preservation statistics calculated jackknifing). gene_removed Character, name gene removed jackknifing (NA case module type \"orig\", needed preservation statistics calculated jackknifing). clone1, clone2 Character names clones compared. species1, species2 Character, names species clone1 clone2 belong , respectively. {{stat}} Numeric, preservation statistic specified parameter stat. stat Character, name column containing preservation statistic converted distance measure. min_stat, max_stat Numeric, theoretical minimum maximum value stat (default: -1 1, respectively). preservation statistics implemented CroConet correlation-based statistics, please leave min_stat max_stat -1 1, respectively. custom preservation statistics, different value might used. set NULL ±Inf, conversion distance measure performed using empirical minimum maximum. n_cores Integer, number cores (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertPresToDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert preservation statistics to distances across all modules — convertPresToDist","text":"named list containing distance measures data frames modules jackknifed module versions input pres_stats. data frames contain 1 new column addition relevant columns pres_stats: dist Numeric, distance measure ranging 0 1 calculated based stat. pres_stats contains non-redundant clone pairs, data frames output contain possible clone pairs (.e. cloneA-cloneB cloneB-cloneA 2 separate entries distance).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertPresToDist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert preservation statistics to distances across all modules — convertPresToDist","text":"part CroCoNet approach, pairwise module preservation scores calculated clones, within across species (see calculatePresStats) gain information cross-species differences also within-species diversity modules. correlation-based preservation statistics quantify well module topology preserved networks two clones. function converts chosen preservation statistic (p) specified argument stat distance measure (d) using following formula: $$d = \\frac{max(p) - p}{max(p) - min(p)}$$ theoretical minimum maximum preservation statistic known, can provided using parameters min_stat max_stat. preservation statistics implemented CroCoNet correlation-based, range -1 1, thus  min_stat max_stat set -1 1, respectively (default). custom preservation statistic used, min_stat max_stat might set different values. set NULL ±Inf, minimum maximum preservation statistic calculated empirically using data. function also splits distance measures modules/jackknife module versions (depending whether preservation statistics calculated without jackknifing, see see parameter jackknife function calculatePresStats) outputs list data frames per module/jackknife module version. Modules/jackknifed module versions preservation statistic clone pairs NA removed. next step pipeline, distance measures used reconstruct neighbor-joining tree per module/jackknife module version represent dissimilarity module topology across clones (see reconstructTrees).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertPresToDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert preservation statistics to distances across all modules — convertPresToDist","text":"","code":"dist_jk <- convertPresToDist(pres_stats_jk, \"cor_kIM\")"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertToDT.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of igraphs to a list of data tables — convertToDT","title":"Convert a list of igraphs to a list of data tables — convertToDT","text":"Takes care conversion igraph data table formats networks.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertToDT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of igraphs to a list of data tables — convertToDT","text":"","code":"convertToDT(network_list)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertToDT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of igraphs to a list of data tables — convertToDT","text":"network_list list igraph objects","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertToDT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of igraphs to a list of data tables — convertToDT","text":"list data tables columns '', '', 'weight' additional edge attributes input igraphs contain.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertToGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of data frames to a list of igraphs — convertToGraph","title":"Convert a list of data frames to a list of igraphs — convertToGraph","text":"Takes care conversion data table igraph formats networks.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertToGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of data frames to a list of igraphs — convertToGraph","text":"","code":"convertToGraph(dt_list, network_genes, n_cores = 1L)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertToGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of data frames to a list of igraphs — convertToGraph","text":"dt_list list data tables contain columns '', '' 'weight'. row correspond edge network '' '' end nodes 'weight' edge weight. Additional columns converted edge attributes igraphs. network_genes Character vector genes network. n_cores Number cores.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/convertToGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of data frames to a list of igraphs — convertToGraph","text":"list igraphs.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createConsensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Create consensus network — createConsensus","title":"Create consensus network — createConsensus","text":"Integrates networks across different clones different species single consensus network phylogeny-aware manner.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createConsensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create consensus network — createConsensus","text":"","code":"createConsensus(network_list, clone2species, tree = NULL)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createConsensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create consensus network — createConsensus","text":"network_list named list igraph objects containing networks clones. clone2species data frame specifying species clone belongs , required columns: clone Character, name clone. species Character, name species. tree Object class phylo, phylogenetic tree species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createConsensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create consensus network — createConsensus","text":"Consensus network igraph format following edge attributes: weight Numeric, consensus edge weight/adjacency, weighted average clonewise edge weights. n_supporting_clones Integer, number clones edge detected. supporting_clones Character, list clones edge detected.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createConsensus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create consensus network — createConsensus","text":"input networks contain nodes (genes). output consensus network contains nodes edges detected least 1 clones. edge, consensus edge weight (adjacency) calculated weighted mean clonewise edge weights. weighted mean corrects 1) phylogenetic distances species (phylogenetic tree provided) 2) different numbers clones per species. result, approach downweighs edge weights clones 1) belong closely related species 2) belong species many clones, imbalanced sampling across phylogenetic tree bias consensus network. edge present one clones, edge weight clone regarded 0 calculation weighted mean. number clones names clone edge detected saved 2 new edge attributes (\"n_supporting_clones\" \"supporting_clones\", respectively) output consensus network. next steps pipeline, consensus network can used assign modules jointly species avoiding species bias (see assignInitialModules pruneModules).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createConsensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create consensus network — createConsensus","text":"","code":"consensus_network <- createConsensus(network_list, clone2species, tree)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createRandomModules.html","id":null,"dir":"Reference","previous_headings":"","what":"Create random modules — createRandomModules","title":"Create random modules — createRandomModules","text":"Creates matching random module actual module.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createRandomModules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create random modules — createRandomModules","text":"","code":"createRandomModules(pruned_modules, network_genes, seed = 42)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createRandomModules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create random modules — createRandomModules","text":"pruned_modules Data frame pruned modules, required columns: regulator Character, transcriptional regulator. target Character, target gene transcriptional regulator (member regulator's pruned module). network_genes Character vector genes network. seed Integer, seed use random sampling (default: 42).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createRandomModules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create random modules — createRandomModules","text":"Data frame random modules following columns: regulator Character, transcriptional regulator. module_size Integer, number genes assigned regulator (present column also present input pruned_modules). target Character, member gene regulator's random module.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createRandomModules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create random modules — createRandomModules","text":"function outputs random module module pruned_modules. random modules regulators contain number target genes original modules, target genes randomly drawn network_genes. next steps pipeline, actual modules compared random modules terms statistics calculated check whether 2 groups modules behave general differently (see plotPresStatDistributions, plotPresStats, plotTreeStatDistributions plotTreeStats) remove individual actual modules show similar characteristics random modules (see filterModuleTrees).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/createRandomModules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create random modules — createRandomModules","text":"","code":"random_modules <- createRandomModules(pruned_modules, genes)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance measures of the pruned modules — dist","title":"Distance measures of the pruned modules — dist","text":"Distance measures per clone pair original (.e. jackknifed) pruned modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance measures of the pruned modules — dist","text":"","code":"dist"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/dist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Distance measures of the pruned modules — dist","text":"named list 12 elements containing distance measures per module. element data frame 72 rows 7 columns: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. clone1, clone2 Character names clones compared. species1, species2 Character, names species clone1 clone2 belong , respectively. dist Numeric, distance measure ranging 0 1, calculated based correlation intramodular connectivities.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance measures of the pruned modules — dist","text":"distance measures calculated based correlation intramodular connectivities: $$dist = \\frac{1 - cor.kIM}{2}$$ (correlation 1 corresponds distance 0, whereas correlation -1 corresponds distance 1). element list corresponds module contains distance measures possible pairs clones module.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/dist_jk.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance measures of the original and jackknifed pruned modules — dist_jk","title":"Distance measures of the original and jackknifed pruned modules — dist_jk","text":"Distance measures per clone pair original jackknifed versions pruned modules. jackknifed versions modules created removing target gene assigned module (regulators never excluded). distance measures calculated based correlation intramodular connectivities: \\(dist = \\frac{1 - cor.kIM}{2}\\) (correlation 1 corresponds distance 0, whereas correlation -1 corresponds distance 1). element list corresponds jackknifed/original module version contains distance measures possible pairs clones module version.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/dist_jk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance measures of the original and jackknifed pruned modules — dist_jk","text":"","code":"dist_jk"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/dist_jk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Distance measures of the original and jackknifed pruned modules — dist_jk","text":"named list 232 elements containing distance measures per (original jackknifed) module version. element data frame 72 rows 10 columns: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. type Character, module type (orig = original jk = jackknifed). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk' nameOfRegulator_orig case module type 'orig'). gene_removed Character, name gene removed jackknifing (NA case module type 'orig'). clone1, clone2 Character names clones compared. species1, species2 Character, names species clone1 clone2 belong , respectively. dist Numeric, distance measure ranging 0 1, calculated based correlation intramodular connectivities.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/eigengenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Eigengenes — eigengenes","title":"Eigengenes — eigengenes","text":"Eigengenes pruned modules calculated using activated targets module. eigengene summarizes expression profile module whole, mathematically first principal component module expression data (.e. scaled centered logcounts subsetted activated targets regulators given module). case, principal component taken across cells irrespective species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/eigengenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eigengenes — eigengenes","text":"","code":"eigengenes"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/eigengenes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Eigengenes — eigengenes","text":"data frame 6300 rows 8 columns: cell Character, cell barcode. species Character, name species. pseudotime Numeric, inferred pseudotime. cell_type Character, cell type annotation. module Character, transcriptional regulator direction regulation (case always nameOfRegulator(+)). eigengene Numeric, eigengene (.e. first principal component scaled centered logcounts) module. mean_expr Numeric, mean scaled centered logcounts across genes module. regulator_expr Numeric, scaled centered logcounts regulator.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/eigengenes_per_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Eigengenes per species — eigengenes_per_species","title":"Eigengenes per species — eigengenes_per_species","text":"Eigengenes pruned modules calculated per species using activated targets module. eigengene summarizes expression profile module whole, mathematically first principal component module expression data (.e. scaled centered logcounts subsetted activated targets regulator given module). case, principal component calculated species separately.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/eigengenes_per_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eigengenes per species — eigengenes_per_species","text":"","code":"eigengenes_per_species"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/eigengenes_per_species.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Eigengenes per species — eigengenes_per_species","text":"data frame 6300 rows 8 columns: cell Character, cell barcode. species Character, name species. pseudotime Numeric, inferred pseudotime. cell_type Character, cell type annotation. module Character, transcriptional regulator direction regulation (case always nameOfRegulator(+)). eigengene Numeric, eigengene (.e. first principal component scaled centered logcounts) module. mean_expr Numeric, mean scaled centered logcounts across genes module. regulator_expr Numeric, scaled centered logcounts regulator.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/filterModuleTrees.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter modules based on their tree representations — filterModuleTrees","title":"Filter modules based on their tree representations — filterModuleTrees","text":"Filters modules using two tree-based statistics (total tree length within-species diversity) comparing values actual modules values random modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/filterModuleTrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter modules based on their tree representations — filterModuleTrees","text":"","code":"filterModuleTrees(tree_stats, random_tree_stats, p_cutoff = 0.95)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/filterModuleTrees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter modules based on their tree representations — filterModuleTrees","text":"tree_stats Data frame tree-based statistics actual (pruned) modules. Required columns: regulator Character, transcriptional regulator. total_tree_length Numeric, total tree length per module (typically median across jackknife versions module. within_species_diversity Numeric, within-species diveristy per module (typically median across jackknife versions module. random_tree_stats Data frame tree-based statistics random modules. Required columns: regulator Character, transcriptional regulator. total_tree_length Numeric, total tree length per module (typically median across jackknife versions module). within_species_diversity Numeric, within-species diveristy per module (typically median across jackknife versions module). p_cutoff Numeric, cutoff probability module's statistics drawn distribution actual modules distribution random modules. Modules retained probability exceeds cutoff.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/filterModuleTrees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter modules based on their tree representations — filterModuleTrees","text":"Data frame tree-based statistics actual (pruned) modules filtering.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/filterModuleTrees.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter modules based on their tree representations — filterModuleTrees","text":"within-species diversity measures variability module connectivity patterns within species total tree length measures variability module connectivity patterns within across species. within-species diversity subset total tree, hence expect linear relationship two statistics. line explains detection robustness: modules low within-species diversity low total tree length well-preserved within across species, meaning modules robustly detected clones, whereas modules, metrics high, poorly preserved just across also within species, indicating high detection uncertainty (\"wobbliness\"). Random modules expected fall wobbly end spectrum, actual modules expected fall robust end spectrum. function removes modules uncertain detect, .e. modules similar random modules terms total tree length within-species diversity. calculates probable statistics actual module come distribution actual modules (\\(p_{actual}\\)) probable come distribution random modules (\\(p_{random}\\)) using probability density functions two bivariate normal distributions. $$\\frac{p_{actual}}{p_{actual} + p_{random}} > p_{cutoff}$$ fulfilled, module kept, otherwise removed.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedModules.html","id":null,"dir":"Reference","previous_headings":"","what":"Find conserved and diverged modules — findConservedDivergedModules","title":"Find conserved and diverged modules — findConservedDivergedModules","text":"Finds conserved diverged network modules based (weighted) linear model total tree length within-species diversity (case focus interest conservation overall divergence) species--branch length diversity species (case focus interest species-specific divergence) module trees. Modules considered conserved diverged fall outside 95% prediction interval regression line.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedModules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find conserved and diverged modules — findConservedDivergedModules","text":"","code":"findConservedDivergedModules(tree_stats, lm_tree_stats, conf_level = 0.95)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedModules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find conserved and diverged modules — findConservedDivergedModules","text":"tree_stats Data frame tree-based statistics pruned modules. Columns required case focus interest conservation overall divergence: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. total_tree_length Numeric, total tree length per module (typically median across jackknife versions module). var_total_tree_length Numeric, variance total tree lengths across jackknifed versions module (optional, needed weighted regression). lwr_total_tree_length Numeric, lower bound confidence interval total tree length calculated based jackknifed versions module (optional, needed plotting error bars later ). upr_total_tree_length Numeric, upper bound confidence interval total tree length calculated based jackknifed versions module (optional, needed plotting error bars later ). within_species_diversity Numeric, within-species diveristy per module (typically median across jackknife versions module). lwr_within_species_diversity Numeric, lower bound confidence interval within-species diversity calculated based jackknifed versions module (optional, needed plotting error bars later ). upr_within_species_diversity Numeric, upper bound confidence interval within-species diversity calculated based jackknifed versions module (optional, needed plotting error bars later ). Columns required case focus interest species-specific divergence: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. {{species}}_to_other_branch_length Numeric, species--branch length per module (typically median across jackknife versions module). var_{{species}}_to_other_branch_length Numeric, variance species--branch lengths across jackknifed versions module (optional, needed weighted regression). lwr_{{species}}_to_other_branch_length Numeric, lower bound confidence interval species--branch length calculated based jackknifed versions module (optional, needed plotting error bars later ). upr_{{species}}_to_other_branch_length Numeric, upper bound confidence interval species--branch length calculated based jackknifed versions module (optional, needed plotting error bars later ). {{species}}_diversity Numeric, diveristy species interest per module (typically median across jackknife versions module) lwr_{{species}}_diversity Numeric, lower bound confidence interval species-specific diversity calculated based jackknifed versions module (optional, needed plotting error bars later ). upr_{{species}}_diversity Numeric, upper bound confidence interval species-specific diversity calculated based jackknifed versions module (optional, needed plotting error bars later ). lm_tree_stats object class lm, (weighted) linear model total tree length within-species diversity (case focus interest conservation overall divergence) species--branch length diversity species (case focus interest divergence particular species others). conf_level Confidence level prediction interval (default: 0.95).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedModules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find conserved and diverged modules — findConservedDivergedModules","text":"Data frame cross-species conservation measures per module. addition relevant columns input \"tree_stats\", contains 6 7 new columns: focus Character, focus interest terms cross-species conservation, either \"overall\" focus interest conservation overall divergence, name species focus interest divergence particular species others. Derived input linear model (lm_tree_stats). fit Numeric, fitted total tree length/species-to_other branch length diversity value module. lwr_fit Numeric, lower bound prediction interval fit. upr_fit Numeric, upper bound prediction interval fit. residual Numeric, residual module linear model. calculated difference observed expected (fitted) total tree lengths/species--branch lengths. weight Numeric, weight module linear regression, inversely proportional variance total tree lengths/species--branch lengths (weighted_lm set TRUE). t_score Numeric, t-score module. calculated residual normalized standard error total tree length/species--branch length prediction given diversity value. conservation Character, \"not_significant\" module falls inside prediction interval fit, \"diverged\" module higher total tree length/species--branch length upper boundary prediction interval, \"conserved\" module lower total tree length/species--branch length lower boundary prediction interval.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedModules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find conserved and diverged modules — findConservedDivergedModules","text":"part CroCoNet approach, pairwise module preservation scores calculated clones, within across species (see calculatePresStats) neighbor-joining trees reconstructed based preservation scores per module (see convertPresToDist reconstructTrees). tips resulting tree represent clones branch lengths represent dissimilarity module connectivity patterns networks 2 clones. Various useful statistics can defined based trees (see also calculateTreeStats). total tree length sum branch lengths tree measures module variability within across species. diversity species sum branches connecting clones species measures module variability within particular species. within-species diversity sum diversity values across species measures module variability within species general. species--branch length defined length internal branch connects subtree clones species interest subtree clones measures module variability species others. Overall divergence best represented total tree length, species-specific divergence best represented species--branch length, however absolute values statistics difficult interpret. diversity (either overall particular species) can used internal reference determine whether total tree length species--branch length larger/smaller expected. general relationship total tree length overall diversity species--branch length diversity species captured via linear regression (see also fitTreeStatsLm). term cross-species conservation, interesting modules outliers follow linear trend. analyzing linear regression total tree length within-species diversity, can single modules conserved diverged overall. modules fall far trend line conserved ones: lower total tree length expected based within-species diversity, meaning species well-separated within tree rather mixed among . contrast, modules located far trend line diverged ones: higher total tree length expected based within-species diversity, meaning thave long cross-species branches one pairs species. analyzing linear regression species--branch length diversity species, can single modules diverged particular species others: modules fall far trend line, .e. longer species--branch expected based diversity species. modules fall trend line case meaningful, since can call module conserved, conserved across species. types analysis, quantitatively define modules outliers, thus conserved diverged, calculating prediction interval linear fit. module considered diverged overall/species-specific manner higher total tree length/species--branch length upper boundary prediction interval, module considered conserved lower total tree length lower boundary prediction interval. degree conservation/divergence can compared modules categorized conserved/diverged. recommend 2 measures: 1) residual, absolute difference observed expected total tree lengths/species--branch lengths given diversity value, 2) t-score, residual normalized standard error total tree length/species--branch length prediction given diversity value. linear regression can weighted error data points. gain information, can use jackknifing: member gene module removed statistics recalculated (see parameter jackknife function calculatePresStats). weight module regression defined inversely proportional variance dependent variable (total tree length/species--branch length) across jackknife versions.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedModules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find conserved and diverged modules — findConservedDivergedModules","text":"","code":"module_conservation_overall <- findConservedDivergedModules(tree_stats, lm_overall)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedTargets.html","id":null,"dir":"Reference","previous_headings":"","what":"Find conserved and diverged target genes within a module — findConservedDivergedTargets","title":"Find conserved and diverged target genes within a module — findConservedDivergedTargets","text":"Finds target genes within conserved/diverged module particularly responsible conservation/divergence.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedTargets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find conserved and diverged target genes within a module — findConservedDivergedTargets","text":"","code":"findConservedDivergedTargets(   module_name,   tree_stats_jk,   lm_tree_stats,   conf_level = 0.95 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedTargets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find conserved and diverged target genes within a module — findConservedDivergedTargets","text":"module_name Character, name module interest. tree_stats_jk Data frame tree statistics per jackknife module version across modules. Columns required case focus interest conservation overall divergence: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. type Character, module type (orig = original jk = jackknifed). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk' nameOfRegulator_orig case module type 'orig'). gene_removed Character, name gene removed jackknifing (NA case module type 'orig'). total_tree_length Numeric, total tree length per jackknife module version. within_species_diversity Numeric, within-species diversity per jackknife module version. Columns required case focus interest species-specific divergence: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. type Character, module type (orig = original jk = jackknifed). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk' nameOfRegulator_orig case module type 'orig'). gene_removed Character, name gene removed jackknifing (NA case module type 'orig'). {{species}}_to_other_branch_length Numeric, branch length species interest others per jackknife module version {{species}}_diversity Numeric, diversity within species interest per jackknife module version. lm_tree_stats Object class lm, (weighted) linear model fit total tree length within-species diversity (case focus interest conservation overall divergence) species--branch length diversity species (case focus interest divergence particular species others). conf_level Confidence level prediction interval (default: 0.95).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedTargets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find conserved and diverged target genes within a module — findConservedDivergedTargets","text":"Data frame cross-species conservation measures per target gene module interest. addition relevant columns tree_stats_jk, contains 4 new columns: focus Character, focus interest terms cross-species conservation, either \"overall\" focus interest conservation overall divergence, name species focus interest divergence particular species others. fit Numeric, fitted total tree length/species--branch length diversity value jackknife module version. lwr_fit Numeric, lower bound prediction interval fit. upr_fit Numeric, upper bound prediction interval fit. residual Numeric, residual jackknife module version linear model. calculated difference observed expected (fitted) total tree length/species--branch length. also contains new summary row aggregate values across jackknife values module.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedTargets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find conserved and diverged target genes within a module — findConservedDivergedTargets","text":"determine whether module whole conserved, diverged overall diverged specific lineage, CroConet approach relies module trees reconstrcuted pairwise preservation scores clones statistics calculated based trees (total tree length, diversity, species--branch length). identify individual genes contribute conservation/divergence, statistics can used combination jackknifing. jackknifing, member gene module removed statistics recalculated, including tree-based statistics inform us cross-species conservation (see parameter jackknife function calculatePresStats). working hypothesis removing target diverged module makes module conserved, target responsible divergence original module, vice versa, removing target conserved module makes module diverged, target responsible conservation original module. quantify effects, function takes use linear models fitted across modules total tree length within-species diversity (case focus interest conservation overall divergence) species--branch length diversity within species (case focus interest species-specific divergence), similarly conserved diverged modules identified first place. However, case aggregate statistic module whole compared regression line, statistic jackknife module version separately. jackknife version highest residual diverged, therefore corresponding target gene conserved, jackknife version lowest residual conserved, therefore corresponding target gene diverged. important note, cases divergence/conservation module contributed single target gene, rather combined signal targets together. example, expected jackknife versions diverged module still fall diverged region prediction interval regression line, even diverged target genes removed. also means \"conserved\" target gene diverged module still likely diverged, just lesser extent others. Therefore, mainly makes sense investigate diverged targets diverged modules conserved targets conserved modules, way around. Based linear model provided, function calculates predicted value prediction interval diversity value jackknife module version well residual jackknife module version. width prediction interval assumed constant entire range diversity values across jackknife versions module calculated based aggregate diversity value (case weighted linear model) aggregate weight module whole (.e. data used fitting lm_tree_stats).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/findConservedDivergedTargets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find conserved and diverged target genes within a module — findConservedDivergedTargets","text":"","code":"POU5F1_target_conservation <- findConservedDivergedTargets(\"POU5F1\", tree_stats_jk, lm_overall)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/fitTreeStatsLm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit (weighted) linear model between tree-based statistics — fitTreeStatsLm","title":"Fit (weighted) linear model between tree-based statistics — fitTreeStatsLm","text":"Fits (weighted) linear model total tree length within-species diversity (case focus interest conservation overall divergence) species--branch length diversity species (case focus interest species-specific divergence).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/fitTreeStatsLm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit (weighted) linear model between tree-based statistics — fitTreeStatsLm","text":"","code":"fitTreeStatsLm(tree_stats, focus = \"overall\", weighted_lm = TRUE)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/fitTreeStatsLm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit (weighted) linear model between tree-based statistics — fitTreeStatsLm","text":"tree_stats Data frame tree-based statistics pruned modules. Columns required case focus interest conservation overall divergence: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. total_tree_length Numeric, total tree length per module (typically median across jackknife versions module). var_total_tree_length Numeric, variance total tree lengths across jackknifed versions module (optional, needed weighted regression). within_species_diversity Numeric, within-species diveristy per module (typically median across jackknife versions module). Columns required case focus interest species-specific divergence: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. {{species}}_to_other_branch_length Numeric, branch length species interest others per module (typically median across jackknife versions module). var_{{species}}_to_other_branch_length Numeric, variance branch length species interest others across jackknifed versions module (optional, needed weighted regression). {{species}}_diversity Numeric, within-species diveristy per module (typically median across jackknife versions module). focus Character, focus interest terms cross-species conservation, either \"overall\" focus interest conservation overall divergence, name species focus interest divergence particular species others. weighted_lm Logical indicating whether linear regression weighted (default: TRUE). TRUE, tree_stats expected contain column var_total_tree_length weights inversely proportional variances. jackknifing performed thus variances calculated, please set parameter FALSE.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/fitTreeStatsLm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit (weighted) linear model between tree-based statistics — fitTreeStatsLm","text":"object class lm.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/fitTreeStatsLm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit (weighted) linear model between tree-based statistics — fitTreeStatsLm","text":"linear models output function can used identify conserved diverged modules, identify target genes within modules contribute conservation/divergence. details, please see findConservedDivergedModules findConservedDivergedTargets. focus interest can specified using parameter focus. focus set \"overall\" (default), linear model fit total tree length within-species diversity, subsequent analysis using findConservedDivergedModules findConservedDivergedTargets can identify modules target genes conserved diverged across species. focus set name species dataset, linear model fit species--branch length diversity species, subsequent analysis using findConservedDivergedModules findConservedDivergedTargets can identify modules target genes diverged species others. Please note aim find conserved modules, focus always set \"overall\". function fits linear model corresponding focus interest calling lm. weighted model desired (default), weights defined inversely proportional variance dependent variable (total tree length species--branch length). jackknifing performed thus variance unknown, please set weighted_lm FALSE.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/fitTreeStatsLm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit (weighted) linear model between tree-based statistics — fitTreeStatsLm","text":"","code":"lm_overall <- fitTreeStatsLm(tree_stats, focus = \"overall\")"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/genes.html","id":null,"dir":"Reference","previous_headings":"","what":"All genes — genes","title":"All genes — genes","text":"300 genes used network inference.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All genes — genes","text":"","code":"genes"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/genes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All genes — genes","text":"character vector 300 elements.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getRegulators.html","id":null,"dir":"Reference","previous_headings":"","what":"Get transcriptional regulators — getRegulators","title":"Get transcriptional regulators — getRegulators","text":"Selects relevant transcriptonal regulators intersecting highly variable genes known transcriptional regulators specified source(s). regulators can used subsequent steps CroCoNet pipeline assemble modules around .","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getRegulators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get transcriptional regulators — getRegulators","text":"","code":"getRegulators(sce, source = \"jaspar_core\", ...)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getRegulators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get transcriptional regulators — getRegulators","text":"sce SingleCellExperiment object containing expression data (logcounts metadata) network genes. Required metadata columns: species Character, name species. clone Character, name clone/cell line. source Character character vector specifying source known transcriptional regulators. can one \"jaspar_core\" (JASPAR 2024 vertebrate core, default), \"jaspar_unvalidated\" (JASPAR 2024 unvalidated), \"image\" (IMAGE database Madsen et al. 2018), alternatively, can  custom list regulators provided user. ... Additional arguments passed getTopHVGs.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getRegulators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get transcriptional regulators — getRegulators","text":"character vector known transcriptional regulators highly variable least one species data.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getRegulators.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get transcriptional regulators — getRegulators","text":"approach combines information dataset hand prior biological knowledge pinpoint transcriptional regulators interesting investigate within regulatory networks. information dataset, function identifies highly variable genes data using modelGeneVar getTopHVGs. Briefly, species trend fitted variance mean log-expression values across genes, fitted value gene regarded technical component variation, residual trend regarded biological component variation. genes positive biological component selected highly variable genes species. /less lenient criteria desired, arguments can passed getTopHVGs (e.g. n, prop, var.threshold, fdr.threshold). final set highly variable genes, union highly variable genes taken across species. prior biological knowledge, function extracts list known transcriptional regulators least 1 annotated motif motif database(s) specified source. database can JASPAR 2024 vertebrate core (\"jaspar_core\"), JASPAR 2024 unvalidated (\"jaspar_unvalidated\"), IMAGE database Madsen et al. 2018 (\"image\"), combination . Alternatively, user can provide custom list regulators selected preferred method. Finally, highly variable genes known transcriptional regulators intersected provide final list regulators relevant biological process hand. next steps pipeline, co-expression modules assigned regulators (see assignInitialModules pruneModules), can studied terms cross-species conservation.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getRegulators.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get transcriptional regulators — getRegulators","text":"Rauluseviciute, ., Riudavets-Puig, R., Blanc-Mathieu, R., Castro-Mondragon, J. ., Ferenc, K., Kumar, V., Lemma, R. B., Lucas, J., Chèneby, J., Baranasic, D., Khan, ., Fornes, O., Gundersen, S., Johansen, M., Hovig, E., Lenhard, B., Sandelin, ., Wasserman, W. W., Parcy, F., & Mathelier, . (2023). JASPAR 2024: 20th anniversary open-access database transcription factor binding profiles. Nucleic Acids Research, 52(D1), D174–D182. Madsen, J. G. S., Rauch, ., Van Hauwaert, E. L., Schmidt, S. F., Winnefeld, M., & Mandrup, S. (2018). Integrated analysis motif activity gene expression changes transcription factors. Genome Research, 28(2), 243–255.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getRegulators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get transcriptional regulators — getRegulators","text":"","code":"regulators <- getRegulators(sce) regulators2 <- getRegulators(sce, n = 2000) regulators3 <- getRegulators(sce, c(\"jaspar_core\", \"jaspar_unvalidated\", \"image\"))"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getTreeDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a tree to a data frame — getTreeDf","title":"Convert a tree to a data frame — getTreeDf","text":"Converts tree data frame row corresponds branch tree.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getTreeDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a tree to a data frame — getTreeDf","text":"","code":"getTreeDf(tree)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getTreeDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a tree to a data frame — getTreeDf","text":"tree Object class [phylo] clones tips. expected component 'species' specifies species tip belongs .","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/getTreeDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a tree to a data frame — getTreeDf","text":"data frame tree branches.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/gtf_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List of genomic annotations — gtf_list","title":"List of genomic annotations — gtf_list","text":"List genomic annotations per species GRanges objects. human annotation GTF Hg38 GENCODE release 32 primary assembly, gorilla cynomolgus macaque annotations created transferring human annotation onto gorGor6 macFas6 genomes via tool Liftoff (https://github.com/agshumate/Liftoff). annotation subsetted 300 genes feature example dataset.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/gtf_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of genomic annotations — gtf_list","text":"","code":"gtf_list"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/gtf_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of genomic annotations — gtf_list","text":"named list 3 GRanges objects. object 8 columns. Attributes: seqnames Chromosome contig name. start Genomic start location. end Genomic end location. width Width feature base pairs. strand Genomic strand (\"+\" \"-\"). source prediction program public database annotations came . type Feature type (gene, transcript, exon, CDS, UTR, start_codon, stop_codon Selenocysteine). score degree confidence feature's existence coordinates. phase One '0', '1' '2'. '0' means first base feature first base codon, '1' second base first base codon, . gene_id Unique identifier gene. gene_name Name gene. transcript_id Unique identifier transcript. transcript_name Name transcript.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/gtf_list.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"List of genomic annotations — gtf_list","text":"<ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.primary_assembly.annotation.gtf.gz>, <https://hgdownload.soe.ucsc.edu/goldenPath/gorGor6/bigZips/gorGor6.fa.gz>, <https://ftp.ensembl.org/pub/release-109/fasta/macaca_fascicularis/dna/Macaca_fascicularis.Macaca_fascicularis_6.0.dna_sm.toplevel.fa.gz>","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/image_TRs.html","id":null,"dir":"Reference","previous_headings":"","what":"IMAGE transcriptional regulators — image_TRs","title":"IMAGE transcriptional regulators — image_TRs","text":"Transcriptional regulators least 1 annotated motif IMAGE database (Madsen et al. 2018).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/image_TRs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMAGE transcriptional regulators — image_TRs","text":"","code":"image_TRs"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/image_TRs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMAGE transcriptional regulators — image_TRs","text":"character vector 1351 elements.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/initial_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial modules — initial_modules","title":"Initial modules — initial_modules","text":"Initial modules created assigning top 250 targets 7 transcriptional regulators involved early neuronal differentiation primates (regulators). regulator, top 250 targets selected based edge weights consensus network: targets regulator ranked based edge weight regulator (regulator-taregt adjacency) 250 targets highest regulator-target adjacencies kept.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/initial_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial modules — initial_modules","text":"","code":"initial_modules"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/initial_modules.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Initial modules — initial_modules","text":"data frame 1750 rows 8 columns: regulator Character, transcriptional regulator. target Target gene transcriptional regulator (member regulator's initial module). weight Consensus edge weight/adjacency, weighted average clonewise adjacencies. n_supporting_clones number clones edge detected. supporting_clones list clones edge detected. rho Approximate Spearman's correlation coefficient 2 genes' expression profiles form edge. p.adj BH-corrected approximate p-value rho. direction Direction interaction 2 genes form edge (\"+\" \"-\").","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/jaspar_core_TRs.html","id":null,"dir":"Reference","previous_headings":"","what":"JASPAR 2024 vertebrate core transcriptional regulators — jaspar_core_TRs","title":"JASPAR 2024 vertebrate core transcriptional regulators — jaspar_core_TRs","text":"Transcriptional regulators least 1 annotated motif JASPAR 2024 vertebrate core collection.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/jaspar_core_TRs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JASPAR 2024 vertebrate core transcriptional regulators — jaspar_core_TRs","text":"","code":"jaspar_core_TRs"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/jaspar_core_TRs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JASPAR 2024 vertebrate core transcriptional regulators — jaspar_core_TRs","text":"character vector 784 elements.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/jaspar_unvalidated_TRs.html","id":null,"dir":"Reference","previous_headings":"","what":"JASPAR 2024 unvalidated transcriptional regulators — jaspar_unvalidated_TRs","title":"JASPAR 2024 unvalidated transcriptional regulators — jaspar_unvalidated_TRs","text":"Transcriptional regulators least 1 annotated motif JASPAR 2024 unvalidated collection.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/jaspar_unvalidated_TRs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JASPAR 2024 unvalidated transcriptional regulators — jaspar_unvalidated_TRs","text":"","code":"jaspar_unvalidated_TRs"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/jaspar_unvalidated_TRs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JASPAR 2024 unvalidated transcriptional regulators — jaspar_unvalidated_TRs","text":"character vector 590 elements.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/lm_overall.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear model for the characterization of overall module conservation — lm_overall","title":"Linear model for the characterization of overall module conservation — lm_overall","text":"weighted linear model total tree length within-species diversity 12 modules subsetted early neuronal differentiation dataset. captures general relationship two tree-based statistics dataset thus also describes expected total tree length given within-species diversity. identifying modules differ expectation, .e. identifying outlier data points, can used pinpoint conserved overall diverged modules. combination jackknifing, can also used identify target genes within modules contribute conservation/divergence. linear model fit calling lm weights inversely proportional variance total tree lengths.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/lm_overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear model for the characterization of overall module conservation — lm_overall","text":"","code":"lm_overall"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/lm_overall.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Linear model for the characterization of overall module conservation — lm_overall","text":"object class lm fitted object tree_stats formula \"total_tree_length ~ within_species_diversity\".","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/loadNetworks.html","id":null,"dir":"Reference","previous_headings":"","what":"Load networks as a list of igraph objects — loadNetworks","title":"Load networks as a list of igraph objects — loadNetworks","text":"Loads TSV files containing gene-gene edge weights summarizes list igraph objects per clone (.e. cell line biological replicate within species).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/loadNetworks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load networks as a list of igraph objects — loadNetworks","text":"","code":"loadNetworks(   path,   clone_names = NULL,   rep = 1L,   directed = TRUE,   min_occurrence = 2L,   n_cores = 1L )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/loadNetworks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load networks as a list of igraph objects — loadNetworks","text":"path Character, path files containing gene-gene edge weights can found. clone_names Character vector, names clones used network reconstruction. expected base names TSV files (format: nameOfClone.tsv nameOfClone_index.tsv). set NULL (default), names deduced file names stripping anything starting \"_\" \".tsv\". rep Integer, number output files per clone, e.g. number different subsamplings number independent runs case stochastic network inference algorithm (default: 1). rep > 1, TSV files expected indexed 1 rep clone (format: nameOfClone_index.tsv). directed Logical indicating whether network inference method produces directed output, .e. whether geneA-geneB geneB-geneA can present among edges (default: TRUE). GRNBoost2 left TRUE, correlation-based methods likely set FALSE. min_occurrence Integer, minimum number occurrences edges across runs/subsamplings kept (default: 2). Disregarded rep = 1. n_cores Integer, number cores (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/loadNetworks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load networks as a list of igraph objects — loadNetworks","text":"named list igraph objects containing networks per clone. list names taken clone_names. igraph object contains following edge attributes: weight Numeric, edge weight (taken 3rd column input TSV files). n_supporting_edges Integer, number times edge appears across different subsamplings/runs 2 possible directions (present network inference run several times per clone). highest possible number occurrence edge 2×rep case directed network inference method rep case undirected network inference method. Starting 4th column input TSV files, columns preserved edge attributes unchanged names.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/loadNetworks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load networks as a list of igraph objects — loadNetworks","text":"functions reads formats TSV files directory specified path. base names TSV files interest can specified using parameter clone_names (case files expected named using format: nameOfClone.tsv nameOfClone_index.tsv).  clone_names set NULL (default), TSV files path read clone names deduced file names stripping anything starting \"_\" \".tsv\". first 3 columns, input TSV file expected contain first gene forms edge, second gene forms edge edge weight. can additional columns well, preserved edge attributes igraph objects. edge weights calculated different subsamplings cells per clone, network inference algorithm involving stochastic steps (e.g. GRNBoost2) run several times clone, edge weights averaged across subsamplings/runs, single combined igraph object returned per clone. number subsamplings/runs specified parameter rep. TSV files corresponding clone different subsamplings/runs expected base name different indices: nameOfClone_index.tsv. network inference method produces output directed edges, .e. geneA-geneB geneB-geneA can present, parameter directed set TRUE (case e.g. GRNBoost2). case edge weights inferred gene pair opposite directions averaged. edge one directions missing, regarded 0. correlation-based methods (e.g. correlatePairs), directed likely set FALSE. cases, loadNetworks returns undirected network. Rarely occurring edges can removed altogether specifying min_occurrence. relevant network inference done per clone (rep = 1), therefore case value min_occurrence ignored. network inference done several times clone (rep > 1), highest possible number occurrences edge 2×rep case directed network inference method rep case undirected network inference method. edge occurs less often specified value min_occurrence, edge removed. can helpful 1) denoise networks 2) decrease computational power needed next steps.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/loadNetworks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Load networks as a list of igraph objects — loadNetworks","text":"Moerman, T., Santos, S. ., González-Blas, C. B., Simm, J., Moreau, Y., Aerts, J., & Aerts, S. (2019). GRNBoost2 Arboreto: efficient scalable inference gene regulatory networks. Bioinformatics , 35(12), 2159–2161. Lun, . T. L., McCarthy, D. J., & Marioni, J. C. (2016). step--step workflow low-level analysis single-cell RNA-seq data Bioconductor. F1000Research, 5, 2122.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/loadNetworks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load networks as a list of igraph objects — loadNetworks","text":"","code":"network_list_raw <- loadNetworks(path = system.file(\"extdata\", package = \"CroCoNet\"),                                  rep = 10)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/module_conservation_overall.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-species conservation measures per module — module_conservation_overall","title":"Cross-species conservation measures per module — module_conservation_overall","text":"Cross-species conservation measures 12 modules subsetted early neuronal differentiation dataset. Modules found conserved diverged overall (across species) labelled \"conserved\" \"diverged\" column conservation.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/module_conservation_overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-species conservation measures per module — module_conservation_overall","text":"","code":"module_conservation_overall"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/module_conservation_overall.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cross-species conservation measures per module — module_conservation_overall","text":"data frame 12 rows 16 columns: focus Character, focus interest terms cross-species conservation (\"overall\"). regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. total_tree_length Numeric, total tree length per module (median across jackknife versions module). lwr_total_tree_length Numeric, lower bound confidence interval total tree length calculated based jackknifed versions module. upr_total_tree_length Numeric, upper bound confidence interval total tree length calculated based jackknifed versions module. within_species_diversity Numeric, within-species diveristy per module (median across jackknife versions module). lwr_within_species_diversity Numeric, lower bound confidence interval within-species diversity calculated based jackknifed versions module. upr_within_species_diversity Numeric, upper bound confidence interval within-species diversity calculated based jackknifed versions module. fit Numeric, fitted total tree length within-species diversity value module. lwr_fit Numeric, lower bound prediction interval fit. upr_fit Numeric, upper bound prediction interval fit. residual Numeric, residual module linear model. calculated difference observed expected (fitted) total tree lengths. weight Numeric, weight module linear regression, inversely proportional variance total tree lengths. t_score Numeric, t-score module. calculated residual normalized standard error total tree length prediction given within-species diversity value. conservation Character, \"not_significant\" module falls inside prediction interval fit, \"diverged\" module higher total tree length upper boundary prediction interval, \"conserved\" module lower total tree length lower boundary prediction interval.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/module_conservation_overall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cross-species conservation measures per module — module_conservation_overall","text":"determine whether module whole conserved diverged overall, module trees reconstructed pairwise preservation scores clones based trees 2 useful statistics calculated module: total tree length within-species diversity (details please see calculatePresStats, reconstructTrees, calculateTreeStats). fitting weighted linear model total tree length within-species diversity values modules, module considered diverged fell prediction interval regression line, module considered conserved fell prediction interval regression line (details please see fitTreeStatsLm findConservedDivergedModules. degree conservation/divergence can compared modules categorized conserved/diverged using 2 measures, residual t-score.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/network_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List of networks — network_list","title":"List of networks — network_list","text":"List networks per clone edge weights re-scaled 0 1, gene pairs (edges) overlapping annotations removed. networks inferred using GRNBoost2 based subset primate neural differentiation scRNA-seq dataset. 300 genes subsetted data used potential regulators. circumvent stochastic nature algorithm, GRNBoost2 run 10 times count matrices, results averaged across runs, rarely occurring edges removed altogether. addition, edges inferred gene pair opposite directions also averaged. Edge weights scaled maximum edge weight across clones. Gene pairs overlapping annotations species' genomes removed networks.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/network_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of networks — network_list","text":"","code":"network_list"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/network_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of networks — network_list","text":"named list 9 [igraph] objects. network contains 300 nodes, 1 node attribute 3 edge attributes: Node attributes: name Name node (gene). Edge attributes: weight Edge weight, importance score calculate GRNBoost2 rescaled 0 1. n_supporting_edges number times edge appears across 10 independent GRNBoost2 runs 2 possible directions (maximum value: 10 runs * 2 direction = 20). genomic_dist Numeric, genomic distance 2 genes form edge (Inf 2 genes annotated different chromosomes/contigs).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/network_list_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"#' SCE object list of the primate neural differentiation dataset #' #' A subset of the primate neural differentiation scRNA-seq dataset as a list of SCE objects. The data was collected during the early neural differentiation of human, gorilla and cynomolgus macaque iPS cells with 3 human, 2 gorilla and 4 cynomolgus cell lines (clones). Using a directed differentiation protocol, cells were differentiated into neural progenitor cells (NPCs) over the course of 9 days, and scRNA-seq data was obtained at six time points (days 0, 1, 3, 5, 7 and 9) during this process. Each element of the list is the SCE object of a clone with 300 genes and 100 cells, containing the raw counts, log-normalized counts and randomized quantile residuals as well as the metadata. #' #' @format A named list of 9 SCE objects. Each SCE object has 300 rows, 100 columns, 9 metadata columns and 3 assays. #' #' Metadata columns: #'  #' species Name of the species. #' clone Name of the clone/cell line. #' day The day when the cell was collected. #' n_UMIs Number of UMIs detected. #' n_genes Number of genes detected. #' perc_mito Percent of mitochondrial reads. #' sizeFactor Size factor for scaling normalization, calculated per clone using [scran::computeSumFactors] and [scran::quickCluster]. #' pseudotime Pseudotime inferred by [SCORPIUS::infer_trajectory]. #' cell_type Cell type labels predicted by [SingleR::classifySingleR] using the embryoid body dataset from Rhodes et al. 2022 as reference. #'  #' Assays: #'  #' counts Raw counts. #' logcounts Log-normalized counts created by calculating size factors per clone using [scran::computeSumFactors] and [scran::quickCluster], log-normalizing by [scuttle::logNormCounts]. #' rand_quantile_res Randomized quantile residuals calculated by [transformGamPoi::transformGamPoi]. #'  ","title":"#' SCE object list of the primate neural differentiation dataset #' #' A subset of the primate neural differentiation scRNA-seq dataset as a list of SCE objects. The data was collected during the early neural differentiation of human, gorilla and cynomolgus macaque iPS cells with 3 human, 2 gorilla and 4 cynomolgus cell lines (clones). Using a directed differentiation protocol, cells were differentiated into neural progenitor cells (NPCs) over the course of 9 days, and scRNA-seq data was obtained at six time points (days 0, 1, 3, 5, 7 and 9) during this process. Each element of the list is the SCE object of a clone with 300 genes and 100 cells, containing the raw counts, log-normalized counts and randomized quantile residuals as well as the metadata. #' #' @format A named list of 9 SCE objects. Each SCE object has 300 rows, 100 columns, 9 metadata columns and 3 assays. #' #' Metadata columns: #'  #' species Name of the species. #' clone Name of the clone/cell line. #' day The day when the cell was collected. #' n_UMIs Number of UMIs detected. #' n_genes Number of genes detected. #' perc_mito Percent of mitochondrial reads. #' sizeFactor Size factor for scaling normalization, calculated per clone using [scran::computeSumFactors] and [scran::quickCluster]. #' pseudotime Pseudotime inferred by [SCORPIUS::infer_trajectory]. #' cell_type Cell type labels predicted by [SingleR::classifySingleR] using the embryoid body dataset from Rhodes et al. 2022 as reference. #'  #' Assays: #'  #' counts Raw counts. #' logcounts Log-normalized counts created by calculating size factors per clone using [scran::computeSumFactors] and [scran::quickCluster], log-normalizing by [scuttle::logNormCounts]. #' rand_quantile_res Randomized quantile residuals calculated by [transformGamPoi::transformGamPoi]. #'  ","text":"List networks per clone raw edge weights. networks inferred using GRNBoost2 based subset primate neural differentiation scRNA-seq dataset. 300 genes subsetted data used potential regulators. circumvent stochastic nature algorithm, GRNBoost2 run 10 times count matrices, results averaged across runs, rarely occurring edges removed altogether. addition, edges inferred gene pair opposite directions also averaged.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/network_list_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"#' SCE object list of the primate neural differentiation dataset #' #' A subset of the primate neural differentiation scRNA-seq dataset as a list of SCE objects. The data was collected during the early neural differentiation of human, gorilla and cynomolgus macaque iPS cells with 3 human, 2 gorilla and 4 cynomolgus cell lines (clones). Using a directed differentiation protocol, cells were differentiated into neural progenitor cells (NPCs) over the course of 9 days, and scRNA-seq data was obtained at six time points (days 0, 1, 3, 5, 7 and 9) during this process. Each element of the list is the SCE object of a clone with 300 genes and 100 cells, containing the raw counts, log-normalized counts and randomized quantile residuals as well as the metadata. #' #' @format A named list of 9 SCE objects. Each SCE object has 300 rows, 100 columns, 9 metadata columns and 3 assays. #' #' Metadata columns: #'  #' species Name of the species. #' clone Name of the clone/cell line. #' day The day when the cell was collected. #' n_UMIs Number of UMIs detected. #' n_genes Number of genes detected. #' perc_mito Percent of mitochondrial reads. #' sizeFactor Size factor for scaling normalization, calculated per clone using [scran::computeSumFactors] and [scran::quickCluster]. #' pseudotime Pseudotime inferred by [SCORPIUS::infer_trajectory]. #' cell_type Cell type labels predicted by [SingleR::classifySingleR] using the embryoid body dataset from Rhodes et al. 2022 as reference. #'  #' Assays: #'  #' counts Raw counts. #' logcounts Log-normalized counts created by calculating size factors per clone using [scran::computeSumFactors] and [scran::quickCluster], log-normalizing by [scuttle::logNormCounts]. #' rand_quantile_res Randomized quantile residuals calculated by [transformGamPoi::transformGamPoi]. #'  ","text":"","code":"network_list_raw"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/network_list_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"#' SCE object list of the primate neural differentiation dataset #' #' A subset of the primate neural differentiation scRNA-seq dataset as a list of SCE objects. The data was collected during the early neural differentiation of human, gorilla and cynomolgus macaque iPS cells with 3 human, 2 gorilla and 4 cynomolgus cell lines (clones). Using a directed differentiation protocol, cells were differentiated into neural progenitor cells (NPCs) over the course of 9 days, and scRNA-seq data was obtained at six time points (days 0, 1, 3, 5, 7 and 9) during this process. Each element of the list is the SCE object of a clone with 300 genes and 100 cells, containing the raw counts, log-normalized counts and randomized quantile residuals as well as the metadata. #' #' @format A named list of 9 SCE objects. Each SCE object has 300 rows, 100 columns, 9 metadata columns and 3 assays. #' #' Metadata columns: #'  #' species Name of the species. #' clone Name of the clone/cell line. #' day The day when the cell was collected. #' n_UMIs Number of UMIs detected. #' n_genes Number of genes detected. #' perc_mito Percent of mitochondrial reads. #' sizeFactor Size factor for scaling normalization, calculated per clone using [scran::computeSumFactors] and [scran::quickCluster]. #' pseudotime Pseudotime inferred by [SCORPIUS::infer_trajectory]. #' cell_type Cell type labels predicted by [SingleR::classifySingleR] using the embryoid body dataset from Rhodes et al. 2022 as reference. #'  #' Assays: #'  #' counts Raw counts. #' logcounts Log-normalized counts created by calculating size factors per clone using [scran::computeSumFactors] and [scran::quickCluster], log-normalizing by [scuttle::logNormCounts]. #' rand_quantile_res Randomized quantile residuals calculated by [transformGamPoi::transformGamPoi]. #'  ","text":"named list 9 [igraph] objects. network contains 300 nodes, 1 node 2 edge attributes: Node attributes: name Name node (gene). Edge attributes: weight Edge weight, importance score calculate GRNBoost2. n_supporting_edges number times edge appears across 10 independent GRNBoost2 runs 2 possible directions (maximum value: 10 runs * 2 direction = 20).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/normalizeEdgeWeights.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize edge weights between 0 and 1 — normalizeEdgeWeights","title":"Normalize edge weights between 0 and 1 — normalizeEdgeWeights","text":"Transforms edge weights networks range [0, 1].","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/normalizeEdgeWeights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize edge weights between 0 and 1 — normalizeEdgeWeights","text":"","code":"normalizeEdgeWeights(   network_list,   signed = FALSE,   min_weight = NULL,   max_weight = NULL,   n_cores = 1L )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/normalizeEdgeWeights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize edge weights between 0 and 1 — normalizeEdgeWeights","text":"network_list named list igraph objects containing networks clones. signed Logical indicating whether signed network desired (default: FALSE, see Details). min_weight, max_weight Numeric, theoretical minimum maximum values edge weights. set NULL (default), normalization performed using empirical minimum maximum. correlation-based edge weights, please set min_weight max_weight -1 1, respectively. n_cores Integer, number cores (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/normalizeEdgeWeights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize edge weights between 0 and 1 — normalizeEdgeWeights","text":"named list igraph objects containing networks clones, edge weights normalized 0 1. originally positive negative edge weights present data, new edge attribute added igraph objects: direction Character, direction interaction 2 genes form edge (\"+\" \"-\" depending sign edge weight normalization).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/normalizeEdgeWeights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize edge weights between 0 and 1 — normalizeEdgeWeights","text":"Normalizing edge weights 0 1 makes interpretable adjacencies ensures network concepts connectivity applicable. 2 approaches normalization: signed set FALSE (unsigned network, default), gene pairs high negative edge weights considered connected gene pairs high positive edge weights. Therefore negative edge weights first replaced absolute values, edge weights scaled maximum weight across networks: $$w_{new} =  \\frac{|w|}{max(|w|)}$$ transformation, edge weights/adjacencies around 0 correspond former low positive low negative values, edge weights/adjacencies around 1 correspond former high positive high negative values. signed set TRUE (signed network), gene pairs high negative edge weights considered unconnected. Therefore edge weights transformed 0 1 using min-max normalization: $$w_{new} = \\frac{w - min(w)}{max(w) - min(w)}$$ transformation, edge weights/adjacencies around 0 correspond former high negative values edge weights/adjacencies around 1 correspond former high positive values. theoretical minimum maximum edge weights known, can provided using parameters min_weight max_weight. example, networks inferred calculating correlations gene expression profiles, min_weight set -1 max_weight set 1. min_weight max_weight left NULL, minimum maximum edge weights calculated empirically using data. normalization either approaches , possible tell anymore edges positive edges negative weight originally. Since can useful piece information (can specify mode regulation: activation repression), information sign stored new edge attribute \"direction\" output igraph objects (\"+\" original edge weight positive \"-\" original edge weight negative). original edge weights positive, edge attribute \"direction\" added.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/normalizeEdgeWeights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize edge weights between 0 and 1 — normalizeEdgeWeights","text":"","code":"network_list_norm <- normalizeEdgeWeights(network_list_raw)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedModules.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot module conservation — plotConservedDivergedModules","title":"Plot module conservation — plotConservedDivergedModules","text":"Plots tree-bases statistics characterize cross-species conservation modules marks modules found conserved/diverged.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedModules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot module conservation — plotConservedDivergedModules","text":"","code":"plotConservedDivergedModules(   module_conservation,   N = 5L,   rank_by = \"residual\",   colors = NULL,   font_size = 14,   label_size = 2.5 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedModules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot module conservation — plotConservedDivergedModules","text":"module_conservation Data frame cross-species conservation measures per module. Columns required case focus interest conservation overall divergence: focus Character, focus interest terms cross-species conservation, \"overall\" focus interest conservation overall divergence. regulator Character, transcriptional regulator. total_tree_length Numeric, total tree length per module (typically median across jackknife versions module). lwr_total_tree_length Numeric, lower bound confidence interval total tree length calculated based jackknifed versions module (optional, needed plotting error bars later ). upr_total_tree_length Numeric, upper bound confidence interval total tree length calculated based jackknifed versions module (optional, needed plotting error bars later ). within_species_diversity Numeric, within-species diveristy per module (typically median across jackknife versions module). lwr_within_species_diversity Numeric, lower bound confidence interval within-species diversity calculated based jackknifed versions module (optional, needed plotting error bars later ). upr_within_species_diversity Numeric, upper bound confidence interval within-species diversity calculated based jackknifed versions module (optional, needed plotting error bars later ). fit Numeric, fitted total tree length within-species diversity value module. lwr_fit Numeric, lower bound prediction interval fit. upr_fit Numeric, upper bound prediction interval fit. residual Numeric, residual module linear model. calculated difference observed expected (fitted) total tree lengths. t_score Numeric, t-score module. calculated residual normalized standard error total tree length prediction given within-species diversity value conservation Character, \"not_significant\" module falls inside prediction interval fit, \"diverged\" module higher total tree length upper boundary prediction interval, \"conserved\" module lower total tree length lower boundary prediction interval Columns required case focus interest species-specific divergence: focus Character, focus interest terms cross-species conservation, name species focus interest species-specific divergence regulator Character, transcriptional regulator. {{species}}_to_other_branch_length Numeric, species--branch length per module (typically median across jackknife versions module). lwr_{{species}}_to_other_branch_length Numeric, lower bound confidence interval species--branch length calculated based jackknifed versions module (optional, needed plotting error bars later ). upr_{{species}}_to_other_branch_length Numeric, upper bound confidence interval species--branch length calculated based jackknifed versions module (optional, needed plotting error bars later ). {{species}}_diversity Numeric, diveristy species interest per module (typically median across jackknife versions module). lwr_{{species}}_diversity Numeric, lower bound confidence interval species-specific diversity calculated based jackknifed versions module (optional, needed plotting error bars later ). upr_{{species}}_diversity Numeric, upper bound confidence interval species-specific diversity calculated based jackknifed versions module (optional, needed plotting error bars later ). fit Numeric, fiited species-to_other branch length species-specific diversity value module. lwr_fit Numeric, lower bound prediction interval fit. upr_fit Numeric, upper bound prediction interval fit. residual Numeric, residual module linear model. calculated difference observed expected (fitted) species-to_other branch lengths. t_score Numeric, t-score module. calculated residual normalized standard error species-to_other branch length prediction given within-species diversity value. conservation Character, 'not_significant' module falls inside prediction interval fit, 'diverged' module higher species-to_other branch length upper boundary prediction interval, 'conserved' module lower species-to_other branch length lower boundary prediction interval. N Integer, number top conserved diverged modules label. rank_by Character, one \"residual\" \"t_score\". name variable rank selecting top N conserved diverged modules label. colors (Named) character vector length 2, colors diverged conserved modules. font_size Numeric, font size (default: 14). label_size Numeric, size labels conserved diverged modules (default: 2.5).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedModules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot module conservation — plotConservedDivergedModules","text":"ggplot object.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedModules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot module conservation — plotConservedDivergedModules","text":"determine whether module whole conserved, diverged overall diverged specific lineage, CroCoNet approach relies module trees reconstructed pairwise preservation scores clones statistics calculated based trees (total tree length, species--branch length, species-specific overall diversity, details please see calculatePresStats, reconstructTrees, calculateTreeStats findConservedDivergedModules). function plots input module along regression line captures relationship total tree length within-species diversity (case focus interest conservation overall divergence) species--branch length diversity species (case focus interest divergence particular species others). module considered diverged overall/species-specific manner falls prediction interval regression line, module considered conserved falls prediction interval regression line. regression line drawn dark grey, 95% prediction interval line shown light grey area. focus interest conservation overall divergence, conserved modules colored green, diverged modules colored red, top 'N' conserved diverged modules based variable specified rank_by labelled. focus interest divergence particular species others, diverged modules colored labelled, modules prediction interval meaningful thus highlighted. confidence intervals provided variables, module plotted error bars.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedModules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot module conservation — plotConservedDivergedModules","text":"","code":"plotConservedDivergedModules(module_conservation_overall)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedTargets.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot target conservation — plotConservedDivergedTargets","title":"Plot target conservation — plotConservedDivergedTargets","text":"Plots cross-species conservation target genes within conserved/diverged module marks targets particularly responsible conservation/divergence.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedTargets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot target conservation — plotConservedDivergedTargets","text":"","code":"plotConservedDivergedTargets(   target_conservation,   N = 5,   label = \"auto\",   colors = NULL,   font_size = 14 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedTargets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot target conservation — plotConservedDivergedTargets","text":"target_conservation Data frame cross-species conservation measures jackknife version module. Columns required case focus interest conservation overall divergence: focus Character, focus interest terms cross-species conservation, \"overall\" focus interest conservation overall divergence. regulator Character, transcriptional regulator. type Character, module type (orig = original, jk = jackknifed summary = summary across jackknife module versions). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk', nameOfRegulator_orig case module type 'orig' nameOfRegulator_summary case module type 'summary'). gene_removed Character, name gene removed jackknifing (NA case module types 'orig' 'summary'). total_tree_length Numeric, total tree length per jackknife module version. within_species_diversity Numeric, within-species diversity per jackknife module version. fit Numeric, fitted total tree length within-species diversity value jackknife module version. lwr_fit Numeric, lower bound prediction interval fit. upr_fit Numeric, upper bound prediction interval fit. residual Numeric, residual jackknife module version linear model. calculated difference observed expected (fitted) total tree lengths. Columns required case focus interest species-specific divergence: focus Character, focus interest terms cross-species conservation, name species focus interest species-specific divergence. regulator Character, transcriptional regulator. type Character, module type (orig = original, jk = jackknifed summary = summary across jackknife module versions). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk', nameOfRegulator_orig case module type 'orig' nameOfRegulator_summary case module type 'summary'). gene_removed Character, name gene removed jackknifing (NA case module types 'orig' 'summary'). {{species}}_to_other_branch_length Numeric, branch length species interest others per jackknife module version. {{species}}_diversity Numeric, diversity within species interest per jackknife module version. fit Numeric, fitted species--branch length diversity value jackknife module version. lwr_fit Numeric, lower bound prediction interval fit. upr_fit Numeric, upper bound prediction interval fit. residual Numeric, residual jackknife module version linear model. calculated difference observed expected (fitted) species--branch lengths. N Integer, number top conserved/diverged target genes label. label Character, specifies data points labelled. \"auto\" (default), case conserved module top N least conserved jackknife module versions (conserved targets) labelled, case diverged module top N least diverged jackknife module versions (diverged targets) labelled. \"conserved\", top N conserved targets labelled, \"diverged\", top N diverged targets labelled, regardless degree conservation module whole. \"\", top N conserved top N diverged targets labelled. colors Character vector, colors visualize residuals. vector can contain number colors passed converted continuous scale scale_color_gradientn. font_size Numeric, font size (default: 14).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedTargets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot target conservation — plotConservedDivergedTargets","text":"ggplot object.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedTargets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot target conservation — plotConservedDivergedTargets","text":"determine whether module whole conserved, diverged overall diverged specific lineage, CroConet approach relies module trees reconstrcuted pairwise preservation scores clones statistics calculated based trees (total tree length, diversity, species--branch length). identify individual genes contribute conservation/divergence, statistics can used combination jackknifing. details approach generation target_conservation object please see findConservedDivergedTargets. function plots jackknife version module along regression line captures relationship total tree length within-species diversity (case focus interest conservation overall divergence) species--branch length diversity species (case focus interest species-specific divergence). residuals compared regression line characterize cross-species conservation different jackknife module versions corresponding absent target genes: jackknife version highest residual diverged, therefore corresponding target gene conserved, jackknife version lowest residual conserved, therefore corresponding target gene diverged. regression line drawn dark grey, 95% prediction interval line shown light grey area. jackknife module versions colored residuals: red yellow part color spectrum denotes positive residuals, yellow green part color spectrum denotes negative residuals (entire spectrum always spans residuals -max(abs(residual)) max(abs(residual)) across jackknife module versions module interest). case conserved module, lightest green data points typically interesting: correspond smallest negative residuals, .e. least conserved jackknife module versions conserved target genes removed. Analogously, case diverged module, lightest red data points typically interesting: correspond smallest positive residuals, .e. least diverged jackknife module versions diverged target genes removed. extreme scenario, least conserved jackknife module versions conserved module can reach positive residuals (red color) least diverged jackknife module versions diverged module can reach negative residuals (green color). However, rare assume divergence/conservation module contributed single target gene, rather combined signal targets together. default, case conserved module, top N least conserved jackknife module versions (conserved targets) labelled, case diverged module, top N least diverged jackknife module versions (diverged targets) labelled. Using parameter label, possible manually choose whether conserved targets (\"conserved\"), diverged targets (\"diverged\"), conserved diverged targets (\"\") labelled. gene name label always refers target gene removed given jackknife version (format: \"w/o {{geneName}}\"). addition jackknife module versions corresponding conserved/diverged target genes, function always labels original module version well target gene removed. original module always labelled \"original\".","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotConservedDivergedTargets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot target conservation — plotConservedDivergedTargets","text":"","code":"plotConservedDivergedTargets(POU5F1_target_conservation)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotDistMats.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the distance matrices of clones based on module connectivity patterns — plotDistMats","title":"Plot the distance matrices of clones based on module connectivity patterns — plotDistMats","text":"Plots pairwise distances clones based module connectivity patterns one modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotDistMats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the distance matrices of clones based on module connectivity patterns — plotDistMats","text":"","code":"plotDistMats(dist_dfs, colors = NULL, font_size = 14, ncol = NULL)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotDistMats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the distance matrices of clones based on module connectivity patterns — plotDistMats","text":"dist_dfs Data frame named list data frames containing distance measures per clone pair one modules. Required columns data frame: clone1, clone2 Character names clones compared. species1, species2 Character, names species clone1 clone2 belong , respectively. dist Numeric, distance measure ranging 0 1, calculated based preservation score given module clone1 clone2. colors Character vector, colors visualize distances. vector can contain number colors passed converted continuous scale scale_color_gradientn. font_size Numeric, font size (default: 14). ncol Integer, number columns subplots organized several modules input. NULL (default), dimensions grid follow default wrap_plots.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotDistMats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the distance matrices of clones based on module connectivity patterns — plotDistMats","text":"ggplot object case dist_dfs single data frame patchwork object case dist_dfs list data frames.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotDistMats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the distance matrices of clones based on module connectivity patterns — plotDistMats","text":"part CroCoNet approach, pairwise module preservation scores calculated clones, within across species (see calculatePresStats) gain information cross-species differences also within-species diversity modules. correlation-based preservation statistics quantify well module connectivity patterns preserved networks two clones. can converted distance measures using formula dist = (1 - pres)/2 (see convertPresToDist). function plots distance measures tile plot tile corresponds pair clones color tile corresponds distance based module connectivity patterns pair clones. distance clone always 0 thus meaningful, therefore tiles colored grey. aim plot distance matrices several modules together, input named list data frames, containing distances one modules. tile plots case combined together single patchwork object titles subplots matching names input list. subplots scale distances comparable across modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotDistMats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the distance matrices of clones based on module connectivity patterns — plotDistMats","text":"","code":"plotDistMats(dist)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengeneHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot module eigengenes as a heatmap — plotEigengeneHeatmap","title":"Plot module eigengenes as a heatmap — plotEigengeneHeatmap","text":"Plots eigengenes (types summarized module expression profiles) heatmap, cells ordered pseudotime cell type.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengeneHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot module eigengenes as a heatmap — plotEigengeneHeatmap","text":"","code":"plotEigengeneHeatmap(   eigengenes,   expr_column = \"eigengene\",   order_by = \"pseudotime\",   heatmap_colors = NULL,   annotation_colors = NULL,   z_transform = TRUE,   clip = ifelse(z_transform, 3, Inf),   font_size = 14 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengeneHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot module eigengenes as a heatmap — plotEigengeneHeatmap","text":"eigengenes Data frame eigengenes, required columns: cell Character, cell barcode. {{order_by}} Numeric character, column cells ordered plot. Typically contains inferred pseudotime, cell type labels. module Character, transcriptional regulator case eigengene calculated positively negatively regulated targets , direction regulation (format: nameOfRegulator(+) nameOfRegulator(-)). {{expr_column}} Numeric, summarized module expression profiles (typically eigengene, mean expression module, expression regulator). expr_column Character specifying column eigengenes heatmap colored. column expected contain summarized module expression profiles, typically eigengene (default: \"eigengene\"), mean expression module, expression regulator. order_by Character specifying column eigengenes cells ordered plot. column typically contains inferred pseudotime (default: \"pseudotime\"), cell type labels. heatmap_colors Character vector, heatmap colors variable specified expr_column. vector can contain number colors passed converted continuous scale scale_color_gradientn. annotation_colors Character vector, colors variable specified order_by. variable discrete, vector contain many colors unique values variable, variable continuous, vector can contain number colors passed converted continuous scale scale_color_gradientn. z_transform Logical specifying whether z-transformation performed per module plotting (default: TRUE). clip Numeric specifying degree clipping. module, expression level values standard deviations away mean clip treated NA. z_transform set TRUE, default 3 meaning expression levels clipped range mean \\(\\pm\\) 3\\(\\sigma\\) per module, otherwise default Inf. font_size Numeric, font size (default: 14).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengeneHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot module eigengenes as a heatmap — plotEigengeneHeatmap","text":"heatmap ggplot object showing expression profiles modules across cells.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengeneHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot module eigengenes as a heatmap — plotEigengeneHeatmap","text":"concept adapted WGCNA, eigengene summarizes expression profile entire module, calculated first principal component module expression data (see also calculateEigengenes). possible ways representing expression profile module include mean expression regulator expression. function takes data frame containing summarized module expression profiles input (normally output calculateEigengenes) plots heatmap, columns corresponding cells, rows corresponding modules colors corresponding scaled centered expression levels. column data frame containing chosen type summarized expression profile can specified parameter expr_column (default: \"eigengene\"). colors represent expression levels can controlled parameter heatmap_colors. cells can order pseudotime, cell type variable makes sense given context, name column containing desired cell property can specified parameter order_by (default: \"pseudotime\").  cell property visualized rug plot heatmap, colors rug can controlled parameter annotation_colors. eigengene (mean expression) calculated positively negatively regulated targets separately, appear separate rows heatmap. Expression levels clipped range mean \\(\\pm\\) 3\\(\\sigma\\) per gene, can changed via parameter clip. Clipping aids visualization preventing outlier data points squishing rest data small color range. clipping desired, please set clip Inf.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengeneHeatmap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot module eigengenes as a heatmap — plotEigengeneHeatmap","text":"Zhang, B., & Horvath, S. (2005). general framework weighted gene co-expression network analysis. Statistical Applications Genetics Molecular Biology, 4, 17-60. https://doi.org/10.2202/1544-6115.1128","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengeneHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot module eigengenes as a heatmap — plotEigengeneHeatmap","text":"","code":"plotEigengeneHeatmap(eigengenes)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesAlongPseudotime.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot module eigengenes along a pseudotime trajectory — plotEigengenesAlongPseudotime","title":"Plot module eigengenes along a pseudotime trajectory — plotEigengenesAlongPseudotime","text":"Plots eigengenes (types summarized module expression profiles) along pseudotime trajectory per species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesAlongPseudotime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot module eigengenes along a pseudotime trajectory — plotEigengenesAlongPseudotime","text":"","code":"plotEigengenesAlongPseudotime(   eigengenes,   expr_column = \"eigengene\",   pseudotime_column = \"pseudotime\",   cell_type_column = \"cell_type\",   species_colors = NULL,   cell_type_colors = NULL,   font_size = 14,   ncol = 1 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesAlongPseudotime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot module eigengenes along a pseudotime trajectory — plotEigengenesAlongPseudotime","text":"eigengenes Data frame eigengenes, required columns: cell Character, cell barcode. species Character, name species. {{pseudotime_column}} Numeric, inferred pseudotime. {{cell_type_column}} Character, cell type annotation (optional). module Character, transcriptional regulator case eigengene calculated positively negatively regulated targets , direction regulation (format: nameOfRegulator(+) nameOfRegulator(-)). {{expr_column}} Numeric, summarized module expression profiles (typically eigengene, mean expression module, expression regulator). expr_column Character specifying column eigengenes heatmap colored . column expected contain summarized module expression profiles, typically eigengene (default: \"eigengene\"), mean expression module, expression regulator. pseudotime_column Character, name pseudotime column eigengenes (default: \"pseudotime\"). cell_type_column Character, name cell type annotation column eigengenes (default: \"cell_type\", cell type annotation available user wants omit cell type rug plot, parameter set NULL). species_colors Character vector, colors per species. cell_type_colors Character vector, colors per cell type. font_size Numeric, font size (default: 14). ncol Integer, number columns modules (facets) organized (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesAlongPseudotime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot module eigengenes along a pseudotime trajectory — plotEigengenesAlongPseudotime","text":"curve plot ggplot object showing summarized expression profiles modules along pseudotime trajectory per species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesAlongPseudotime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot module eigengenes along a pseudotime trajectory — plotEigengenesAlongPseudotime","text":"concept adapted WGCNA, eigengene summarizes expression profile entire module, calculated first principal component module expression data (see also calculateEigengenes). possible ways representing expression profile module include mean expression regulator expression. function takes data frame containing summarized module expression profiles input (normally output calculateEigengenes). column containing chosen type summarized expression profile can specified parameter expr_column (default: \"eigengene\"). values chosen metric plotted smoothed curves colored species faceted module. smoothed expression profiles fitted per species module using loess formula \"expression ~ pseusotime\". 95% confidence intervals fitted lines calculated using predict shown lightly colored areas around lines. cell type column specified parameter cell_type_column, cell shown rug plot along pseudotime axis colored cell types. colors rug can controlled parameter cell_type_colors. eigengene (mean expression) calculated positively negatively regulated targets separately, appear separate facets plot.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesAlongPseudotime.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot module eigengenes along a pseudotime trajectory — plotEigengenesAlongPseudotime","text":"Zhang, B., & Horvath, S. (2005). general framework weighted gene co-expression network analysis. Statistical Applications Genetics Molecular Biology, 4, 17-60. https://doi.org/10.2202/1544-6115.1128","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesAlongPseudotime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot module eigengenes along a pseudotime trajectory — plotEigengenesAlongPseudotime","text":"","code":"plotEigengenesAlongPseudotime(eigengenes_per_species)  plotEigengenesAlongPseudotime(eigengenes_per_species, expr_column = \"mean_expr\")  plotEigengenesAlongPseudotime(eigengenes_per_species, cell_type_column = NULL)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesViolin.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot eigengene distributions per cell type and species — plotEigengenesViolin","title":"Plot eigengene distributions per cell type and species — plotEigengenesViolin","text":"Plots distribution eigengenes (types summarized module expression profiles) per cell type species, thus allows expression patterns visually compared across species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesViolin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot eigengene distributions per cell type and species — plotEigengenesViolin","text":"","code":"plotEigengenesViolin(   eigengenes,   expr_column = \"eigengene\",   cell_type_column = \"cell_type\",   species_colors = NULL,   font_size = 14 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesViolin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot eigengene distributions per cell type and species — plotEigengenesViolin","text":"eigengenes Data frame eigengenes, required columns: cell Character, cell barcode. species Character, name species. {{cell_type_column}} Character, cell type annotation. module Character, transcriptional regulator case eigengene calculated positively negatively regulated targets , direction regulation (format: nameOfRegulator(+) nameOfRegulator(-)). {{expr_column}} Numeric, summarized module expression profiles (typically eigengene, mean expression module, expression regulator). expr_column Character specifying column eigengenes heatmap colored . column expected contain summarized module expression profiles, typically eigengene (default: \"eigengene\"), mean expression module, expression regulator. cell_type_column Character, name cell type annotation column eigengenes. species_colors Character vector, colors per species. font_size Numeric, font size (default: 14).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesViolin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot eigengene distributions per cell type and species — plotEigengenesViolin","text":"violin plot ggplot object showing expression distributions modules per cell type species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesViolin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot eigengene distributions per cell type and species — plotEigengenesViolin","text":"concept adapted WGCNA, eigengene summarizes expression profile entire module, calculated first principal component module expression data (see also calculateEigengenes). possible ways representing expression profile module include mean expression regulator expression. function takes data frame containing summarized module expression profiles input (normally output calculateEigengenes). column containing chosen type summarized expression profile can specified parameter expr_column (default: \"eigengene\"). values chosen metric plotted violin plots per cell type species, faceted module. colors species can controlled parameter species_colors.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesViolin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot eigengene distributions per cell type and species — plotEigengenesViolin","text":"Zhang, B., & Horvath, S. (2005). general framework weighted gene co-expression network analysis. Statistical Applications Genetics Molecular Biology, 4, 17-60. https://doi.org/10.2202/1544-6115.1128","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotEigengenesViolin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot eigengene distributions per cell type and species — plotEigengenesViolin","text":"","code":"plotEigengenesViolin(eigengenes)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprAlongPseudotime.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expression profiles along a pseudotime trajectory — plotExprAlongPseudotime","title":"Plot expression profiles along a pseudotime trajectory — plotExprAlongPseudotime","text":"Plots expression profiles one genes along pseudotime trajectory per species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprAlongPseudotime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expression profiles along a pseudotime trajectory — plotExprAlongPseudotime","text":"","code":"plotExprAlongPseudotime(   genes,   sce,   pseudotime_column = \"pseudotime\",   cell_type_column = \"cell_type\",   species_colors = NULL,   cell_type_colors = NULL,   font_size = 14,   ncol = 1 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprAlongPseudotime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expression profiles along a pseudotime trajectory — plotExprAlongPseudotime","text":"genes Character vector, names genes expression profiles plotted. sce SingleCellExperiment object containing expression data (raw counts, logcounts metadata) network genes. Required metadata columns: species Character, name species. {{pseudotime_column}} Numeric, inferred pseudotime. {{cell_type_column}} Character, cell type annotation (optional). pseudotime_column Character, name pseudotime column metadata sce (default: \"pseudotime\"). cell_type_column Character, name cell type annotation column metadata sce (default: \"cell_type\", cell type annotation available user wants omit cell type rug plot, parameter set NULL). species_colors Character vector, colors per species. cell_type_colors Character vector, colors per cell type. font_size Numeric, font size (default: 14). ncol Integer, number columns genes (facets) organized (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprAlongPseudotime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expression profiles along a pseudotime trajectory — plotExprAlongPseudotime","text":"curve plot ggplot object showing expression profiles genes along pseudotime trajectory per species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprAlongPseudotime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot expression profiles along a pseudotime trajectory — plotExprAlongPseudotime","text":"function plots expression profiles smoothed curves colored species faceted gene. species, pseudotime cell type information taken metadata slot input sce object, expression data taken logcounts assay input sce object. smoothed expression profiles fitted per species gene using loess formula \"expression ~ pseusotime\". 95% confidence intervals fitted lines calculated using predict shown lightly colored areas around lines. cell type metadata column specified parameter cell_type_column, cell shown rug plot along pseudotime axis colored cell types. colors rug can controlled parameter cell_type_colors.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprAlongPseudotime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expression profiles along a pseudotime trajectory — plotExprAlongPseudotime","text":"","code":"plotExprAlongPseudotime(regulators, sce)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expression profiles as a heatmap — plotExprHeatmap","title":"Plot expression profiles as a heatmap — plotExprHeatmap","text":"Plots expression profiles one genes heatmap, cells ordered pseudotime cell type.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expression profiles as a heatmap — plotExprHeatmap","text":"","code":"plotExprHeatmap(   genes,   sce,   order_by = \"pseudotime\",   heatmap_colors = NULL,   annotation_colors = NULL,   z_transform = TRUE,   clip = ifelse(z_transform, 3, Inf),   font_size = 14 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expression profiles as a heatmap — plotExprHeatmap","text":"genes Character vector, names genes expression profiles plotted. sce SingleCellExperiment object containing expression data (logcounts metadata) network genes. Required metadata column: {{order_by}} Numeric character, column cells ordered plot. Typically contains inferred pseudotime, cell type labels. order_by Character specifying column metadata sce cells ordered plot. column typically contains inferred pseudotime (default: \"pseudotime\"), cell type labels. heatmap_colors Character vector, heatmap colors expression levels. vector can contain number colors passed converted continuous scale scale_color_gradientn. annotation_colors Character vector, colors variable specified order_by. variable discrete, vector contain many colors unique values variable, variable continuous, vector can contain number colors passed converted continuous scale scale_color_gradientn z_transform Logical specifying whether z-transformation performed per gene plotting (default: TRUE). clip Numeric specifying degree clipping. gene, expression level values standard deviations away mean clip treated NA. z_transform set TRUE, default 3 meaning expression levels clipped range mean \\(\\pm\\) 3\\(\\sigma\\) per gene, otherwise default Inf. font_size Numeric, font size (default: 14).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expression profiles as a heatmap — plotExprHeatmap","text":"heatmap ggplot object showing expression profiles input genes across cells.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot expression profiles as a heatmap — plotExprHeatmap","text":"function creates heatmap, columns corresponding cells, rows corresponding genes colors corresponding scaled centered expression levels. expression data taken logcounts assay input sce object. colors represent expression levels can controlled parameter heatmap_colors. cells can order pseudotime, cell type variable makes sense given context. name metadata column input sce object containing desired cell property can specified parameter order_by (default: \"pseudotime\"). cell property visualized rug plot heatmap, colors rug can controlled parameter annotation_colors. Expression levels clipped range mean \\(\\pm\\) 3\\(\\sigma\\) per gene, can changed via parameter clip. Clipping aids visualization preventing outlier data points squishing rest data small color range. clipping desired, please set clip Inf.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expression profiles as a heatmap — plotExprHeatmap","text":"","code":"plotExprHeatmap(c(\"POU5F1\",\"DNMT3B\",\"TERF1\",\"TDGF1\",\"L1TD1\",\"VIM\",\"MAP1B\",\"MARCKS\",\"PTN\",\"CDH2\"),                 sce)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprViolin.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expression distributions per cell type and species — plotExprViolin","title":"Plot expression distributions per cell type and species — plotExprViolin","text":"Plots expression distributions one genes per cell type species, thus allows expression patterns visually compared across species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprViolin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expression distributions per cell type and species — plotExprViolin","text":"","code":"plotExprViolin(   genes,   sce,   cell_type_column = \"cell_type\",   species_colors = NULL,   font_size = 14 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprViolin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expression distributions per cell type and species — plotExprViolin","text":"genes Character vector, names genes expression profiles plotted. sce SingleCellExperiment object containing expression data (raw counts, logcounts metadata) network genes. Required metadata columns: species Character, name species. {{cell_type_column}} Character, cell type annotation. cell_type_column Character, name cell type annotation column metadata sce. species_colors Character vector, colors per species. font_size Numeric, font size (default: 14).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprViolin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expression distributions per cell type and species — plotExprViolin","text":"violin plot ggplot object showing expression distributions input genes per cell type species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprViolin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot expression distributions per cell type and species — plotExprViolin","text":"function produces violin plot expression levels per cell type species, faceted gene. colors species can controlled parameter species_colors. species cell type information taken metadata slot input sce object, expression data taken logcounts assay input sce object.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotExprViolin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expression distributions per cell type and species — plotExprViolin","text":"","code":"plotExprViolin(c(\"POU5F1\",\"DNMT3B\",\"TERF1\",\"TDGF1\",\"L1TD1\",\"VIM\",\"MAP1B\",\"MARCKS\",\"PTN\",\"CDH2\"),                          sce)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotModuleSizeDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the distribution of module sizes — plotModuleSizeDistribution","title":"Plot the distribution of module sizes — plotModuleSizeDistribution","text":"Plots distribution module sizes (.e. number target genes assigned regulator) histogram.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotModuleSizeDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the distribution of module sizes — plotModuleSizeDistribution","text":"","code":"plotModuleSizeDistribution(modules, font_size = 14)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotModuleSizeDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the distribution of module sizes — plotModuleSizeDistribution","text":"modules Data frame pruned modules, required columns: regulator Character, transcriptional regulator. module_size Module size, numer target genes assigned regulator. font_size Numeric, font size (default: 14).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotModuleSizeDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the distribution of module sizes — plotModuleSizeDistribution","text":"histogram ggplot object showing distribution module sizes.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotModuleSizeDistribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the distribution of module sizes — plotModuleSizeDistribution","text":"","code":"plotModuleSizeDistribution(pruned_modules)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotNetworks.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the networks of modules — plotNetworks","title":"Plot the networks of modules — plotNetworks","text":"CroCoNet approach, networks reconstructed per clone combined single phylogeny-aware consensus network basis module assignment. function selects intramodular edges input module(s) consensus network, orders consensus edge weight keeps top N edges per module plotting. means module member genes appear plot involved top N connections, regulator might also omitted particularly well-connected. edges kept plotted using ggraph per module. default layout \"kk\", reasonable options include \"stress\", \"circle\", \"nicely\", \"dh\", \"graphopt\", \"mds\", \"fr\", \"gem\" \"drl\" (see also ggraph, layout_tbl_graph_stress layout_tbl_graph_igraph). width edges represents consensus edge weights, range widths can set using edge_width. color_by set \"edge_divergence\" (default), edge edge divergence score calculated based edge weights networks individual clones. edge weights compared across species using ANOVA, F-statistic (.e. -species variability / within-species variability) regarded measure edge divergence used color edges plot. calculate information, network_list clone2species provided. color_by set \"direction\", edges colored based direction interaction (positively correlated/coexpressed negatively correlated/anti-coexpressed) 2 genes edge. information taken direction edge attribute consensus_network. aim plot networks several modules together, input module_names vector module names. ggraph plots case combined together single patchwork object titles subplots matching elements module_names. subplots scale edge weights divergence scores (color_by = \"edge_divergence\") comparable across modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotNetworks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the networks of modules — plotNetworks","text":"","code":"plotNetworks(   module_names,   pruned_modules,   consensus_network,   network_list = NULL,   clone2species = NULL,   N = 300L,   color_by = \"edge_divergence\",   n_cores = 1L,   layout = \"kk\",   seed = 0,   colors = NULL,   font_size = 14,   edge_width = c(0.2, 1.2),   ncol = NULL )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotNetworks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the networks of modules — plotNetworks","text":"module_names Character character vector, name(s) module(s) interest. pruned_modules Data frame pruned modules, required columns: regulator Character, transcriptional regulator. target Character, target gene transcriptional regulator (member regulator's pruned module). consensus_network igraph object, consensus network across species clones. network_list named list igraph objects containing networks clones (needed color_by set \"edge_divergence\"). clone2species data frame specifies species clone belongs (needed color_by set \"edge_divergence\"), required columns: clone Character, name clone. species Character, name species. N Integer, number edges plot (default: 300). color_by Character, one \"edge_divergence\" \"direction\", specifies whether edges colored degree edge divergence across species (default) direction interaction 2 genes form edge, .e. positively negatively correlated. n_cores Integer, number cores (default: 1). layout Character, graph layout (default: \"kk\", reasonable options \"auto\", \"stress\", \"star\", \"circle\", \"nicely\", \"dh\", \"gem\", \"graphopt\", \"grid\", \"mds\", \"fr\", \"drl\", \"eigen\", \"fabric\", \"linear\" \"unrooted\"). See also ggraph, layout_tbl_graph_stress layout_tbl_graph_igraph. seed Integer, seed setting graph layout (default: 0, relevant certain layouts \"gem\", \"nicely\", \"dh\", \"graphopt\", \"fr\" \"drl\"). colors Character vector, colors visualize edge directions edge divergences. color_by set \"edge_divergence\", vector can contain number colors passed converted continuous scale scale_color_gradientn. color_by set \"direction\", vector contain 2 colors positively negatively correlated gene pairs. font_size Numeric, font size (default: 14). edge_width Numeric vector length 2, range edge widths plotting graph edges (default: c(0.2, 1.2)). ncol Integer, number columns subplots organized several modules input. NULL (default), dimensions grid follow default wrap_plots.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotNetworks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the networks of modules — plotNetworks","text":"ggraph object case module_names single module name patchwork object case module_names vector module names.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotNetworks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the networks of modules — plotNetworks","text":"Plots top N strongest connections chosen module(s) based consensus network. edge width indicates consensus edge weights, edge color indicates either degree edge divergence across species direction interaction 2 genes form edge (positively/negatively correlated).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotNetworks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the networks of modules — plotNetworks","text":"","code":"plotNetworks(\"POU5F1\", pruned_modules, consensus_network, network_list, clone2species)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStatDistributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the distributions of preservation statistics — plotPresStatDistributions","title":"Plot the distributions of preservation statistics — plotPresStatDistributions","text":"Plots distribution(s) chosen preservation statistic(s) actual random modules within-species cross-species clone pairs. statistic good measure module preservation, preservation scores expected 1) higher actual modules random modules 2) higher within species across species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStatDistributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the distributions of preservation statistics — plotPresStatDistributions","text":"","code":"plotPresStatDistributions(   pres_stats,   random_pres_stats,   stats,   colors = NULL,   font_size = 14 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStatDistributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the distributions of preservation statistics — plotPresStatDistributions","text":"pres_stats Data frame preservation statistics actual (pruned) modules. Required columns: regulator Character, transcriptional regulator. clone1, clone2 Character, names clones compared. species1, species2 Character, names species clone1 clone2 belongs , respectively. {{nameOfStat}} Numeric, one columns containing preservation statistic(s) interest per module clone pair. random_pres_stats Data frame preservation statistics random modules. Required columns: regulator Character, transcriptional regulator. clone1, clone2 names clones compared. species1, species2 names species clone1 clone2 belongs , respectively. {{nameOfStat}} Numeric, one columns containing preservation statistic(s) interest per module clone pair. stats Character character vector, name(s) column(s) containing statistic(s) interest. colors Character vector length 2, colors actual random modules. font_size Numeric, font size (default: 14).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStatDistributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the distributions of preservation statistics — plotPresStatDistributions","text":"violin plot ggplot object showing distributions chosen preservation statistics within species across species actual random modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStatDistributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the distributions of preservation statistics — plotPresStatDistributions","text":"part CroCoNet approach, pairwise module preservation scores calculated clones, within across species (see calculatePresStats) gain information cross-species differences also within-species diversity modules. correlation-based preservation statistics quantify well module topology preserved networks two clones. statistics calculated just actual, biologically meaningful modules, also random modules matching sizes. actual modules expected preserved random modules, modules, especially actual ones, expected preserved within species across species. function plots distributions within-species cross-species scores actual random modules thus allows expectations visually checked. several different statistics input, shown rows faceted plot. comes choosing best statistic, recommended take one follows expected trends .","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStatDistributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the distributions of preservation statistics — plotPresStatDistributions","text":"","code":"plotPresStatDistributions(pres_stats, random_pres_stats, \"cor_kIM\")"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cross-species VS within-species preservation statistics per species pair — plotPresStats","title":"Plot cross-species VS within-species preservation statistics per species pair — plotPresStats","text":"Plots cross-species VS within-species preservation scores possible species pairs. statistic good measure module preservation, within-species scores expected higher cross-species scores species pairs, difference expected increase increasing phylogenetic distance two species compared.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cross-species VS within-species preservation statistics per species pair — plotPresStats","text":"","code":"plotPresStats(   pres_stats,   random_pres_stats = NULL,   stats,   colors = NULL,   font_size = 14,   point_size = 0.1,   point_alpha = 0.7 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cross-species VS within-species preservation statistics per species pair — plotPresStats","text":"pres_stats Data frame preservation statistics actual (pruned) modules. Required columns: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator (needed data points desired colored module size). clone1, clone2 Character, names clones compared. species1, species2 Character, names species clone1 clone2 belongs , respectively. {{nameOfStat}} Numeric, one columns containing preservation statistic interest per module clone pair. random_pres_stats Data frame preservation statistics random modules (optional). provided, following columns required: regulator Character, transcriptional regulator. clone1, clone2 names clones compared. species1, species2 names species clone1 clone2 belongs , respectively. {{nameOfStat}} Numeric, one columns containing preservation statistic(s) interest per module clone pair. stats Character character vector, name(s) column(s) containing statistics interest. colors Character vector, either colors visualize module sizes (pres_stats provided), colors visualize actual random modules (pres_stats random_pres_stats provided). first case, vector can contain number colors passed converted continuous scale scale_color_gradientn. second case, vector contain 2 colors actual random modules. font_size Numeric, font size (default: 14). point_size Numeric, size points (default: 0.3). point_alpha Numeric, opacity points (default: 0.7).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot cross-species VS within-species preservation statistics per species pair — plotPresStats","text":"scatterplot ggplot object showing cross-species VS within-species preservation scores per species pair pruned modules provided, random modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot cross-species VS within-species preservation statistics per species pair — plotPresStats","text":"part CroCoNet approach, pairwise module preservation scores calculated clones, within across species (see calculatePresStats) gain information cross-species differences also within-species diversity modules. correlation-based preservation statistics quantify well module topology preserved networks two clones. possible speciesA-speciesB pair data, function first subsets within-species scores speciesA, within-species scores speciesB cross-species scores speciesA speciesB, calculates mean within-species scores well mean cross-species scores per module. example, 2 species, human gorilla, 3 human clones (h1, h2 h3), 2 gorilla clones (g1 g2), single module 3 preservation scores within human clones (\\(p_{h1-h2}\\), \\(p_{h1-h3}\\) \\(p_{h2-h3}\\)), 1 preservation score within gorilla clones (\\(p_{g1-g2}\\)) 6 preservation scores across 2 species (\\(p_{h1-g1}\\), \\(p_{h1-g2}\\), \\(p_{h2-g1}\\), \\(p_{h2-g2}\\), \\(p_{h3-g1}\\) \\(p_{h3-g2}\\)). module human-gorilla species pair, summarized within-species score mean 4 within-species scores (\\(mean(p_{h1-h2}, p_{h1-h3}, p_{h2-h3}, p_{g1-g2})\\)) cross-species score mean 6 cross-species scores (\\(mean(p_{h1-g1}, p_{h1-g2}, p_{h2-g1}, p_{h2-g2}, p_{h3-g1}, p_{h3-g2})\\)). calculating summarized scores modules species pairs, cross-species scores plotted within-species scores faceted species pair. within-species scores expected higher cross-species scores, thus data points expected fall diagonal facets. However, phylogenetically distant two species , bigger deviation expect diagonal. random_pres_stats provided, actual random modules plotted together, shown 2 different colors. actual modules expected better preserved random modules (especially within species), therefore 2 sets modules expected cluster separately plot, actual modules located towards higher (within-species) scores. random_pres_stats provided, actual modules pres_stats shown plot. case, column \"module_size\" present pres_stats, data points colored module size. several different statistics input, shown rows faceted plot. comes choosing best statistic, recommended take one follows expected trends terms within-species VS cross-species scores, phylogeny, actual VS random modules.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotPresStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cross-species VS within-species preservation statistics per species pair — plotPresStats","text":"","code":"plotPresStats(pres_stats, stats = \"cor_kIM\")"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengeneHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summarized eigengenes as a heatmap — plotSumEigengeneHeatmap","title":"Plot summarized eigengenes as a heatmap — plotSumEigengeneHeatmap","text":"Plots mean eigengene (mean types summarized module expression profile) per cell type species heatmap.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengeneHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summarized eigengenes as a heatmap — plotSumEigengeneHeatmap","text":"","code":"plotSumEigengeneHeatmap(   eigengenes,   expr_column = \"eigengene\",   cell_type_column = \"cell_type\",   heatmap_colors = NULL,   species_colors = NULL,   cell_type_colors = NULL,   clip = 3,   font_size = 14,   label_size = font_size/3 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengeneHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summarized eigengenes as a heatmap — plotSumEigengeneHeatmap","text":"eigengenes Data frame eigengenes, required columns: cell Character, cell barcode. species Character, name species. {{cell_type_column}} Character, cell type annotation. module Character, transcriptional regulator case eigengene calculated positively negatively regulated targets , direction regulation (format: nameOfRegulator(+) nameOfRegulator(-)). {{expr_column}} Numeric, summarized module expression profiles (typically eigengene, mean expression module, expression regulator). expr_column Character specifying column eigengenes heatmap colored. column expected contain summarized module expression profiles, typically eigengene (default: \"eigengene\"), mean expression module, expression regulator. cell_type_column Character, name cell type annotation column eigengenes (default: \"cell_type\"). heatmap_colors Character vector, heatmap colors summarized expression levels. vector can contain number colors passed converted continuous scale scale_color_gradientn. species_colors Character vector, colors per species. cell_type_colors Character vector, colors per cell type. clip Numeric specifying degree clipping. gene, expression level values standard deviations away mean clip treated NA. default 3 meaning expression levels clipped range mean \\(\\pm\\) 3\\(\\sigma\\) per gene. font_size Numeric, font size (default: 14). label_size Numeric, font size cell type labels (default: font_size / 5).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengeneHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summarized eigengenes as a heatmap — plotSumEigengeneHeatmap","text":"heatmap ggplot object showing summarized expression levels modules per cell type species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengeneHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot summarized eigengenes as a heatmap — plotSumEigengeneHeatmap","text":"concept adapted WGCNA, eigengene summarizes expression profile entire module, calculated first principal component module expression data (see also calculateEigengenes). possible ways representing expression profile module include mean expression regulator expression. function takes data frame containing summarized module expression profiles input (normally output calculateEigengenes) plots heatmap, columns corresponding cell types, rows corresponding modules species, colors corresponding mean module expression across cells given cell type species. column data frame containing chosen type summarized expression profile can specified parameter expr_column (default: \"eigengene\"). colors represent expression levels can controlled parameter heatmap_colors. eigengene (mean expression) calculated positively negatively regulated targets separately, appear separate rows heatmap. cell types species visualized annotation graphics heatmap using cell_type_colors right hand side heatmap using species_colors, respectively. Expression levels clipped range mean \\(\\pm\\) 3\\(\\sigma\\) per module, can changed via parameter clip. Clipping aids visualization preventing outlier data points squishing rest data small color range. clipping desired, please set clip Inf.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengeneHeatmap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot summarized eigengenes as a heatmap — plotSumEigengeneHeatmap","text":"Zhang, B., & Horvath, S. (2005). general framework weighted gene co-expression network analysis. Statistical Applications Genetics Molecular Biology, 4, 17-60. https://doi.org/10.2202/1544-6115.1128","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengeneHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot summarized eigengenes as a heatmap — plotSumEigengeneHeatmap","text":"","code":"plotSumEigengeneHeatmap(eigengenes)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengenesLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summarized eigengenes as a line plot — plotSumEigengenesLine","title":"Plot summarized eigengenes as a line plot — plotSumEigengenesLine","text":"Plots mean eigengene (mean types summarized module expression profile) per cell type species line plot","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengenesLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summarized eigengenes as a line plot — plotSumEigengenesLine","text":"","code":"plotSumEigengenesLine(   eigengenes,   expr_column = \"eigengene\",   cell_type_column = \"cell_type\",   species_colors = NULL,   cell_type_colors = NULL,   font_size = 14 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengenesLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summarized eigengenes as a line plot — plotSumEigengenesLine","text":"eigengenes Data frame eigengenes, required columns: cell Character, cell barcode. species Character, name species. {{cell_type_column}} Character, cell type annotation. module Character, transcriptional regulator case eigengene calculated positively negatively regulated targets , direction regulation (format: nameOfRegulator(+) nameOfRegulator(-)). {{expr_column}} Numeric, summarized module expression profiles (typically eigengene, mean expression module, expression regulator). expr_column Character specifying column eigengenes heatmap colored. column expected contain summarized module expression profiles, typically eigengene (default: \"eigengene\"), mean expression module, expression regulator. cell_type_column Character, name cell type annotation column eigengenes (default: \"cell_type\"). species_colors Character vector, colors per species. cell_type_colors Character vector, colors per cell type. font_size Numeric, font size (default: 14).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengenesLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summarized eigengenes as a line plot — plotSumEigengenesLine","text":"line plot ggplot object showing summarized expression levels modules per cell type species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengenesLine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot summarized eigengenes as a line plot — plotSumEigengenesLine","text":"concept adapted WGCNA, eigengene summarizes expression profile entire module, calculated first principal component module expression data (see also calculateEigengenes). possible ways representing expression profile module include mean expression regulator expression. function takes data frame containing summarized module expression profiles input (normally output calculateEigengenes) summarizes taking mean 95 summarized module expression levels visualized scatter plot across cell types, colored species faceted module. aid visual comparison across species, data points species connected lines across cell types (meant represent continuity). cell types depicted plot using cell_type_colors.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengenesLine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot summarized eigengenes as a line plot — plotSumEigengenesLine","text":"Zhang, B., & Horvath, S. (2005). general framework weighted gene co-expression network analysis. Statistical Applications Genetics Molecular Biology, 4, 17-60. https://doi.org/10.2202/1544-6115.1128","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumEigengenesLine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot summarized eigengenes as a line plot — plotSumEigengenesLine","text":"","code":"plotSumEigengenesLine(eigengenes)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summarized expression profiles as a heatmap — plotSumExprHeatmap","title":"Plot summarized expression profiles as a heatmap — plotSumExprHeatmap","text":"Plots summarized expression one genes per cell type species heatmap.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summarized expression profiles as a heatmap — plotSumExprHeatmap","text":"","code":"plotSumExprHeatmap(   genes,   sce,   summary_metric = \"pct\",   cell_type_column = \"cell_type\",   heatmap_colors = NULL,   species_colors = NULL,   cell_type_colors = NULL,   clip = 3,   font_size = 14,   label_size = font_size/3 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summarized expression profiles as a heatmap — plotSumExprHeatmap","text":"genes Character vector, names genes expression profiles plotted. sce SingleCellExperiment object containing expression data (logcounts metadata) network genes. Required metadata column: species Character, name species. {{cell_type_column}} Character, cell type annotation. summary_metric Character, metric summarizing expression gene per cell type species. One \"pct\" (percent cells expressing gene, default) \"mean\" (mean expression logcounts). cell_type_column Character, name cell type annotation column metadata sce (default: \"cell_type\"). heatmap_colors Character vector, heatmap colors summarized expression levels. vector can contain number colors passed converted continuous scale scale_color_gradientn. species_colors Character vector, colors per species. cell_type_colors Character vector, colors per cell type. clip Numeric specifying degree clipping. gene, expression level values standard deviations away mean clip treated NA. default 3 meaning expression levels clipped range mean \\(\\pm\\) 3\\(\\sigma\\) per gene. font_size Numeric, font size (default: 14). label_size Numeric, font size cell type labels (default: font_size / 5).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summarized expression profiles as a heatmap — plotSumExprHeatmap","text":"heatmap ggplot object showing summarized expression levels input genes per cell type species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot summarized expression profiles as a heatmap — plotSumExprHeatmap","text":"function creates heatmap, columns corresponding cell types, rows corresponding genes species, colors corresponding either percent cells expressing given gene (summary_metric = \"pct\", default) mean expression logcounts (summary_metric = \"mean\"). cell types species visualized annotation graphics heatmap using cell_type_colors right hand side heatmap using species_colors, respectively. Expression levels clipped range mean \\(\\pm\\) 3\\(\\sigma\\) per gene, can changed via parameter clip. Clipping aids visualization preventing outlier data points squishing rest data small color range. clipping desired, please set clip Inf.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot summarized expression profiles as a heatmap — plotSumExprHeatmap","text":"","code":"plotSumExprHeatmap(c(\"POU5F1\",\"DNMT3B\",\"TERF1\",\"TDGF1\",\"L1TD1\",\"VIM\",\"MAP1B\",\"MARCKS\",\"PTN\",\"CDH2\"),                              sce)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summarized expression profiles as a line plot — plotSumExprLine","title":"Plot summarized expression profiles as a line plot — plotSumExprLine","text":"Plots summarized expression one genes per cell type species line plot, thus allows expression patterns visually compared across species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summarized expression profiles as a line plot — plotSumExprLine","text":"","code":"plotSumExprLine(   genes,   sce,   summary_metric = \"pct\",   cell_type_column = \"cell_type\",   species_colors = NULL,   cell_type_colors = NULL,   font_size = 14 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summarized expression profiles as a line plot — plotSumExprLine","text":"genes Character vector, names genes expression profiles plotted. sce SingleCellExperiment object containing expression data (raw counts, logcounts metadata) network genes. Required metadata columns: species Character, name species. {{cell_type_column}} Character, cell type annotation. summary_metric Character, metric summarizing expression gene per cell type species. One \"pct\" (percent cells expressing gene, default) \"mean\" (mean expression logcounts). cell_type_column Character, name cell type annotation column metadata sce. species_colors Character vector, colors per species. cell_type_colors Character vector, colors per cell type. font_size Numeric, font size (default: 14).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summarized expression profiles as a line plot — plotSumExprLine","text":"line plot ggplot object showing summarized expression levels genes per cell type species.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprLine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot summarized expression profiles as a line plot — plotSumExprLine","text":"expression input gene summarized either percent cells expressing given gene (summary_metric = \"pct\", default) mean expression 95 summarized expression levels visualized scatter plot across cell types, colored species faceted gene. aid visual comparison across species, data points species connected lines across cell types (meant represent continuity). cell types depicted plot using cell_type_colors.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotSumExprLine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot summarized expression profiles as a line plot — plotSumExprLine","text":"","code":"plotSumExprLine(c(\"POU5F1\",\"DNMT3B\",\"TERF1\",\"TDGF1\",\"L1TD1\",\"VIM\",\"MAP1B\",\"MARCKS\",\"PTN\",\"CDH2\"),                           sce)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStatDistributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the distributions of tree-based statistics — plotTreeStatDistributions","title":"Plot the distributions of tree-based statistics — plotTreeStatDistributions","text":"Plots distribution(s) chosen tree-based statistic(s) actual random modules. module trees represent well differences module topology within across species, tree-based statistics expected lower actual modules random modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStatDistributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the distributions of tree-based statistics — plotTreeStatDistributions","text":"","code":"plotTreeStatDistributions(   tree_stats,   random_tree_stats,   stats,   colors = NULL,   font_size = 14 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStatDistributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the distributions of tree-based statistics — plotTreeStatDistributions","text":"tree_stats Data frame tree statistics actual (pruned) modules. Required columns: regulator Character, transcriptional regulator. {{nameOfStat}} Numeric, one columns containing tree statistic interest per module clone pair. random_tree_stats Data frame tree statistics random modules. Required columns: regulator Character, transcriptional regulator. {{nameOfStat}} Numeric, one columns containing tree statistics interest per module clone pair. stats Character character vector, name(s) column(s) containing statistics interest. colors Character vector length 2, colors actual random modules. font_size Numeric, font size (default: 14).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStatDistributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the distributions of tree-based statistics — plotTreeStatDistributions","text":"violin plot ggplot object showing distributions chosen tree-based statistics actual random modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStatDistributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the distributions of tree-based statistics — plotTreeStatDistributions","text":"part CroCoNet approach, pairwise module preservation scores calculated clones, within across species (see calculatePresStats) neighbor-joining trees reconstructed based preservation scores per module (see convertPresToDist reconstructTrees). tips resulting tree represent clones branch lengths represent dissimilarity module topology networks 2 clones. Various statistics can defined based trees total tree length, total within-species diversity, diversity species species--branch length (see calculateTreeStats. tree-based statistics can used identify conserved/diverged modules (see findConservedDivergedModules) pinpoint individual target genes within modules contribute conservation/divergence (see findConservedDivergedTargets). Compared random modules, actual modules expected better preserved clones thus branch lengths module trees also expected shorter (especially clones species). result, tree-based statistics (especially ones measuring diversity) expected lower actual modules random modules. function plots distributions chosen tree-based statistics actual random modules thus allows expectations visually checked. several different statistics input, shown rows faceted plot.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStatDistributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the distributions of tree-based statistics — plotTreeStatDistributions","text":"","code":"plotTreeStatDistributions(tree_stats,                                     random_tree_stats,                                     c(\"within_species_diversity\", \"total_tree_length\"))"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot tree-based statistics against each other — plotTreeStats","title":"Plot tree-based statistics against each other — plotTreeStats","text":"Plots chosen tree-based statistic (e.g. total tree length) another (e.g. within-species diversity) pruned modules provided, random modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot tree-based statistics against each other — plotTreeStats","text":"","code":"plotTreeStats(   tree_stats,   random_tree_stats = NULL,   stats = c(\"within_species_diversity\", \"total_tree_length\"),   colors = NULL,   font_size = 14,   point_size = 0.05,   point_alpha = 1 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot tree-based statistics against each other — plotTreeStats","text":"tree_stats Data frame tree statistics actual (pruned) modules. Required columns: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator (needed data points desired colored module size). {{nameOfStat}} Numeric, 2 columns containing tree statistics plotted . random_tree_stats Data frame tree statistics random modules (optional). provided, following columns required: regulator Character, transcriptional regulator. {{nameOfStat}} Numeric, 2 columns containing tree statistics plotted . stats Character vector length 2, names columns containing 2 statistics plotted (default: c(\"within_species_diversity\", \"total_tree_length\"), another useful option plot species--branch length diversity chosen species). 1st element vector plotted x-axis 2nd element vector plotted y-axis. colors Character vector, either colors visualize module sizes (tree_stats provided), colors visualize actual random modules (tree_stats random_tree_stats provided). first case, vector can contain number colors passed converted continuous scale scale_color_gradientn. second case, vector contain 2 colors actual random modules. font_size Numeric, font size (default: 14). point_size Numeric, size points (default: 0.3). point_alpha Numeric, opacity points (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot tree-based statistics against each other — plotTreeStats","text":"scatterplot ggplot object showing chosen tree-based statistic (e.g. total tree length) another (e.g. within-species diversity) pruned modules provided, random modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot tree-based statistics against each other — plotTreeStats","text":"part CroCoNet approach, pairwise module preservation scores calculated clones, within across species (see calculatePresStats) neighbor-joining trees reconstructed based preservation scores per module (see convertPresToDist reconstructTrees). tips resulting tree represent clones branch lengths represent dissimilarity module topology networks 2 clones.  Various statistics can defined based trees total tree length, total within-species diversity, diversity species species--branch length (see calculateTreeStats). tree-based statistics can used pinpoint conserved diverged modules. First, linear regression model fit total tree length within-species diversity (case focus interest conservation overall divergence) species--branch length diversity species (case focus interest species-specific divergence), outlier data points identified follow general linear trend (see fitTreeStatsLm findConservedDivergedModules). function visualizes relationship 2 tree-based statistics. can informative check pairs statistics used measure cross-species conservation - total-tree length VS within-species diversity (default) species--branch length VS diversity species - fitting linear regression model . random_tree_stats provided, actual random modules plotted together, shown 2 different colors. tree-based statistics (especially ones measuring diversity) expected lower actual modules random modules, therefore 2 sets modules expected cluster separately plot actual modules located towards lower values. random_tree_stats provided, actual modules tree_stats shown plot. case, column \"module_size\" present tree_stats, data points colored module size.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTreeStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot tree-based statistics against each other — plotTreeStats","text":"","code":"plotTreeStats(tree_stats,                         random_tree_stats,                         c(\"within_species_diversity\", \"total_tree_length\"))"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTrees.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the tree representations of modules — plotTrees","title":"Plot the tree representations of modules — plotTrees","text":"Plots tree representations one modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the tree representations of modules — plotTrees","text":"","code":"plotTrees(   trees,   show_labels = TRUE,   species_colors = NULL,   font_size = 14,   tip_size = 1,   branch_width = 0.4,   ncol = NULL )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTrees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the tree representations of modules — plotTrees","text":"trees phylo object named list phylo objects, tree representations(s) one modules. show_labels Logical, TRUE (default), tip labelled corresponding clone, FALSE, tips labelled. species_colors Character vector, tip colors per species. font_size Numeric, font size (default: 14). tip_size Numeric, size labels/circles tips (default: 1). branch_width Numeric, widths tree branches (default: 0.4). ncol Integer, number columns subplots organized several modules input. NULL (default), dimensions grid follow default wrap_plots.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTrees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the tree representations of modules — plotTrees","text":"ggtree object case trees single phylo object patchwork object case trees list phylo objects.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTrees.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the tree representations of modules — plotTrees","text":"module trees reconstructed based pairwise preservation scores clones, within across species (see reconstructTrees). tips resulting tree represent clones branch lengths represent dissimilarity module connectivity patterns networks 2 clones. Therefore, 2 tips fall close within module tree, means module topology similar corresponding clones. trees carry information cross-species conservation module. module diverged 2 species (.e. poorly preserved species well-preserved within species), expect tips tree separate according species 2 species connected long branch. contrast, module conserved 2 species (.e. similarly preserved within across species), expect tips different species well-mixed within tree systematic separation. module trees plotted using ggtree unrooted trees 'daylight' layout tips colored based species identity. show_labels set TRUE, tips addition labelled corresponding clone. aim plot trees several modules together, input named list module trees. ggtree plots case combined together single patchwork object titles subplots matching names input list. subplots scale branch lengths comparable across modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/plotTrees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the tree representations of modules — plotTrees","text":"","code":"plotTrees(trees)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pres_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Preservation statistics of the pruned modules — pres_stats","title":"Preservation statistics of the pruned modules — pres_stats","text":"Correlation intramodular connectivities (cor_kIM) per clone pair module. preservation statistic cor.kIM quantifies well connectivity patterns preserved networks two clones, mathematically correlation intramodular connectivities per module member gene network 1st clone VS intramodular connectivities per module member gene network 2nd clone. statistic calculated possible jackknifed versions modules, created removing target gene assigned given module (regulators never excluded). jackknifed module compared posible pairs clones, within across species, resulting cor.kIM value per jackknifed module version clone pair. Finally, cor.kIM values summarized per module clone pair taking median 95% confidence interval across jackknifed module versions.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pres_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preservation statistics of the pruned modules — pres_stats","text":"","code":"pres_stats"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pres_stats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Preservation statistics of the pruned modules — pres_stats","text":"data frame 252 rows 10 columns: regulator Character, transcriptional regulator. module_size Module size, numer target genes assigned regulator. clone1, clone2 names clones compared. species1, species2 names species 'clone1' 'clone2' belongs , respectively. cor_kIM median cor.kIM across jackknifed versions module. var_cor_kIM variance cor.kIM across jackknifed versions module. lwr_cor_kIM lower bound 95% confidence interval cor.kIM calculated jackknifing. upr_cor_kIM upper bound 95% confidence interval cor.kIM calculated jackknifing.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pres_stats_jk.html","id":null,"dir":"Reference","previous_headings":"","what":"Preservation statistics of the original and jackknifed pruned modules — pres_stats_jk","title":"Preservation statistics of the original and jackknifed pruned modules — pres_stats_jk","text":"Correlation intramodular connectivities (cor_kIM) per clone pair original jackknifed versions pruned modules. jackknifed versions modules created removing target gene assigned module (regulators never excluded). preservation statistic cor.kIM calculated original module well jackknife module version comparing clone others, within across species. cor.kIM quantifies well connectivity patterns preserved networks two clones, mathematically correlation intramodular connectivities per module member gene network 1st clone VS intramodular connectivities per module member gene network 2nd clone.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pres_stats_jk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preservation statistics of the original and jackknifed pruned modules — pres_stats_jk","text":"","code":"pres_stats_jk"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pres_stats_jk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Preservation statistics of the original and jackknifed pruned modules — pres_stats_jk","text":"data frame 8352 rows 8 columns: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. type Character, module type (orig = original jk = jackknifed). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk' nameOfRegulator_orig case module type 'orig'). gene_removed Character, name gene removed jackknifing (NA case module type 'orig'). clone1, clone2 Character names clones compared. species1, species2 Character, names species clone1 clone2 belong , respectively. cor_kIM Correlation intramodular connectivities.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune modules — pruneModules","title":"Prune modules — pruneModules","text":"Prunes initial modules keeping best targets transcriptional regulator.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune modules — pruneModules","text":"","code":"pruneModules(   initial_modules,   method = c(\"UIK_adj\", \"UIK_adj_kIM\", \"topN\"),   consensus_network = NULL,   min_module_size = 20L,   max_frac_modules_lost = 0.02,   exponent = 1L,   N = 50L )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune modules — pruneModules","text":"initial_modules Data frame initial modules, required columns: regulator Character, transcriptional regulator. target Character, member gene regulator's initial module. weight Numeric, consensus edge weight/adjacency, weighted mean clonewise edge weights. method Character, pruning method, one \"UIK_adj\", \"UIK_adj_kIM\", \"topN\". consensus_network igraph object, consensus network across species clones. min_module_size Integer, lower threshold module size case methods \"UIK_adj\" \"UIK_adj_kIM\" (default: 20). max_frac_modules_lost Numeric, upper threshold fraction removed modules case methods \"UIK_adj\" \"UIK_adj_kIM\" (default: 0.02). exponent Integer, exponent regulator-target adjacency intramodular connectivity raised power cumulative sum curve calculation case methods \"UIK_adj\" \"UIK_adj_kIM\" (default: 1, .e. regulator-target adjacencies intramodular connectivities stay unchanged). N integer named integer vector specifying desired pruned module size(s) case method \"topN\" (default: 50).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune modules — pruneModules","text":"Data frame pruned modules following columns: regulator Character, transcriptional regulator. module_size Integer, numer genes assigned regulator. target Character, target gene transcriptional regulator (member regulator's pruned module). weight Numeric, consensus edge weight/adjacency, weighted mean clonewise edge weights. Additional columns present initial_modules also preserved pruned_modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prune modules — pruneModules","text":"3 methods implemented choose best targets: topN: Takes fixed number targets per regulator highest regulator-target adjacencies (details see pruneModules_topN). UIK_adj: Applies dynamic stepwise pruning based regulator-target adjacencies (details see pruneModules_UIK_adj). UIK_adj_kIM: Applies dynamic stepwise pruning based regulator-target adjacencies intramodular connectivities (details see pruneModules_UIK_adj_kIM).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prune modules — pruneModules","text":"","code":"pruned_modules <- pruneModules(initial_modules, \"topN\", N = 30) pruned_modules <- pruneModules(initial_modules, \"UIK_adj\") #> Step 1: filtering targets based on their adjacencies to the regulator #> Median module size after filtering: 92.5 #> Step 2: filtering targets based on their adjacencies to the regulator #> Median module size after filtering: 35 pruned_modules <- pruneModules(initial_modules, \"UIK_adj_kIM\", consensus_network) #> Step 1: filtering targets based on their adjacencies to the regulator #> Median module size after filtering: 92.5 #> Step 2: filtering targets based on their intramodular connectivities #> Median module size after filtering: 33"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune modules based on the regulator-target adjacencies using dynamic filtering — pruneModules_UIK_adj","title":"Prune modules based on the regulator-target adjacencies using dynamic filtering — pruneModules_UIK_adj","text":"Prunes initial modules applying dynamic stepwise pruning based regulator-target adjacencies.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune modules based on the regulator-target adjacencies using dynamic filtering — pruneModules_UIK_adj","text":"","code":"pruneModules_UIK_adj(   initial_modules,   min_module_size = 20L,   max_frac_modules_lost = 0.02,   exponent = 1L )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune modules based on the regulator-target adjacencies using dynamic filtering — pruneModules_UIK_adj","text":"initial_modules Data frame initial modules, required columns: regulator Character, transcriptional regulator. target Character, member gene regulator's initial module. weight Numeric, consensus edge weight/adjacency, weighted mean clonewise edge weights. min_module_size Integer, lower threshold module size. Modules smaller size threshold removed pruning step (default: 20). max_frac_modules_lost Numeric, upper threshold fraction removed modules (default: 0.02). exponent Integer, exponent regulator-target adjacency intramodular connectivity raised power cumulative sum curve calculation (default: 1, .e. regulator-target adjacencies intramodular connectivities stay unchanged).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune modules based on the regulator-target adjacencies using dynamic filtering — pruneModules_UIK_adj","text":"Data frame pruned modules following columns: regulator Character, transcriptional regulator. module_size Integer, numer genes assigned regulator. target Character, target gene transcriptional regulator (member regulator's pruned module). weight Numeric, consensus edge weight/adjacency, weighted mean clonewise edge weights. Additional columns present initial_modules also preserved pruned_modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prune modules based on the regulator-target adjacencies using dynamic filtering — pruneModules_UIK_adj","text":"module, initial module members filtered successive steps based regulator-target edge weight/adjacency, quantifies strongly target connected regulator. step, cumulative sum curve regulator-target adjacencies calculated per module, knee point curve identified using Unit Invariant Knee (UIK) method (see uik), targets rank higher knee point kept. modules containing less target genes min_module_size removed pruning step. steps continue fraction removed modules becomes higher max_frac_modules_lost. recommended set min_module_size least 20, correlation-based preservation statistics next steps might coupled high uncertainty modules smaller (see calculatePresStats). like keep modules analysis, please set max_frac_modules_lost 0. exponent set higher 1, adjacencies raised equivalent power calculating cumulative sum curves knee points. setting parameter min_module_size prevents modules becoming small, exact number target genes per regulator pre-defined, line notion different regulators can effect different numbers genes. also hard cutoff applied regulator-target adjacencies, using knee point detection target genes filtered data-driven way. modules allowed overlap, addition module, regulator can assigned another regulator's module well, line notion genes can multifunctional gene regulation can combinatorial.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Prune modules based on the regulator-target adjacencies using dynamic filtering — pruneModules_UIK_adj","text":"Christopoulos, D. (2016). Introducing Unit Invariant Knee (UIK) Objective Choice Elbow Point Multivariate Data Analysis Techniques. SSRN Electronic Journal. https://doi.org/10.2139/SSRN.3043076","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prune modules based on the regulator-target adjacencies using dynamic filtering — pruneModules_UIK_adj","text":"","code":"pruned_modules_UIK_adj <- pruneModules_UIK_adj(initial_modules) #> Step 1: filtering targets based on their adjacencies to the regulator #> Median module size after filtering: 92.5 #> Step 2: filtering targets based on their adjacencies to the regulator #> Median module size after filtering: 35"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj_kIM.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune modules based on the regulator-target adjacencies and intramodular connectivities using dynamic filtering — pruneModules_UIK_adj_kIM","title":"Prune modules based on the regulator-target adjacencies and intramodular connectivities using dynamic filtering — pruneModules_UIK_adj_kIM","text":"Prunes initial modules applying dynamic stepwise pruning based regulator-target adjacencies intramodular connectivities.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj_kIM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune modules based on the regulator-target adjacencies and intramodular connectivities using dynamic filtering — pruneModules_UIK_adj_kIM","text":"","code":"pruneModules_UIK_adj_kIM(   initial_modules,   consensus_network,   min_module_size = 20L,   max_frac_modules_lost = 0.02,   exponent = 1L )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj_kIM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune modules based on the regulator-target adjacencies and intramodular connectivities using dynamic filtering — pruneModules_UIK_adj_kIM","text":"initial_modules Data frame initial modules, required columns: regulator Character, transcriptional regulator. target Character, member gene regulator's initial module. weight Numeric, consensus edge weight/adjacency, weighted mean clonewise edge weights. consensus_network igraph object, consensus network across species clones. min_module_size Integer, lower treshold module size. Modules smaller size threshold removed pruning step (default: 20). max_frac_modules_lost Numeric, upper threshold fraction removed modules (default: 0.02). exponent Integer, exponent regulator-target adjacency intramodular connectivity raised power cumulative sum curve calculation (default: 1, .e. regulator-target adjacencies intramodular connectivities stay unchanged).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj_kIM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune modules based on the regulator-target adjacencies and intramodular connectivities using dynamic filtering — pruneModules_UIK_adj_kIM","text":"Data frame pruned modules following columns: regulator Character, transcriptional regulator. module_size Integer, numer genes assigned regulator. target Character, target gene transcriptional regulator (member regulator's pruned module). weight Numeric, consensus edge weight/adjacency, weighted mean clonewise edge weights. Additional columns present initial_modules also preserved pruned_modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj_kIM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prune modules based on the regulator-target adjacencies and intramodular connectivities using dynamic filtering — pruneModules_UIK_adj_kIM","text":"module, initial module members filtered successive steps based 2 metrics alternately: 1) regulator-target edge weight/adjacency, quantifies strongly target connected regulator, 2) intramodular connectivity, quantifies strongly target connected genes module. step, cumulative sum curve based one two characteristics calculated per module, knee point curve identified using Unit Invariant Knee (UIK) method (see uik), targets rank higher knee point kept. first step based regulator-target adjacencies, second step based intramodular connectivities, third step based regulator-target adjacencies . intramodular connectivity recalculated relevant filtering step based -current module assignment. modules containing less target genes min_module_size removed pruning step. steps continue fraction removed modules becomes higher max_frac_modules_lost. recommended set min_module_size least 20, correlation-based preservation statistics next steps might coupled high uncertainty modules smaller (see calculatePresStats). like keep modules analysis, please set max_frac_modules_lost 0. exponent set higher 1, regulator-target adjacencies intramodular connectivities raised equivalent power calculating cumulative sum curves knee points. Pruning based intramodular connectivities addition regulator-target adjacencies ensures chosen targets co-vary just main regulator also rest module. intramodular connections targets can carry important information combinatorial regulation, feedback loops co-functionality. setting parameter min_module_size prevents modules becoming small, exact number target genes per regulator pre-defined, line notion different regulators can effect different numbers genes. also hard cutoffs applied regulator-target adjacencies intramodular connectivities, using knee point detection target genes filtered data-driven way. modules allowed overlap, addition module, regulator can assigned another regulator's module well, line notion genes can multifunctional gene regulation can combinatorial.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj_kIM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Prune modules based on the regulator-target adjacencies and intramodular connectivities using dynamic filtering — pruneModules_UIK_adj_kIM","text":"Christopoulos, D. (2016). Introducing Unit Invariant Knee (UIK) Objective Choice Elbow Point Multivariate Data Analysis Techniques. SSRN Electronic Journal. https://doi.org/10.2139/SSRN.3043076","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_UIK_adj_kIM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prune modules based on the regulator-target adjacencies and intramodular connectivities using dynamic filtering — pruneModules_UIK_adj_kIM","text":"","code":"pruned_modules_UIK_adj_kIM <- pruneModules_UIK_adj_kIM(initial_modules, consensus_network) #> Step 1: filtering targets based on their adjacencies to the regulator #> Median module size after filtering: 92.5 #> Step 2: filtering targets based on their intramodular connectivities #> Median module size after filtering: 33"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_topN.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune modules based on the regulator-target adjacencies by keeping a fixed number of top targets — pruneModules_topN","title":"Prune modules based on the regulator-target adjacencies by keeping a fixed number of top targets — pruneModules_topN","text":"Prunes initial modules keeping fixed number targets per transcriptional regulator highest regulator-target adjacencies.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_topN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune modules based on the regulator-target adjacencies by keeping a fixed number of top targets — pruneModules_topN","text":"","code":"pruneModules_topN(initial_modules, N = 50L)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_topN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune modules based on the regulator-target adjacencies by keeping a fixed number of top targets — pruneModules_topN","text":"initial_modules Data frame initial modules, required columns: regulator Character, transcriptional regulator. target Character, member gene regulator's initial module. weight Numeric, consensus edge weight/adjacency, weighted mean clonewise edge weights. N Either integer specifying single desired pruned module size modules named integer vector specifying desired pruned module size regulator (default: 50).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_topN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune modules based on the regulator-target adjacencies by keeping a fixed number of top targets — pruneModules_topN","text":"Data frame pruned modules following columns: regulator Character, transcriptional regulator. module_size Integer, numer genes assigned regulator. target Character, target gene transcriptional regulator (member regulator's pruned module). weight Numeric, consensus edge weight/adjacency, weighted mean clonewise edge weights. Additional columns present initial_modules also preserved pruned_modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_topN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prune modules based on the regulator-target adjacencies by keeping a fixed number of top targets — pruneModules_topN","text":"pruned module output function contains regulator N best target genes. choosing best targets, genes ranked based strongly connected regulator (regulator-target edge weight/adjacency). Based prior biological knowledge, N can set different value different regulators, however, cases just desired module size modules. Fixing sizes modules number simple widespread approach. modules allowed overlap, addition module, regulator can assigned another regulator's module well, line notion genes can multifunctional gene regulation can combinatorial.","code":""},{"path":[]},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruneModules_topN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prune modules based on the regulator-target adjacencies by keeping a fixed number of top targets — pruneModules_topN","text":"","code":"pruned_modules_top50 <- pruneModules_topN(initial_modules, 50)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruned_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Pruned modules — pruned_modules","title":"Pruned modules — pruned_modules","text":"Pruned modules created dynamic pruning initial modules via \"UIK_adj_kIM\" method. initial module members filtered successive steps based adjacency regulator intramodular connectivitiy alternately. step, cumulative sum curve based one two characteristics calculated per module, targets knee point curve kept. process continued module sizes became small possible without median falling pre-defined minimum 20 genes.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruned_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pruned modules — pruned_modules","text":"","code":"pruned_modules"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/pruned_modules.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pruned modules — pruned_modules","text":"data frame 225 rows 9 columns: regulator Character, transcriptional regulator. target Character, target gene transcriptional regulator (member regulator's pruned module). weight Numeric, consensus edge weight/adjacency, weighted average clonewise adjacencies. n_supporting_clones number clones edge detected. supporting_clones list clones edge detected. rho Approximate Spearman's correlation coefficient 2 genes' expression profiles form edge. p.adj BH-corrected approximate p-value rho. direction Character specifying direction regulation regulator target, either \"+\" \"-\". module_size Module size, numer target genes assigned regulator.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_dist_jk.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance measures of the the original and jackknifed random modules — random_dist_jk","title":"Distance measures of the the original and jackknifed random modules — random_dist_jk","text":"Distance measures per clone pair original jackknifed versions random modules.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_dist_jk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance measures of the the original and jackknifed random modules — random_dist_jk","text":"","code":"random_dist_jk"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_dist_jk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Distance measures of the the original and jackknifed random modules — random_dist_jk","text":"named list 232 elements containing distance measures per (original jackknifed) module version. element data frame 72 rows 10 columns: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. type Character, module type (orig = original jk = jackknifed). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk' nameOfRegulator_orig case module type 'orig'). gene_removed Character, name gene removed jackknifing (NA case module type 'orig'). clone1, clone2 Character names clones compared. species1, species2 Character, names species clone1 clone2 belong , respectively. dist Numeric, distance measure ranging 0 1, calculated based correlation intramodular connectivities.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_dist_jk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance measures of the the original and jackknifed random modules — random_dist_jk","text":"jackknifed versions modules created removing target gene assigned module (regulators never excluded). distance measures calculated based correlation intramodular connectivities: $$dist = \\frac{1 - cor.kIM}{2}$$ (correlation 1 corresponds distance 0, whereas correlation -1 corresponds distance 1). element list corresponds jackknife module version contains distance measures possible pairs clones module version.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Random modules — random_modules","title":"Random modules — random_modules","text":"Random modules match actual (pruned) modules size. random modules regulators contain number target genes actual modules, target genes randomly drawn genes network.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random modules — random_modules","text":"","code":"random_modules"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_modules.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Random modules — random_modules","text":"data frame 225 rows 3 columns: regulator Character, transcriptional regulator. target Member regulator's random module. module_size Module size, numer target genes assigned regulator.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_pres_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Preservation statistics of the random modules — random_pres_stats","title":"Preservation statistics of the random modules — random_pres_stats","text":"Correlation intramodular connectivities (cor_kIM) per clone pair random module. preservation statistic cor.kIM quantifies well connectivity patterns preserved networks two clones, mathematically correlation intramodular connectivities per module member gene network 1st clone VS intramodular connectivities per module member gene network 2nd clone. statistic calculated possible jackknifed versions modules, created removing target gene assigned given module (regulators never excluded). jackknifed module compared posible pairs clones, within across species, resulting cor.kIM value per jackknifed module version clone pair. Finally, cor.kIM values summarized per module clone pair taking median 95% confidence interval across jackknifed module versions.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_pres_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preservation statistics of the random modules — random_pres_stats","text":"","code":"random_pres_stats"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_pres_stats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Preservation statistics of the random modules — random_pres_stats","text":"data frame 252 rows 10 columns: regulator Character, transcriptional regulator. module_size Module size, numer target genes assigned regulator. clone1, clone2 names clones compared. species1, species2 names species 'clone1' 'clone2' belongs , respectively. cor_kIM median cor.kIM across jackknifed versions module. var_cor_kIM variance cor.kIM across jackknifed versions module. lwr_cor_kIM lower bound 95% confidence interval cor.kIM calculated jackknifing. upr_cor_kIM upper bound 95% confidence interval cor.kIM calculated jackknifing.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_pres_stats_jk.html","id":null,"dir":"Reference","previous_headings":"","what":"Preservation statistics of the the original and jackknifed random modules — random_pres_stats_jk","title":"Preservation statistics of the the original and jackknifed random modules — random_pres_stats_jk","text":"Correlation intramodular connectivities (cor_kIM) per clone pair original jackknifed versions random modules. jackknifed versions modules created removing target gene assigned module (regulators never excluded). preservation statistic cor.kIM calculated original module well jackknife module version comparing clone others, within across species. cor.kIM quantifies well connectivity patterns preserved networks two clones, mathematically correlation intramodular connectivities per module member gene network 1st clone VS intramodular connectivities per module member gene network 2nd clone.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_pres_stats_jk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preservation statistics of the the original and jackknifed random modules — random_pres_stats_jk","text":"","code":"random_pres_stats_jk"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_pres_stats_jk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Preservation statistics of the the original and jackknifed random modules — random_pres_stats_jk","text":"data frame 8352 rows 8 columns: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. type Character, module type (orig = original jk = jackknifed). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk' nameOfRegulator_orig case module type 'orig'). gene_removed Character, name gene removed jackknifing (NA case module type 'orig'). clone1, clone2 Character names clones compared. species1, species2 Character, names species clone1 clone2 belong , respectively. cor_kIM Correlation intramodular connectivities.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_tree_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree-based statistics of the random modules — random_tree_stats","title":"Tree-based statistics of the random modules — random_tree_stats","text":"Tree-based statistics per random module. trees reconstructed based module preservation scores (cor.kIM) within across species. tips resulting tree represent clones branch lengths represent dissimilarity connectivity patterns clones. total tree length sum branch lengths tree measures module variability within across species, within-species_diversity sum human, gorilla cynomolgus within-species branch lengths measures module variability within species . statistics calculated possible jackknifed versions modules, created removing target gene assigned given module (regulators never excluded). statistics summarized per module taking median 95% confidence interval across jackknifed module versions.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_tree_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree-based statistics of the random modules — random_tree_stats","text":"","code":"random_tree_stats"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_tree_stats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tree-based statistics of the random modules — random_tree_stats","text":"data frame 7 rows 10 columns: regulator Character, transcriptional regulator. module_size Module size, numer target genes assigned regulator. total_tree_length median total tree lengths across jackknifed versions module. var_total_tree_length variance total tree lengths across jackknifed versions module. lwr_total_tree_length lower bound 95% confidence interval total tree length calculated jackknifing. upr_total_tree_length upper bound 95% confidence interval total tree length calculated jackknifing. within_species_diversity median within-species_diversity values across jackknifed versions module. var_within_species_diversity variance within-species_diversity values across jackknifed versions module. lwr_within_species_diversity lower bound 95% confidence interval within-species_diversity calculated jackknifing. upr_within_species_diversity upper bound 95% confidence interval within-species_diversity calculated jackknifing.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_tree_stats_jk.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree-based statistics of the original and jackknifed random modules — random_tree_stats_jk","title":"Tree-based statistics of the original and jackknifed random modules — random_tree_stats_jk","text":"Tree-based statistics calculated original jackknifed versions random modules. module version, tree reconstructed based module preservation scores within across species. tips resulting tree represent clones branch lengths represent dissimilarity connectivity patterns clones. Branches clones different species carry information cross-species differences, branches clones species carry information within-species diversity.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_tree_stats_jk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree-based statistics of the original and jackknifed random modules — random_tree_stats_jk","text":"","code":"random_tree_stats_jk"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_tree_stats_jk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tree-based statistics of the original and jackknifed random modules — random_tree_stats_jk","text":"data frame 232 rows 16 columns: regulator Character, transcriptional regulator. module_size Module size, numer target genes assigned regulator. type Character, module type (orig = original jk = jackknifed). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk' nameOfRegulator_orig case module type 'orig'). gene_removed name gene removed jackknifing (NA case module type 'orig'). within_species_diversity Numeric, sum human, gorilla cynomolgus diversity. total_tree_length Numeric, sum branch lengths tree. human_diversity Numeric, sum branch lengths subtree contains human tips. gorilla_diversity Numeric, sum branch lengths subtree contains gorilla tips. cynomolgus_diversity Numeric, sum branch lengths subtree contains cynomolgus tips. human_monophyl Logical indicating whether tree monophyletic human clones. gorilla_monophyl Logical indicating whether tree monophyletic gorilla clones. cynomolgus_monophyl Logical indicating whether tree monophyletic cynomolgus clones. human_to_other_branch_length Numeric, length internal branch connects subtree human clones subtree clones. NA tree monophyletic human clones. gorilla_to_other_branch_length Numeric, length internal branch connects subtree gorilla clones subtree clones. NA tree monophyletic gorilla clones. cynomolgus_to_other_branch_length Numeric, length internal branch connects subtree cynomolgus clones subtree clones. NA tree monophyletic cynomolgus clones.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_trees_jk.html","id":null,"dir":"Reference","previous_headings":"","what":"Trees of the original and jackknifed random modules — random_trees_jk","title":"Trees of the original and jackknifed random modules — random_trees_jk","text":"Neighbor-joining trees representing similarities connectivity patterns across 9 primate clones original jackknifed versions random modules. jackknifed versions modules created removing target gene assigned module (regulators never excluded). module versions, trees inferred based preservation statistic cor.kIM (correlation intramodular connectivities): first, preservation scores calculated possible clone pairs, converted distance matrix clones, finally trees reconstructed based distance matrix using neighbor-joining algorithm. result single tree original jackknife module tips represent clones branch lengths represent dissimilarity connectivity patterns clones.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_trees_jk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trees of the original and jackknifed random modules — random_trees_jk","text":"","code":"random_trees_jk"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/random_trees_jk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Trees of the original and jackknifed random modules — random_trees_jk","text":"named list 232 elements containing neighbor-joining trees [phylo] objects.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/reconstructTrees.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct trees across all modules — reconstructTrees","title":"Reconstruct trees across all modules — reconstructTrees","text":"Reconstructs neighbor-joining trees based pairwise distance measures clones.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/reconstructTrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct trees across all modules — reconstructTrees","text":"","code":"reconstructTrees(dist_list, n_cores = 1L)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/reconstructTrees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct trees across all modules — reconstructTrees","text":"dist_list named list containing distance measures data frames modules jackknifed module versions, output convertPresToDist. Required columns data frames: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulator. type Character, module type (\"orig\" = original \"jk\" = jackknifed, needed distances calculated jackknifing). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type \"jk\" nameOfRegulator_orig case module type \"orig\", needed distances calculated jackknifing). gene_removed Character, name gene removed jackknifing (NA case module type \"orig\", needed distances calculated jackknifing). clone1, clone2 Character names clones compared. species1, species2 Character, names species clone1 clone2 belong , respectively. dist Numeric, distance measure used tree reconstruction. n_cores Number cores.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/reconstructTrees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct trees across all modules — reconstructTrees","text":"named list containing neighbor-joining trees phylo objects modules jackknifed module versions input dist_list. trees contain component species specifies species tip belongs component info stores metadata module/jackknifed module version data frame format.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/reconstructTrees.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reconstruct trees across all modules — reconstructTrees","text":"part CroCoNet approach, pairwise module preservation scores calculated clones, within across species, quantify similar module connectivity patterns networks two clones (see calculatePresStats). preservation scores converted distance measures (see convertPresToDist). function first sorts distance measures module/jackknifed module version distance matrix clones, based distance matrix reconstructs tree using neighbor-joining algorithm. procedure results single tree per module/jackknifed module version (depending whether preservation statistics calculated without jackknifing, see see parameter jackknife function calculatePresStats). tips trees represent clones branch lengths represent dissimilarity module topology networks 2 clones. trees output list phylo objects. next steps pipeline, statistics based trees can used identify conserved diverged modules pinpoint target genes within modules contribute conservation/divergence (see calculateTreeStats, fitTreeStatsLm, findConservedDivergedModules findConservedDivergedTargets).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/reconstructTrees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct trees across all modules — reconstructTrees","text":"","code":"trees_jk <- reconstructTrees(dist_jk)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/regulators.html","id":null,"dir":"Reference","previous_headings":"","what":"Transcriptional regulators — regulators","title":"Transcriptional regulators — regulators","text":"7 important transcriptional regulators early neural differentiation used cores assemble modules around .","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/regulators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcriptional regulators — regulators","text":"","code":"regulators"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/regulators.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Transcriptional regulators — regulators","text":"character vector 7 elements.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/removeOverlappingGenePairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove gene pairs with overlapping annotations — removeOverlappingGenePairs","title":"Remove gene pairs with overlapping annotations — removeOverlappingGenePairs","text":"Removes gene pairs (edges) overlapping annotations genomes least 1 species networks.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/removeOverlappingGenePairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove gene pairs with overlapping annotations — removeOverlappingGenePairs","text":"","code":"removeOverlappingGenePairs(   network_list,   gtf_list,   clone2species,   gene_col = c(\"gene_name\", \"gene_id\"),   n_cores = 1L )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/removeOverlappingGenePairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove gene pairs with overlapping annotations — removeOverlappingGenePairs","text":"network_list named list igraph objects containing networks clones. gtf_list named list GRanges objects containing genome annotations species. clone2species data frame specifying species clone belongs , required columns: clone Character, name clone. species Character, name species. gene_col Character specifying type identifier network nodes , one \"gene_name\", \"gene_id\". function looks names network nodes corresponding column GTF files. n_cores Integer, number cores (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/removeOverlappingGenePairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove gene pairs with overlapping annotations — removeOverlappingGenePairs","text":"named list igraph objects containing networks clones, removal gene pairs overlapping annotations. new edge attribute added igraph objects: genomic_dist Numeric, genomic distance 2 genes form edge (Inf 2 genes annotated different chromosomes/contigs).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/removeOverlappingGenePairs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove gene pairs with overlapping annotations — removeOverlappingGenePairs","text":"Mapping counting problematic overlapping genomic features: difficult tell apart read belongs gene. Often parts reads one gene assigned gene, leading correlated expression profiles simply due genomic position. marginal effect results DE analysis, can cause false positive edges high edge weights case network analysis. functions circumvents potential artefacts removing edges overlapping genes. first step, positions network genes determined genome species. Depending value gene_col, names network nodes matched entries either \"gene_name\" \"gene_id\" column provided GTF files. second step, gene pairs overlapping annotations identified genome. Finally, gene pairs removed networks (just networks species found overlap!). remaining edges networks, function adds genomic distance 2 genes form edge edge attribute \"genomic_dist\". genes annotated different chromosomes, distance set Inf. information can used sanity checking, e.g. check relationship edge weight genomic proximity.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/removeOverlappingGenePairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove gene pairs with overlapping annotations — removeOverlappingGenePairs","text":"","code":"network_list_filt <- removeOverlappingGenePairs(network_list_raw,                                                 gtf_list,                                                 clone2species,                                                 \"gene_name\") #> Number of gene pairs that overlap in any of the genomes: #> 1"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/scaleFreeFitRSquared.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate \\(R^2\\) value of the scale-free model fit for the provided connectivities — scaleFreeFitRSquared","title":"Calculate \\(R^2\\) value of the scale-free model fit for the provided connectivities — scaleFreeFitRSquared","text":"Calculate \\(R^2\\) value scale-free model fit provided connectivities","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/scaleFreeFitRSquared.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate \\(R^2\\) value of the scale-free model fit for the provided connectivities — scaleFreeFitRSquared","text":"","code":"scaleFreeFitRSquared(k)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/scaleFreeFitRSquared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate \\(R^2\\) value of the scale-free model fit for the provided connectivities — scaleFreeFitRSquared","text":"k Numeric vector, connectivities network.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/scaleFreeFitRSquared.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate \\(R^2\\) value of the scale-free model fit for the provided connectivities — scaleFreeFitRSquared","text":"Numeric, \\(R^2\\) value scale-free model fit.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/sce.html","id":null,"dir":"Reference","previous_headings":"","what":"SCE object of the primate neural differentiation dataset — sce","title":"SCE object of the primate neural differentiation dataset — sce","text":"subset primate neural differentiation scRNA-seq dataset SCE format. data collected early neural differentiation human, gorilla cynomolgus macaque iPS cells 3 human, 2 gorilla 4 cynomolgus cell lines (clones). Using directed differentiation protocol, cells differentiated neural progenitor cells (NPCs) course 9 days, scRNA-seq data obtained six time points (days 0, 1, 3, 5, 7 9) process. SCE object contains raw log-normalized counts well metadata 300 genes 900 cells (100 cells per clone).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCE object of the primate neural differentiation dataset — sce","text":"","code":"sce"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/sce.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SCE object of the primate neural differentiation dataset — sce","text":"SCE object 300 rows, 900 columns, 9 metadata columns 2 assays. Metadata columns: species Name species. clone Name clone/cell line. day day cell collected. n_UMIs Number UMIs detected. n_genes Number genes detected. perc_mito Percent mitochondrial reads. sizeFactor Size factor scaling normalization, calculated first per clone using [scran::computeSumFactors] [scran::quickCluster], adjusted [batchelor::multiBatchNorm] remove systematic differences covergae across clones. pseudotime Pseudotime inferred [SCORPIUS::infer_trajectory]. cell_type Cell type labels predicted [SingleR::classifySingleR] using embryoid body dataset Rhodes et al. 2022 reference. Assays: counts Raw counts. logcounts Log-normalized counts created first calculating size factors per clone using [scran::computeSumFactors] [scran::quickCluster], adjusted remove systematic differences covergae across clones log-normalizing [batchelor::multiBatchNorm].","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/selectPower.html","id":null,"dir":"Reference","previous_headings":"","what":"Select power for scale-free transfrmation — selectPower","title":"Select power for scale-free transfrmation — selectPower","text":"Select power scale-free transfrmation","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/selectPower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select power for scale-free transfrmation — selectPower","text":"","code":"selectPower(scale_free_fit, R2_cutoff = 0.85, rescue = TRUE)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/selectPower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select power for scale-free transfrmation — selectPower","text":"scale_free_fit data frame containing \\(R^2\\) values scale-free model fit network soft-thresholding power. R2_cutoff Numeric, \\(R^2\\) cutoff network needs pass selecting power (default: 0.85). rescue Logical indicating whether still select power none powers achieve \\(R^2\\) values greater specified R2_cut networks. TRUE (default), power highest minimum \\(R^2\\) across networks output case cutoff met, FALSE, function gives error case cutoff met.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/selectPower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select power for scale-free transfrmation — selectPower","text":"Numeric, best power use scale-free transformation.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/summarizeJackknifeStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize jackknife statistics — summarizeJackknifeStats","title":"Summarize jackknife statistics — summarizeJackknifeStats","text":"Calculates estimate confidence interval module-level statistic based values obtained jackknifing module.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/summarizeJackknifeStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize jackknife statistics — summarizeJackknifeStats","text":"","code":"summarizeJackknifeStats(   stats_df,   stats = setdiff(colnames(stats_df), c(\"regulator\", \"type\", \"id\", \"gene_removed\",     \"module_size\", \"clone\", \"species\", \"clone1\", \"clone2\", \"species1\", \"species2\")),   summary_method = ifelse(endsWith(stats, \"monophyl\"), \"mean\", \"median\"),   conf_level = 0.95 )"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/summarizeJackknifeStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize jackknife statistics — summarizeJackknifeStats","text":"stats_df Data frame statistics per jackknife module version: regulator Character, transcriptional regulator. module_size Integer, numer target genes assigned regulato.r type Character, module type (orig = original jk = jackknifed). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk' nameOfRegulator_orig case module type 'orig'). gene_removed Character, name gene removed jackknifing (NA case module type 'orig'). clone Character, name clone (optional, needed statistics calculated per clone). species Character, name species (optional, needed statistics calculated per clone per species). clone1, clone2 Character, names clones compared (optional, needed statistics calculated per clone pair). species1, species2 Character, names species compared (optional, needed statistics calculated per clone pair species pair). {{nameOfStat}} Numeric, integer logical, one columns containing values statistic(s) specified 'stats'. stats Character, name statistic(s) need summarized. summary_method Character character vector, summary method (\"mean\" \"median\") used statistics 'stats'. one value provided, summary method used statistics, vector provided, element vector used corresponding element 'stats'. default, \"mean\" statistics measuring monophyleticity \"median\" statistics. conf_level Numeric, confidence level interval (default: 0.95).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/summarizeJackknifeStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize jackknife statistics — summarizeJackknifeStats","text":"data frame statistics per module: regulator Character, transcriptional regulator. module_size Module size, numer target genes assigned regulator. clone name clone (column present input 'stats_df'). species name species (column present input 'stats_df'). clone1, clone2 names clones compared (column present input 'stats_df'). species1, species2 names species compared (column present input 'stats_df'). {{nameOfStat}} Numeric, one columns containing estimates (mean median) statistic(s) specified 'stats'. var_{{nameOfStat}} Numeric, one columns containing variances statistic(s) specified 'stats'. lwr_{{nameOfStat}} Numeric, one columns containing lower bounds confidence interval statistic(s) specified 'stats'. upr_{{nameOfStat}} Numeric, one columns containing upper bounds confidence interval statistic(s) specified 'stats'.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/summarizeJackknifeStats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize jackknife statistics — summarizeJackknifeStats","text":"gain information confidence various statistics, jackknifing can used: member gene module removed statistics re-calculated. way, median mean confidence interval across jackknifed versions can used estimate statistic interest module whole. continuous statistics median, boolean statistics mean recommended summary method.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/summarizeJackknifeStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize jackknife statistics — summarizeJackknifeStats","text":"","code":"pres_stats <- summarizeJackknifeStats(pres_stats_jk) tree_stats <- summarizeJackknifeStats(tree_stats_jk,                                       c(\"total_tree_length\", \"within_species_diversity\"))"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/summarizeStat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize values of a statistic — summarizeStat","title":"Summarize values of a statistic — summarizeStat","text":"Calculates estimate (mean median), confidence interval estimate specified confidence level variance data provided.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/summarizeStat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize values of a statistic — summarizeStat","text":"","code":"summarizeStat(values, summary_method, conf_level = 0.95)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/summarizeStat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize values of a statistic — summarizeStat","text":"values Numeric, integer logical vector. summary_method Character, measure central tendency (\"mean\" \"median\") used. conf_level Numeric, confidence level interval (default: 0.95).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/summarizeStat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize values of a statistic — summarizeStat","text":"data frame 1 row 4 columns: estimate Numeric, central tendency (mean median) 'values'. var Numeric, variance 'values'. lwr Numeric, lower bound confidence interval. upr Numeric, upper bound confidence interval.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/testPowers.html","id":null,"dir":"Reference","previous_headings":"","what":"Test soft-thresholding power values — testPowers","title":"Test soft-thresholding power values — testPowers","text":"Applies range soft-thresholding powers networks provided determines goodness fit soft power network.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/testPowers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test soft-thresholding power values — testPowers","text":"","code":"testPowers(network_list, powers = 1:20, n_cores = 1L)"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/testPowers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test soft-thresholding power values — testPowers","text":"network_list named list contains networks clone consensus network igraph format. powers numeric integer vector specifying soft-thresholding powers test. n_cores Integer, number cores (default: 1).","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/testPowers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test soft-thresholding power values — testPowers","text":"data frame containing \\(R^2\\) values scale-free model fit network soft-thresholding power.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/testPowers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test soft-thresholding power values — testPowers","text":"","code":"scale_free_fit <- testPowers(network_list, c(1, seq(2, 10, by = 2)))"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic tree — tree","title":"Phylogenetic tree — tree","text":"Rooted phylogenetic tree 3 primate species: human (Homo sapiens), gorilla (Gorilla gorilla) cynomolgus macaque (Macaca Fascicularis). tree created subsetting mammalian tree best estimates branch lengths Bininda-Edmons et al. 2007.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic tree — tree","text":"","code":"tree"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phylogenetic tree — tree","text":"[phylo] object 4 edges 3 nodes.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/tree.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Phylogenetic tree — tree","text":"Olaf R. P. Bininda-Emonds, Marcel Cardillo, Kate E. Jones, Ross D. E. MacPhee, Robin M. D. Beck, Richard Grenyer, Samantha . Price, Rutger . Vos, John L. Gittleman & Andy Purvis. \"delayed rise present-day mammals\" Nature 446, 507-512(29 March 2007). doi:10.1038/nature05634","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/tree_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree-based statistics of the pruned modules — tree_stats","title":"Tree-based statistics of the pruned modules — tree_stats","text":"Tree-based statistics per module. trees reconstructed based module preservation scores (cor.kIM) within across species. tips resulting tree represent clones branch lengths represent dissimilarity connectivity patterns clones. total tree length sum branch lengths tree measures module variability within across species, within-species_diversity sum human, gorilla cynomolgus within-species branch lengths measures module variability within species . statistics calculated possible jackknifed versions modules, created removing target gene assigned given module (regulators never excluded). statistics summarized per module taking median 95% confidence interval across jackknifed module versions.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/tree_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree-based statistics of the pruned modules — tree_stats","text":"","code":"tree_stats"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/tree_stats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tree-based statistics of the pruned modules — tree_stats","text":"data frame 7 rows 10 columns: regulator Character, transcriptional regulator. module_size Module size, numer target genes assigned regulator. total_tree_length median total tree lengths across jackknifed versions module. var_total_tree_length variance total tree lengths across jackknifed versions module. lwr_total_tree_length lower bound 95% confidence interval total tree length calculated jackknifing. upr_total_tree_length upper bound 95% confidence interval total tree length calculated jackknifing. within_species_diversity median within-species_diversity values across jackknifed versions module. var_within_species_diversity variance within-species_diversity values across jackknifed versions module. lwr_within_species_diversity lower bound 95% confidence interval within-species_diversity calculated jackknifing. upr_within_species_diversity upper bound 95% confidence interval within-species_diversity calculated jackknifing.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/tree_stats_jk.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree-based statistics of the original and jackknifed pruned modules — tree_stats_jk","title":"Tree-based statistics of the original and jackknifed pruned modules — tree_stats_jk","text":"Tree-based statistics calculated original jackknifed versions pruned modules. module version, tree reconstructed based module preservation scores within across species. tips resulting tree represent clones branch lengths represent dissimilarity connectivity patterns clones. Branches clones different species carry information cross-species differences, branches clones species carry information within-species diversity.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/tree_stats_jk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree-based statistics of the original and jackknifed pruned modules — tree_stats_jk","text":"","code":"tree_stats_jk"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/tree_stats_jk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tree-based statistics of the original and jackknifed pruned modules — tree_stats_jk","text":"data frame 232 rows 16 columns: regulator Character, transcriptional regulator. module_size Module size, numer target genes assigned regulator. type Character, module type (orig = original jk = jackknifed). id Character, unique ID module version (format: nameOfRegulator_jk_nameOfGeneRemoved case module type 'jk' nameOfRegulator_orig case module type 'orig'). gene_removed name gene removed jackknifing (NA case module type 'orig'). within_species_diversity Numeric, sum human, gorilla cynomolgus diversity. total_tree_length Numeric, sum branch lengths tree. human_diversity Numeric, sum branch lengths subtree contains human tips. gorilla_diversity Numeric, sum branch lengths subtree contains gorilla tips. cynomolgus_diversity Numeric, sum branch lengths subtree contains cynomolgus tips. human_monophyl Logical indicating whether tree monophyletic human clones. gorilla_monophyl Logical indicating whether tree monophyletic gorilla clones. cynomolgus_monophyl Logical indicating whether tree monophyletic cynomolgus clones. human_to_other_branch_length Numeric, length internal branch connects subtree human clones subtree clones. NA tree monophyletic human clones. gorilla_to_other_branch_length Numeric, length internal branch connects subtree gorilla clones subtree clones. NA tree monophyletic gorilla clones. cynomolgus_to_other_branch_length Numeric, length internal branch connects subtree cynomolgus clones subtree clones. NA tree monophyletic cynomolgus clones.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Trees of the pruned modules — trees","title":"Trees of the pruned modules — trees","text":"Neighbor-joining trees representing similarities connectivity patterns across 9 primate clones original (.e. jackknifed) pruned modules. modules, trees inferred based preservation statistic cor.kIM (correlation intramodular connectivities): first, preservation scores calculated possible clone pairs, converted distance matrix clones, finally trees reconstructed based distance matrix using neighbor-joining algorithm. result single tree per module tips represent clones branch lengths represent dissimilarity connectivity patterns clones.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trees of the pruned modules — trees","text":"","code":"trees"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/trees.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Trees of the pruned modules — trees","text":"named list 12 elements containing neighbor-joining trees [phylo] objects.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/trees_jk.html","id":null,"dir":"Reference","previous_headings":"","what":"Trees of the original and jackknifed pruned modules — trees_jk","title":"Trees of the original and jackknifed pruned modules — trees_jk","text":"Neighbor-joining trees representing similarities connectivity patterns across 9 primate clones original jackknifed versions pruned modules. jackknifed versions modules created removing target gene assigned module (regulators never excluded). module versions, trees inferred based preservation statistic cor.kIM (correlation intramodular connectivities): first, preservation scores calculated possible clone pairs, converted distance matrix clones, finally trees reconstructed based distance matrix using neighbor-joining algorithm. result single tree original jackknife module tips represent clones branch lengths represent dissimilarity connectivity patterns clones.","code":""},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/trees_jk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trees of the original and jackknifed pruned modules — trees_jk","text":"","code":"trees_jk"},{"path":"https://hellmann-lab.github.io/CroCoNet/reference/trees_jk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Trees of the original and jackknifed pruned modules — trees_jk","text":"named list 232 elements containing neighbor-joining trees [phylo] objects.","code":""}]
